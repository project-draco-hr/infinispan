{
  String className=clazz.getName();
  List<CachedMethod> l=richMethodCache.get(className);
  if (l == null) {
synchronized (AnnotatedMethodCache.class) {
      l=richMethodCache.get(className);
      if (l == null) {
        l=new LinkedList<CachedMethod>();
        for (        Map.Entry<String,List<CachedMethod>> e : basicMethodCache.entrySet()) {
          if (match(clazz,e.getKey(),classLoader))           l.addAll(e.getValue());
        }
        for (        Method m : ReflectionUtil.getAllMethodsShallow(clazz,annotation)) {
          CachedMethod cm=new CachedMethod(m);
          if (!l.contains(cm))           l.add(cm);
        }
      }
      richMethodCache.put(className,l);
    }
  }
  return l;
}
