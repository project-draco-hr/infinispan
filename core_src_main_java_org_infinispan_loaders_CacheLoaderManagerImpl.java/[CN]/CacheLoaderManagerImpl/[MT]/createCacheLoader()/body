{
  CacheLoader tmpLoader;
  if (clmConfig.usingChainingCacheLoader()) {
    ChainingCacheStore ccl=new ChainingCacheStore();
    tmpLoader=ccl;
    int numLoadersWithFetchPersistentState=0;
    for (    AbstractLoaderConfiguration cfg : clmConfig.cacheLoaders()) {
      if (cfg.fetchPersistentState())       numLoadersWithFetchPersistentState++;
      if (numLoadersWithFetchPersistentState > 1)       throw new Exception("Invalid cache loader configuration!!  Only ONE cache loader may have fetchPersistentState set to true.  Cache will not start!");
      assertNotSingletonAndShared(cfg);
      CacheLoader l=createCacheLoader(LegacyConfigurationAdaptor.adapt(cfg),cache);
      ccl.addCacheLoader(l,cfg);
    }
  }
 else {
    if (!clmConfig.cacheLoaders().isEmpty()) {
      AbstractLoaderConfiguration cfg=clmConfig.cacheLoaders().get(0);
      tmpLoader=createCacheLoader(LegacyConfigurationAdaptor.adapt(cfg),cache);
      if (cfg instanceof CacheStoreConfig)       assertNotSingletonAndShared(cfg);
    }
 else {
      return null;
    }
  }
  return tmpLoader;
}
