{
  CacheLoader tmpLoader;
  if (clmConfig.usingChainingCacheLoader()) {
    ChainingCacheStore ccl=new ChainingCacheStore();
    tmpLoader=ccl;
    int numLoadersWithFetchPersistentState=0;
    for (    LoaderConfiguration cfg : clmConfig.cacheLoaders()) {
      if (cfg instanceof StoreConfiguration) {
        StoreConfiguration scfg=(StoreConfiguration)cfg;
        assertNotSingletonAndShared(scfg);
        if (scfg.fetchPersistentState())         numLoadersWithFetchPersistentState++;
      }
      if (numLoadersWithFetchPersistentState > 1)       throw new Exception("Invalid cache loader configuration!!  Only ONE cache loader may have fetchPersistentState set to true.  Cache will not start!");
      CacheLoader l=createCacheLoader(LegacyConfigurationAdaptor.adapt(cfg),cache);
      ccl.addCacheLoader(l,cfg);
    }
  }
 else {
    if (!clmConfig.cacheLoaders().isEmpty()) {
      LoaderConfiguration cfg=clmConfig.cacheLoaders().get(0);
      if (cfg instanceof StoreConfiguration)       assertNotSingletonAndShared((StoreConfiguration)cfg);
      tmpLoader=createCacheLoader(LegacyConfigurationAdaptor.adapt(cfg),cache);
    }
 else {
      return null;
    }
  }
  return tmpLoader;
}
