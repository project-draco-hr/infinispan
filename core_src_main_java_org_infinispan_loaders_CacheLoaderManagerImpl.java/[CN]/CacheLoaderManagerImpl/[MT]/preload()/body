{
  if (loader != null) {
    if (clmConfig.preload()) {
      long start=0;
      boolean debugTiming=log.isDebugEnabled();
      if (debugTiming) {
        start=System.nanoTime();
        log.debugf("Preloading transient state from cache loader %s",loader);
      }
      Set<InternalCacheEntry> state;
      try {
        state=loadState();
      }
 catch (      CacheLoaderException e) {
        throw new CacheException("Unable to preload!",e);
      }
      List<Flag> flags=new ArrayList(Arrays.asList(CACHE_MODE_LOCAL,SKIP_OWNERSHIP_CHECK,IGNORE_RETURN_VALUES,SKIP_CACHE_STORE,SKIP_LOCKING));
      if (clmConfig.shared() || !(loader instanceof ChainingCacheStore)) {
        flags.add(SKIP_CACHE_STORE);
        if (!localIndexingEnabled())         flags.add(SKIP_INDEXING);
      }
 else {
        flags.add(SKIP_INDEXING);
      }
      AdvancedCache<Object,Object> flaggedCache=cache.getAdvancedCache().withFlags(flags.toArray(new Flag[]{}));
      for (      InternalCacheEntry e : state)       flaggedCache.put(e.getKey(),e.getValue(),e.getLifespan(),MILLISECONDS,e.getMaxIdle(),MILLISECONDS);
      if (debugTiming) {
        final long stop=System.nanoTime();
        log.debugf("Preloaded %s keys in %s",state.size(),Util.prettyPrintTime(stop - start,TimeUnit.NANOSECONDS));
      }
    }
  }
}
