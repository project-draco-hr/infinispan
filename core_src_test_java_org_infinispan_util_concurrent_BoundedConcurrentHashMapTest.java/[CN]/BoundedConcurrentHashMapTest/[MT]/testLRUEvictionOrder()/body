{
  final EvictionListener<Integer,Integer> l=new NullEvictionListener<Integer,Integer>(){
    private int index=0;
    private int entries[]=new int[]{1,0};
    @Override public void onEntryChosenForEviction(    Integer internalCacheEntry){
      assertEquals(entries[index++],internalCacheEntry.intValue());
    }
  }
;
  Map<Integer,Integer> bchm=new BoundedConcurrentHashMap<Integer,Integer>(3,1,Eviction.LRU,l,AnyEquivalence.INT,AnyEquivalence.INT);
  bchm.put(0,0);
  bchm.put(1,1);
  bchm.get(0);
  bchm.put(2,2);
  bchm.put(3,3);
  bchm.put(4,4);
}
