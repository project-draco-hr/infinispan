{
  for (int i=0; i < CACHE_SIZE * 2; i++) {
    cache.put("key-" + (i + 1),"value-" + (i + 1));
  }
  assertEquals("cache size too big: " + cache.size(),CACHE_SIZE,cache.size());
  assertEquals("eviction events count should be same with case size: " + evictionListener.getEvictedEvents(),CACHE_SIZE,evictionListener.getEvictedEvents().size());
  for (int i=0; i < CACHE_SIZE; i++) {
    cache.put("key-" + (i + 1),"value-" + (i + 1));
  }
  assertEquals(CACHE_SIZE,cache.size());
  int expectedEvictions;
  if (getEvictionStrategy() == EvictionStrategy.LIRS) {
    expectedEvictions=(int)Math.ceil(CACHE_SIZE + (CACHE_SIZE * .05));
  }
 else {
    expectedEvictions=CACHE_SIZE * 2;
  }
  assertEquals("eviction events count should be same with case size: " + evictionListener.getEvictedEvents(),expectedEvictions,evictionListener.getEvictedEvents().size());
}
