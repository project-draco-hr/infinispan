{
  validateNotMarkedForRollback(localTransaction);
  if (Configurations.isOnePhaseCommit(configuration) || is1PcForAutoCommitTransaction(localTransaction)) {
    if (trace)     log.tracef("Received prepare for tx: %s. Skipping call as 1PC will be used.",localTransaction);
    return XA_OK;
  }
  PrepareCommand prepareCommand=commandCreator.createPrepareCommand(localTransaction.getGlobalTransaction(),localTransaction.getModifications());
  if (trace)   log.tracef("Sending prepare command through the chain: %s",prepareCommand);
  LocalTxInvocationContext ctx=icc.createTxInvocationContext();
  prepareCommand.setReplayEntryWrapping(replayEntryWrapping);
  ctx.setLocalTransaction(localTransaction);
  try {
    invoker.invoke(ctx,prepareCommand);
    if (localTransaction.isReadOnly()) {
      if (trace)       log.tracef("Readonly transaction: %s",localTransaction.getGlobalTransaction());
      commit(localTransaction,false);
      return XA_RDONLY;
    }
 else {
      txTable.localTransactionPrepared(localTransaction);
      return XA_OK;
    }
  }
 catch (  Throwable e) {
    if (shuttingDown)     log.trace("Exception while preparing back, probably because we're shutting down.");
 else     log.error("Error while processing prepare",e);
    rollback(localTransaction);
    throw new XAException(XAException.XA_RBROLLBACK);
  }
}
