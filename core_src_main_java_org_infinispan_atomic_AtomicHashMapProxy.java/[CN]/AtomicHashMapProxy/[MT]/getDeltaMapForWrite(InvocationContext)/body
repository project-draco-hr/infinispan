{
  CacheEntry lookedUpEntry=ctx.lookupEntry(deltaMapKey);
  boolean lockedAndCopied=lookedUpEntry != null && lookedUpEntry.isChanged() && toMap(lookedUpEntry.getValue()).copied;
  if (lockedAndCopied) {
    return getDeltaMapForRead();
  }
 else {
    boolean suppressLocks=ctx.hasFlag(Flag.SKIP_LOCKING);
    if (!suppressLocks)     ctx.setFlags(Flag.FORCE_WRITE_LOCK);
    if (trace) {
      if (suppressLocks)       log.trace("Skip locking flag used.  Skipping locking.");
 else       log.trace("Forcing write lock even for reads");
    }
    AtomicHashMap<K,V> map=getDeltaMapForRead();
    AtomicHashMap<K,V> copy=map == null ? new AtomicHashMap<K,V>(true) : map.copyForWrite();
    copy.initForWriting();
    if (suppressLocks)     ctx.setFlags(Flag.SKIP_LOCKING);
    cache.put(deltaMapKey,copy);
    return copy;
  }
}
