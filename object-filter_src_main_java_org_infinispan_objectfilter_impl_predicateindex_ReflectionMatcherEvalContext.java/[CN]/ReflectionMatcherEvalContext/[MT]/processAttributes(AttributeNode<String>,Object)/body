{
  Class<?> clazz=instance.getClass();
  Iterator<AttributeNode<String>> children=node.getChildrenIterator();
  while (children.hasNext()) {
    AttributeNode<String> childAttribute=children.next();
    if (isFieldMultiple(clazz,childAttribute.getAttribute())) {
      Iterator valuesIt=ReflectionHelper.getFieldIterator(instance,clazz,childAttribute.getAttribute());
      if (valuesIt != null) {
        while (valuesIt.hasNext()) {
          Object attributeValue=valuesIt.next();
          processAttribute(childAttribute,attributeValue);
        }
      }
    }
 else {
      Object attributeValue=ReflectionHelper.getPropertyValue(instance,clazz,childAttribute.getAttribute());
      processAttribute(childAttribute,attributeValue);
    }
  }
}
