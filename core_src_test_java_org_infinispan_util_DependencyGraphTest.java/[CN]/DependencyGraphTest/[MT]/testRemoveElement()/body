{
  DependencyGraph<String> g=new DependencyGraph<>();
  g.addDependency("E","B");
  g.addDependency("E","C");
  g.addDependency("E","D");
  g.addDependency("B","D");
  g.addDependency("B","C");
  g.addDependency("C","D");
  assertEquals(g.topologicalSort(),Arrays.asList("E","B","C","D"));
  g.remove("C");
  assertEquals(g.topologicalSort(),Arrays.asList("E","B","D"));
  g.remove("B");
  assertEquals(g.topologicalSort(),Arrays.asList("E","D"));
  g.remove("E");
  assertEquals(g.topologicalSort(),Arrays.asList("D"));
  g.remove("D");
  assertTrue(g.topologicalSort().isEmpty());
}
