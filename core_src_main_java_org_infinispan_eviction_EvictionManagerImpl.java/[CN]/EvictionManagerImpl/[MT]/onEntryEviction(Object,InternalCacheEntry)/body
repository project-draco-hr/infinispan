{
  final Object entryValue=value.getValue();
  InvocationContext context=ImmutableContext.INSTANCE;
  cacheNotifier.notifyCacheEntryEvicted(key,entryValue,true,context);
  if (passivator.isEnabled()) {
    boolean locked=false;
    try {
      locked=acquireLock(context,key);
    }
 catch (    Exception e) {
      log.couldNotAcquireLockForEviction(key,e);
    }
    try {
      passivator.passivate(key,value,null);
    }
 catch (    CacheLoaderException e) {
      log.unableToPassivateEntry(key,e);
    }
 finally {
      if (locked) {
        lockManager.unlock(key);
      }
    }
  }
  cacheNotifier.notifyCacheEntryEvicted(key,entryValue,false,getInvocationContext());
}
