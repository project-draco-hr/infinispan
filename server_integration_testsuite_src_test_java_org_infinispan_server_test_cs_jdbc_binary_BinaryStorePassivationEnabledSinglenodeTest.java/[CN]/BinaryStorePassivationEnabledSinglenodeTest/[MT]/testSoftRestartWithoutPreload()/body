{
  String key1="key1";
  String key2="anotherExtraUniqueKey";
  String key3="key3";
  cache=createCache(mbeans);
  assertCleanCacheAndStoreHotrod();
  cache.put(key1,"v1");
  cache.put(key2,"v2");
  assertTrue(!dbServer.bucketTable.exists() || dbServer.bucketTable.getAllRows().isEmpty());
  cache.put(key3,"v3");
  assertTrue(2 >= server.getCacheManager(MANAGER_NAME).getCache(CACHE_NAME).getNumberOfEntries());
  byte[] k1Stored=getRealKeyStored(key1,cache);
  assertTrue(!dbServer.bucketTable.getAllRows().isEmpty());
  assertNotNull(dbServer.bucketTable.getBucketByKey(k1Stored));
  controller.stop(CONTAINER);
  controller.start(CONTAINER);
  cache=createCache(mbeans);
  assertEquals(0,server.getCacheManager(MANAGER_NAME).getCache(CACHE_NAME).getNumberOfEntries());
  assertTrue(dbServer.bucketTable.getAllRows().size() >= 2);
  assertNotNull(dbServer.bucketTable.getBucketByKey(k1Stored));
  assertEquals("v1",cache.get(key1));
}
