{
  short id=input.readShort();
  MetaParam.Writable[] metas=readMetas(input);
switch (id) {
case SET_VALUE_RETURN_PREV_OR_NULL:
    return new SetValueMetasReturnPrevOrNull<>(metas);
case SET_VALUE_IF_ABSENT_RETURN_PREV_OR_NULL:
  return new SetValueMetasIfAbsentReturnPrevOrNull<>(metas);
case SET_VALUE_IF_ABSENT_RETURN_BOOLEAN:
return new SetValueMetasIfAbsentReturnBoolean<>(metas);
case SET_VALUE_RETURN_VIEW:
return new SetValueMetasReturnView<>(metas);
case SET_VALUE_IF_PRESENT_RETURN_PREV_OR_NULL:
return new SetValueMetasIfPresentReturnPrevOrNull<>(metas);
case SET_VALUE_IF_PRESENT_RETURN_BOOLEAN:
return new SetValueMetasIfPresentReturnBoolean<>(metas);
case SET_VALUE_CONSUMER:
return new SetValueMetas<>(metas);
default :
throw new IllegalStateException("Unknown lambda and meta parameters with ID: " + id);
}
}
