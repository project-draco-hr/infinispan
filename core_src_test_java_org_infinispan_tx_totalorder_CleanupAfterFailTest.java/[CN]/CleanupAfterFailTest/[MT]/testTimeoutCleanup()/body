{
  final CountDownLatch block=new CountDownLatch(1);
  final BaseCustomSequentialInterceptor interceptor=new BaseCustomSequentialInterceptor(){
    @Override public CompletableFuture<Void> visitPrepareCommand(    TxInvocationContext ctx,    PrepareCommand command) throws Throwable {
      block.await();
      return ctx.continueInvocation();
    }
  }
;
  final SequentialInterceptorChain chain=TestingUtil.extractComponent(cache(1),SequentialInterceptorChain.class);
  final Object key=new MagicKey(cache(1));
  try {
    chain.addInterceptor(interceptor,0);
    tm(0).begin();
    cache(0).put(key,"v");
    tm(0).commit();
    fail("Rollback expected!");
  }
 catch (  RollbackException e) {
  }
 finally {
    block.countDown();
    chain.removeInterceptor(0);
  }
  assertNoTransactions();
  assertNoLocks();
}
