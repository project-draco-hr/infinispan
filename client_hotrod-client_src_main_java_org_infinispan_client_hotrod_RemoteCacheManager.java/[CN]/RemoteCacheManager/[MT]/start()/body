{
  String factory=props.getProperty("transport-factory");
  if (factory == null) {
    factory=TcpTransportFactory.class.getName();
    log.info("'transport-factory' factory not specified, using " + factory);
  }
  transportFactory=(TransportFactory)getInstance(factory);
  String servers=props.getProperty(CONF_HOTROD_SERVERS);
  transportFactory.start(props,getStaticConfiguredServers(servers),topologyId);
  if (marshaller == null) {
    String marshaller=props.getProperty("marshaller");
    if (marshaller == null) {
      marshaller=GenericJBossMarshaller.class.getName();
      log.info("'marshaller' not specified, using " + marshaller);
    }
    setMarshaller((Marshaller)getInstance(marshaller));
  }
  String asyncExecutorClass=DefaultAsyncExecutorFactory.class.getName();
  if (props.contains("asyn-executor-factory")) {
    asyncExecutorClass=props.getProperty("asyn-executor-factory");
  }
  ExecutorFactory executorFactory=null;
  executorFactory=(ExecutorFactory)getInstance(asyncExecutorClass);
  asyncExecutorService=executorFactory.getExecutor(props);
  if (props.get("force-return-value") != null && props.get("force-return-value").equals("true")) {
    forceReturnValueDefault=true;
  }
synchronized (cacheName2RemoteCache) {
    for (    RemoteCacheImpl remoteCache : cacheName2RemoteCache.values()) {
      startRemoteCache(remoteCache);
    }
  }
  started=true;
}
