{
  log.debugf("New view accepted: %s",newView);
  List<org.jgroups.Address> newMembers=newView.getMembers();
  if (newMembers == null || newMembers.isEmpty()) {
    log.debugf("Received null or empty member list from JGroups channel: " + newView);
    return;
  }
  List<Address> oldMembers=members;
  viewUpdateLock.lock();
  try {
    viewId=(int)newView.getViewId().getId();
    members=fromJGroupsAddressList(newMembers);
    if (log.isDebugEnabled() && oldMembers != null) {
      List<Address> joined=new ArrayList<>(members);
      joined.removeAll(oldMembers);
      List<Address> left=new ArrayList<>(oldMembers);
      left.removeAll(members);
      log.debugf("Joined: %s, Left: %s",joined,left);
    }
    coordinator=fromJGroupsAddress(newView.getCreator());
    isCoordinator=coordinator != null && coordinator.equals(getAddress());
    viewUpdateCondition.signalAll();
  }
  finally {
    viewUpdateLock.unlock();
  }
  boolean hasNotifier=notifier != null;
  if (hasNotifier) {
    String clusterName=configuration.transport().clusterName();
    Notify n;
    if (newView instanceof MergeView) {
      log.receivedMergedView(clusterName,newView);
      n=new NotifyMerge();
    }
 else {
      log.receivedClusterView(clusterName,newView);
      n=new NotifyViewChange();
    }
    n.emitNotification(oldMembers,newView);
  }
  JGroupsAddressCache.pruneAddressCache();
}
