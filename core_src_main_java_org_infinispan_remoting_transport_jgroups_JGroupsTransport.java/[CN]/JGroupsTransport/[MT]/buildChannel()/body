{
  String cfg;
  if (props != null) {
    if (props.containsKey(CHANNEL_LOOKUP)) {
      String channelLookupClassName=props.getProperty(CHANNEL_LOOKUP);
      try {
        JGroupsChannelLookup lookup=(JGroupsChannelLookup)Util.getInstance(channelLookupClassName);
        channel=lookup.getJGroupsChannel(props);
        startChannel=lookup.shouldStartAndConnect();
        stopChannel=lookup.shouldStopAndDisconnect();
      }
 catch (      ClassCastException e) {
        log.error("Class [" + channelLookupClassName + "] cannot be cast to JGroupsChannelLookup!  Not using a channel lookup.");
      }
catch (      Exception e) {
        log.error("Errors instantiating [" + channelLookupClassName + "]!  Not using a channel lookup.");
      }
    }
    if (channel == null && props.containsKey(CONFIGURATION_FILE)) {
      cfg=props.getProperty(CONFIGURATION_FILE);
      try {
        channel=new JChannel(new FileLookup().lookupFileLocation(cfg));
      }
 catch (      Exception e) {
        log.error("Error while trying to create a channel using config files: " + cfg);
        throw new CacheException(e);
      }
    }
    if (channel == null && props.containsKey(CONFIGURATION_XML)) {
      cfg=props.getProperty(CONFIGURATION_XML);
      try {
        channel=new JChannel(XmlConfigHelper.stringToElement(cfg));
      }
 catch (      Exception e) {
        log.error("Error while trying to create a channel using config XML: " + cfg);
        throw new CacheException(e);
      }
    }
    if (channel == null && props.containsKey(CONFIGURATION_STRING)) {
      cfg=props.getProperty(CONFIGURATION_STRING);
      try {
        channel=new JChannel(cfg);
      }
 catch (      Exception e) {
        log.error("Error while trying to create a channel using config string: " + cfg);
        throw new CacheException(e);
      }
    }
  }
  if (channel == null) {
    log.info("Unable to use any JGroups configuration mechanisms provided in properties %s.  Using default JGroups configuration!",props);
    try {
      channel=new JChannel(new FileLookup().lookupFileLocation(DEFAULT_JGROUPS_CONFIGURATION_FILE));
    }
 catch (    ChannelException e) {
      throw new CacheException("Unable to start JGroups channel",e);
    }
  }
}
