{
  int initialClusterSize=configuration.transport().initialClusterSize();
  if (initialClusterSize <= 1)   return;
  long timeout=configuration.transport().initialClusterTimeout();
  long remainingNanos=TimeUnit.MILLISECONDS.toNanos(timeout);
  viewUpdateLock.lock();
  try {
    while (channel != null && channel.getView().getMembers().size() < initialClusterSize && remainingNanos > 0) {
      log.debugf("Waiting for %d nodes, current view has %d",initialClusterSize,channel.getView().getMembers().size());
      remainingNanos=viewUpdateCondition.awaitNanos(remainingNanos);
    }
  }
 catch (  InterruptedException e) {
    log.interruptedWaitingForCoordinator(e);
    Thread.currentThread().interrupt();
  }
 finally {
    viewUpdateLock.unlock();
  }
  if (remainingNanos <= 0) {
    throw log.timeoutWaitingForInitialNodes(initialClusterSize,channel.getView().getMembers());
  }
  log.debugf("Initial cluster size of %d nodes reached",initialClusterSize);
}
