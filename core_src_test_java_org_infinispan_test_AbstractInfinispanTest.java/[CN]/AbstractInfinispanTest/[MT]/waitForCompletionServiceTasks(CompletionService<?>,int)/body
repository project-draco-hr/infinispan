{
  if (completionService == null) {
    throw new NullPointerException("Provided completionService cannot be null");
  }
  if (numberOfTasks <= 0) {
    throw new IllegalArgumentException("Provided numberOfTasks cannot be less than or equal to 0");
  }
  ExecutionException exception=null;
  for (int i=0; i < numberOfTasks; i++) {
    try {
      Future<?> future=completionService.poll(10,TimeUnit.SECONDS);
      if (future == null) {
        throw new TimeoutException("Concurrent task didn't complete within 10 seconds!");
      }
      future.get();
    }
 catch (    ExecutionException e) {
      log.debug("Exception in concurrent task",e);
      if (exception == null) {
        exception=e;
      }
    }
  }
  if (exception != null) {
    throw exception;
  }
}
