{
  for (  CacheEntryEvent<K,V> event : events) {
    if (event.isPre()) {
      throw new IllegalArgumentException("Events for cluster listener should never be pre change");
    }
switch (event.getType()) {
case CACHE_ENTRY_MODIFIED:
      for (      CacheEntryListenerInvocation<K,V> listener : cacheEntryModifiedListeners) {
        if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {
          listener.invokeNoChecks(event,false,true);
        }
      }
    break;
case CACHE_ENTRY_CREATED:
  for (  CacheEntryListenerInvocation<K,V> listener : cacheEntryCreatedListeners) {
    if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {
      listener.invokeNoChecks(event,false,true);
    }
  }
break;
case CACHE_ENTRY_REMOVED:
for (CacheEntryListenerInvocation<K,V> listener : cacheEntryRemovedListeners) {
if (listener.isClustered() && uuid.equals(listener.getIdentifier())) {
  listener.invokeNoChecks(event,false,true);
}
}
break;
default :
throw new IllegalArgumentException("Unexpected event type encountered!");
}
}
}
