{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case BUCKET_PREFIX:
{
        builder.bucketPrefix(value);
        break;
      }
case CLOUD_SERVICE:
{
      builder.cloudService(value);
      break;
    }
case CLOUD_SERVICE_LOCATION:
{
    builder.cloudServiceLocation(value);
    break;
  }
case COMPRESS:
{
  builder.compress(Boolean.parseBoolean(value));
  break;
}
case IDENTITY:
{
builder.identity(value);
break;
}
case LAZY_PURGING_ONLY:
{
builder.lazyPurgingOnly(Boolean.parseBoolean(value));
break;
}
case MAX_CONNECTIONS:
{
builder.maxConnections(Integer.parseInt(value));
break;
}
case PASSWORD:
{
builder.password(value);
break;
}
case PROXY_HOST:
{
builder.proxyHost(value);
break;
}
case PROXY_PORT:
{
builder.proxyPort(Integer.parseInt(value));
break;
}
case REQUEST_TIMEOUT:
{
builder.requestTimeout(Long.parseLong(value));
break;
}
case SECURE:
{
builder.secure(Boolean.parseBoolean(value));
break;
}
default :
{
Parser52.parseCommonStoreAttributes(reader,i,builder);
break;
}
}
}
}
