{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=StringPropertyReplacer.replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case LOCATION:
{
        builder.location(value);
        break;
      }
case EXPIRED_LOCATION:
{
      builder.expiredLocation(value);
      break;
    }
case IMPLEMENTATION_TYPE:
{
    builder.implementationType(ImplementationType.valueOf(value));
    break;
  }
case CLEAR_THRESHOLD:
{
  builder.clearThreshold(Integer.valueOf(value));
  break;
}
case EXPIRY_QUEUE_SIZE:
{
builder.expiryQueueSize(Integer.valueOf(value));
}
case BLOCK_SIZE:
{
builder.blockSize(Integer.valueOf(value));
break;
}
case CACHE_SIZE:
{
builder.cacheSize(Long.valueOf(value));
break;
}
case COMPRESSION_TYPE:
{
builder.compressionType(CompressionType.valueOf(value));
break;
}
default :
{
Parser52.parseCommonStoreAttributes(reader,i,builder);
}
}
}
if (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
ParseUtils.unexpectedElement(reader);
}
}
