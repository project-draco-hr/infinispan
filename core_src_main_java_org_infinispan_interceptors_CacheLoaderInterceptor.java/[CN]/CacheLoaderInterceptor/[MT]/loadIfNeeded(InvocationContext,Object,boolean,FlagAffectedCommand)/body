{
  if (shouldSkipCacheLoader(cmd) || cmd.hasFlag(Flag.IGNORE_RETURN_VALUES) || !canLoad(key)) {
    return null;
  }
  if (!isRetrieval && !ctx.isOriginLocal() && !forceLoad(key,cmd.getFlags()))   return null;
  CacheEntry e=ctx.lookupEntry(key);
  if (!shouldAttemptLookup(e)) {
    return null;
  }
  final boolean isDelta=cmd instanceof ApplyDeltaCommand;
  final AtomicReference<Boolean> isLoaded=new AtomicReference<Boolean>();
  dataContainer.compute(key,new DataContainer.ComputeAction(){
    @Override public InternalCacheEntry compute(    Object key,    InternalCacheEntry oldEntry,    InternalEntryFactory factory){
      if (oldEntry != null) {
        wrapInternalCacheEntry(ctx,key,cmd,oldEntry,isDelta);
        isLoaded.set(null);
        return oldEntry;
      }
      MarshalledEntry loaded=internalLoadAndUpdateStats(key,ctx);
      if (loaded == null) {
        isLoaded.set(Boolean.FALSE);
        return null;
      }
      InternalCacheEntry newEntry;
      InternalMetadata metadata=loaded.getMetadata();
      if (metadata != null) {
        Metadata actual=metadata instanceof InternalMetadataImpl ? ((InternalMetadataImpl)metadata).actual() : metadata;
        newEntry=factory.create(loaded.getKey(),loaded.getValue(),actual,metadata.created(),metadata.lifespan(),metadata.lastUsed(),metadata.maxIdle());
      }
 else {
        newEntry=factory.create(loaded.getKey(),loaded.getValue(),(Metadata)null);
      }
      CacheEntry wrappedEntry=wrapInternalCacheEntry(ctx,key,cmd,newEntry,isDelta);
      recordLoadedEntry(ctx,key,wrappedEntry,newEntry,cmd);
      isLoaded.set(Boolean.TRUE);
      return newEntry;
    }
  }
);
  return isLoaded.get();
}
