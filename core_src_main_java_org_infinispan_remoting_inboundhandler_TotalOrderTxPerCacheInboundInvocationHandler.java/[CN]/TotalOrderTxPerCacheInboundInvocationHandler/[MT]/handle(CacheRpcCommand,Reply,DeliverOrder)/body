{
  try {
    final int commandTopologyId=extractCommandTopologyId(command);
    if (isCommandSentBeforeFirstTopology(commandTopologyId)) {
      reply.reply(CacheNotFoundResponse.INSTANCE);
      return;
    }
    final boolean onExecutorService;
    final BlockingRunnable runnable;
switch (command.getCommandId()) {
case TotalOrderVersionedPrepareCommand.COMMAND_ID:
case TotalOrderNonVersionedPrepareCommand.COMMAND_ID:
      if (!stateTransferManager.ownsData()) {
        log.debugf("No Data in local node.");
        reply.reply(null);
        return;
      }
    TotalOrderRemoteTransactionState state=((TotalOrderPrepareCommand)command).getOrCreateState();
  totalOrderManager.ensureOrder(state,((PrepareCommand)command).getKeysToLock());
runnable=createRunnableForPrepare(state,(PrepareCommand)command,reply);
onExecutorService=true;
break;
case TotalOrderCommitCommand.COMMAND_ID:
case TotalOrderVersionedCommitCommand.COMMAND_ID:
case RollbackCommand.COMMAND_ID:
onExecutorService=true;
runnable=createRunnableForCommitOrRollback(command,reply);
break;
default :
onExecutorService=executeOnExecutorService(order,command);
runnable=createDefaultRunnable(command,reply,commandTopologyId,command.getCommandId() != StateRequestCommand.COMMAND_ID,onExecutorService);
break;
}
handleRunnable(runnable,onExecutorService);
}
 catch (Throwable throwable) {
reply.reply(exceptionHandlingCommand(command,throwable));
}
}
