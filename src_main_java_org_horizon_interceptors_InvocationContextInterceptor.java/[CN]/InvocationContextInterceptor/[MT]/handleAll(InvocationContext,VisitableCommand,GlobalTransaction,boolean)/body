{
  boolean suppressExceptions=false;
  Transaction suspendedTransaction=null;
  boolean resumeSuspended=false;
  if (trace)   log.trace("Invoked with command " + command + " and InvocationContext ["+ ctx+ "]");
  try {
    if (txManager != null) {
      Transaction tx=getTransaction();
      GlobalTransaction realGtx=getGlobalTransaction(tx,gtx);
      if (tx == null && realGtx != null && realGtx.isRemote())       tx=txTable.getLocalTransaction(gtx);
      setTransactionalContext(tx,realGtx,null,ctx);
    }
 else {
      setTransactionalContext(null,null,null,ctx);
    }
    if (ctx.hasOption(Options.FAIL_SILENTLY)) {
      log.debug("FAIL_SILENTLY Option is present - suspending any ongoing transaction.");
      suppressExceptions=true;
      if (ctx.getTransaction() != null) {
        suspendedTransaction=txManager.suspend();
        setTransactionalContext(null,null,null,ctx);
        if (trace)         log.trace("Suspending transaction " + suspendedTransaction);
        resumeSuspended=true;
      }
 else {
        if (trace)         log.trace("No ongoing transaction to suspend");
      }
    }
    Object retval;
    try {
      return invokeNextInterceptor(ctx,command);
    }
 catch (    Throwable th) {
      retval=th;
      if (suppressExceptions)       return null;
      Throwable t=(Throwable)retval;
      if (t instanceof RuntimeException && t.getCause() != null) {
        throw t.getCause();
      }
 else {
        throw t;
      }
    }
  }
  finally {
    if (scrubContextOnCompletion)     setTransactionalContext(null,null,null,ctx);
    if (trace)     log.trace("Resetting invocation-scope options");
    ctx.resetOptions();
    if (resumeSuspended) {
      txManager.resume(suspendedTransaction);
    }
 else {
      if (ctx.getTransaction() != null && (TransactionTable.isValid(ctx.getTransaction()))) {
        copyInvocationScopeOptionsToTxScope(ctx);
      }
    }
    ctx.clearLookedUpEntries();
  }
}
