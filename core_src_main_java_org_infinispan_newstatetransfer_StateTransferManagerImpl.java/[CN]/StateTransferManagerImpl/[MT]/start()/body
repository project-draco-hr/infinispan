{
  if (trace) {
    log.tracef("Starting state transfer manager on " + rpcManager.getAddress());
  }
  CacheJoinInfo joinInfo=new CacheJoinInfo(configuration.clustering().cacheMode().isReplicated() ? new ReplicatedConsistentHashFactory() : new DefaultConsistentHashFactory(),configuration.clustering().hash().hash(),configuration.clustering().hash().numVirtualNodes(),configuration.clustering().hash().numOwners(),configuration.clustering().stateTransfer().timeout());
  CacheTopologyHandler handler=new CacheTopologyHandler(){
    @Override public void updateConsistentHash(    CacheTopology cacheTopology){
      rebalance(cacheTopology);
    }
    @Override public void rebalance(    CacheTopology cacheTopology){
      distributionManager.setCacheTopology(cacheTopology);
      ConsistentHash ch=cacheTopology.getWriteConsistentHash();
      onTopologyUpdate(topologyId,ch);
    }
  }
;
  CacheTopology cacheTopology=localTopologyManager.join(cacheName,joinInfo,handler);
  handler.updateConsistentHash(cacheTopology);
}
