{
  int result=globalConfiguration != null ? globalConfiguration.hashCode() : 0;
  result=31 * result + (locking.useLockStriping ? 1 : 0);
  result=31 * result + (clustering.async.useReplQueue ? 1 : 0);
  result=31 * result + clustering.async.replQueueMaxElements;
  result=31 * result + (int)(clustering.async.replQueueInterval ^ (clustering.async.replQueueInterval >>> 32));
  result=31 * result + (jmxStatistics.enabled ? 1 : 0);
  result=31 * result + (clustering.stateRetrieval.fetchInMemoryState ? 1 : 0);
  result=31 * result + (int)(locking.lockAcquisitionTimeout ^ (locking.lockAcquisitionTimeout >>> 32));
  result=31 * result + (int)(clustering.sync.replTimeout ^ (clustering.sync.replTimeout >>> 32));
  result=31 * result + (clustering.mode != null ? clustering.mode.hashCode() : 0);
  result=31 * result + (int)(clustering.stateRetrieval.timeout ^ (clustering.stateRetrieval.timeout >>> 32));
  result=31 * result + (locking.isolationLevel != null ? locking.isolationLevel.hashCode() : 0);
  result=31 * result + (transaction.transactionManagerLookupClass != null ? transaction.transactionManagerLookupClass.hashCode() : 0);
  result=31 * result + (loaders != null ? loaders.hashCode() : 0);
  result=31 * result + (transaction.syncCommitPhase ? 1 : 0);
  result=31 * result + (transaction.syncRollbackPhase ? 1 : 0);
  result=31 * result + (transaction.useEagerLocking ? 1 : 0);
  result=31 * result + (lazyDeserialization.enabled ? 1 : 0);
  result=31 * result + (customInterceptors.customInterceptors != null ? customInterceptors.customInterceptors.hashCode() : 0);
  result=31 * result + (locking.writeSkewCheck ? 1 : 0);
  result=31 * result + locking.concurrencyLevel;
  result=31 * result + (invocationBatching.enabled ? 1 : 0);
  result=31 * result + (int)(eviction.wakeUpInterval ^ (eviction.wakeUpInterval >>> 32));
  result=31 * result + (eviction.strategy != null ? eviction.strategy.hashCode() : 0);
  result=31 * result + eviction.maxEntries;
  result=31 * result + (int)(expiration.lifespan ^ (expiration.lifespan >>> 32));
  result=31 * result + (int)(expiration.maxIdle ^ (expiration.maxIdle >>> 32));
  result=31 * result + (clustering.l1.enabled ? 1 : 0);
  result=31 * result + (int)(clustering.l1.lifespan ^ (clustering.l1.lifespan >>> 32));
  result=31 * result + (int)(clustering.hash.rehashWait ^ (clustering.hash.rehashWait >>> 32));
  result=31 * result + (int)(clustering.hash.rehashRpcTimeout ^ (clustering.hash.rehashRpcTimeout >>> 32));
  result=31 * result + (clustering.l1.onRehash ? 1 : 0);
  result=31 * result + (clustering.hash.consistentHashClass != null ? clustering.hash.consistentHashClass.hashCode() : 0);
  result=31 * result + clustering.hash.numOwners;
  result=31 * result + (clustering.async.asyncMarshalling ? 1 : 0);
  return result;
}
