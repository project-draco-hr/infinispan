{
  try {
    Configuration dolly=(Configuration)super.clone();
    if (clustering != null) {
      dolly.clustering=clustering.clone();
      dolly.clustering.setConfiguration(dolly);
    }
    if (locking != null) {
      dolly.locking=(LockingType)locking.clone();
      dolly.locking.setConfiguration(dolly);
    }
    if (transaction != null) {
      dolly.transaction=transaction.clone();
      dolly.transaction.setConfiguration(dolly);
    }
    if (customInterceptors != null) {
      dolly.customInterceptors=customInterceptors.clone();
      dolly.customInterceptors.setConfiguration(dolly);
    }
    if (dataContainer != null) {
      dolly.dataContainer=(DataContainerType)dataContainer.clone();
      dolly.dataContainer.setConfiguration(dolly);
    }
    if (eviction != null) {
      dolly.eviction=(EvictionType)eviction.clone();
      dolly.eviction.setConfiguration(dolly);
    }
    if (expiration != null) {
      dolly.expiration=(ExpirationType)expiration.clone();
      dolly.expiration.setConfiguration(dolly);
    }
    if (unsafe != null) {
      dolly.unsafe=(UnsafeType)unsafe.clone();
      dolly.unsafe.setConfiguration(dolly);
    }
    if (clustering != null) {
      dolly.clustering=clustering.clone();
      dolly.clustering.setConfiguration(dolly);
    }
    if (jmxStatistics != null) {
      dolly.jmxStatistics=(JmxStatistics)jmxStatistics.clone();
      dolly.jmxStatistics.setConfiguration(dolly);
    }
    if (storeAsBinary != null) {
      dolly.storeAsBinary=storeAsBinary.clone();
      dolly.storeAsBinary.setConfiguration(dolly);
    }
    if (lazyDeserialization != null) {
      dolly.lazyDeserialization=(LazyDeserialization)lazyDeserialization.clone();
      dolly.lazyDeserialization.setConfiguration(dolly);
    }
    if (invocationBatching != null) {
      dolly.invocationBatching=(InvocationBatching)invocationBatching.clone();
      dolly.invocationBatching.setConfiguration(dolly);
    }
    if (deadlockDetection != null) {
      dolly.deadlockDetection=(DeadlockDetectionType)deadlockDetection.clone();
      dolly.deadlockDetection.setConfiguration(dolly);
    }
    if (transaction != null) {
      dolly.transaction=transaction.clone();
      dolly.transaction.setConfiguration(dolly);
    }
    if (indexing != null) {
      dolly.indexing=indexing.clone();
      dolly.indexing.setConfiguration(dolly);
    }
    dolly.fluentConfig=new FluentConfiguration(dolly);
    return dolly;
  }
 catch (  CloneNotSupportedException e) {
    throw new CacheException("Unexpected!",e);
  }
}
