{
  int failuresCounter=0;
  while (lastValue < counterMaxValue && !Thread.interrupted()) {
    boolean success=false;
    try {
      transactionManager.begin();
      Integer value=cache.get("counter");
      value=value + 1;
      lastValue=value;
      cache.put("counter",value);
      transactionManager.commit();
      unique=uniqueValuesSet.add(value);
      success=true;
    }
 catch (    Exception e) {
      failuresCounter++;
      Assert.assertTrue(failuresCounter < 10 * counterMaxValue,"Too many failures incrementing the counter");
    }
 finally {
      if (!success) {
        try {
          if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION)           transactionManager.rollback();
        }
 catch (        Throwable t) {
          log.trace("Exception during rollback",t);
        }
      }
      Assert.assertTrue(unique,"Duplicate value found (value=" + lastValue + ")");
    }
  }
  return unique;
}
