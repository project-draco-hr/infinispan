{
  List<Address> members=t.getMembers();
  if (members.size() < 2) {
    if (log.isDebugEnabled())     log.debug("We're the only member in the cluster; Don't invoke remotely.");
    return Collections.emptyMap();
  }
 else {
    long startTime=0;
    if (statisticsEnabled)     startTime=System.currentTimeMillis();
    try {
      Map<Address,Response> result=t.invokeRemotely(recipients,rpcCommand,mode,timeout,usePriorityQueue,responseFilter,stateTransferEnabled);
      if (isStatisticsEnabled())       replicationCount.incrementAndGet();
      return result;
    }
 catch (    CacheException e) {
      if (log.isTraceEnabled()) {
        log.trace("replication exception: ",e);
      }
      if (isStatisticsEnabled())       replicationFailures.incrementAndGet();
      throw e;
    }
catch (    Throwable th) {
      log.error("unexpected error while replicating",th);
      if (isStatisticsEnabled())       replicationFailures.incrementAndGet();
      throw new CacheException(th);
    }
 finally {
      if (statisticsEnabled) {
        long timeTaken=System.currentTimeMillis() - startTime;
        totalReplicationTime.getAndAdd(timeTaken);
      }
    }
  }
}
