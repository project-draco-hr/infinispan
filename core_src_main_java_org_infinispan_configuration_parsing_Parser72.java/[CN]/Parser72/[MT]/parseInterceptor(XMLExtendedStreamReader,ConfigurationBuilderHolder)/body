{
  ConfigurationBuilder builder=holder.getCurrentConfigurationBuilder();
  InterceptorConfigurationBuilder interceptorBuilder=builder.customInterceptors().addInterceptor();
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case AFTER:
      interceptorBuilder.after(Util.<CommandInterceptor>loadClass(value,holder.getClassLoader()));
    break;
case BEFORE:
  interceptorBuilder.before(Util.<CommandInterceptor>loadClass(value,holder.getClassLoader()));
break;
case CLASS:
interceptorBuilder.interceptor(Util.<CommandInterceptor>getInstance(value,holder.getClassLoader()));
break;
case INDEX:
interceptorBuilder.index(Integer.parseInt(value));
break;
case POSITION:
interceptorBuilder.position(InterceptorConfiguration.Position.valueOf(value.toUpperCase()));
break;
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
interceptorBuilder.withProperties(parseProperties(reader));
}
