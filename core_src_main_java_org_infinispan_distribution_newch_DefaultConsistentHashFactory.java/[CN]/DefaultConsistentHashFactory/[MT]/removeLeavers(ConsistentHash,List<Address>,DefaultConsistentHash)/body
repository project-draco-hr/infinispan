{
  int numSegments=baseDCH.getNumSegments();
  List<Address> leavers=new ArrayList<Address>(baseCH.getMembers());
  leavers.removeAll(newMembers);
  boolean segmentsWithZeroOwners=false;
  List<Address>[] newOwnerLists=new List[numSegments];
  for (int i=0; i < numSegments; i++) {
    List<Address> owners=new ArrayList<Address>(baseDCH.locateOwnersForSegment(i));
    owners.removeAll(leavers);
    segmentsWithZeroOwners|=owners.isEmpty();
    newOwnerLists[i]=owners;
  }
  if (segmentsWithZeroOwners) {
    assignSegmentsWithZeroOwners(baseDCH,newMembers,newOwnerLists);
  }
  return new DefaultConsistentHash(baseDCH.getHashFunction(),numSegments,baseDCH.getNumOwners(),newMembers,newOwnerLists);
}
