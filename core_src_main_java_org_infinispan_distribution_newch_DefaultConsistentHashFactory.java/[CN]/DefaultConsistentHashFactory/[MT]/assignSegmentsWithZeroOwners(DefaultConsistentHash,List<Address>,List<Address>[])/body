{
  CHStatistics stats=computeStatistics(baseDCH,newMembers);
  int actualNumOwners=Math.min(baseDCH.getNumOwners(),newMembers.size());
  int numSegments=baseDCH.getNumSegments();
  Map<Address,Integer> expectedPrimaryOwnedSegments=computeExpectedPrimaryOwned(newMembers,numSegments);
  Map<Address,Integer> expectedOwnedSegments=computeExpectedOwned(newMembers,actualNumOwners,numSegments);
  for (int i=0; i < numSegments; i++) {
    if (segmentOwners[i].isEmpty()) {
      List<Address> newOwners=new ArrayList<Address>(actualNumOwners);
      Address primaryOwner=null;
      for (      Address a : newMembers) {
        primaryOwner=a;
        if (stats.getPrimaryOwned(a) < expectedPrimaryOwnedSegments.get(a)) {
          break;
        }
      }
      newOwners.add(primaryOwner);
      stats.incPrimaryOwned(primaryOwner);
      stats.incOwned(primaryOwner);
      if (actualNumOwners > 1) {
        for (        Address a : newMembers) {
          if (stats.getOwned(a) < expectedOwnedSegments.get(a) && !newOwners.contains(a)) {
            newOwners.add(a);
            stats.incOwned(a);
            if (newOwners.size() == actualNumOwners)             break;
          }
        }
      }
      segmentOwners[i]=newOwners;
    }
  }
}
