{
  if (numOwners <= 0)   throw new IllegalArgumentException("The number of owners should be greater than 0");
  if (numSegments < members.size())   throw new IllegalArgumentException("The number of segments should be greater than " + "or equal to the number of members");
  int actualNumOwners=Math.min(numOwners,members.size());
  List<Address>[] ownerLists=new List[numSegments];
  for (int i=0; i < numSegments; i++) {
    ownerLists[i]=new ArrayList<Address>(actualNumOwners);
    ownerLists[i].add(members.get(i % members.size()));
  }
  DefaultConsistentHash baseCH=new DefaultConsistentHash(hashFunction,numSegments,numOwners,members,ownerLists);
  return rebalanceConsistentHash(baseCH,false);
}
