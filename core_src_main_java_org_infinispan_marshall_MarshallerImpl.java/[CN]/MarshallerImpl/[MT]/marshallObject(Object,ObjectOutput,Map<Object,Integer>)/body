{
  if (o != null && o.getClass().isArray() && isKnownType(o.getClass().getComponentType())) {
    marshallArray(o,out,refMap);
  }
 else {
    if (o == null) {
      out.writeByte(MAGICNUMBER_NULL);
    }
 else     if (useRefs && refMap.containsKey(o)) {
      out.writeByte(MAGICNUMBER_REF);
      writeReference(out,refMap.get(o));
    }
 else     if (o instanceof ReplicableCommand) {
      ReplicableCommand command=(ReplicableCommand)o;
      if (command.getCommandId() > -1) {
        out.writeByte(MAGICNUMBER_COMMAND);
        marshallCommand(command,out,refMap);
      }
 else {
        throw new IllegalArgumentException("Command does not have a valid method id!");
      }
    }
 else     if (o instanceof MarshalledValue) {
      out.writeByte(MAGICNUMBER_MARSHALLEDVALUE);
      ((MarshalledValue)o).writeExternal(out);
    }
 else     if (o instanceof DeltaAware) {
      out.writeByte(MAGICNUMBER_SERIALIZABLE);
      out.writeObject(((DeltaAware)o).delta());
    }
 else     if (o instanceof GlobalTransaction) {
      out.writeByte(MAGICNUMBER_GTX);
      if (useRefs)       writeReference(out,createReference(o,refMap));
      marshallGlobalTransaction((GlobalTransaction)o,out,refMap);
    }
 else     if (o instanceof JGroupsAddress) {
      out.writeByte(MAGICNUMBER_JG_ADDRESS);
      marshallJGroupsAddress((JGroupsAddress)o,out);
    }
 else     if (o instanceof Response) {
      marshallResponse((Response)o,out,refMap);
    }
 else     if (o instanceof InternalCacheEntry) {
      out.writeByte(MAGICNUMBER_INTERNAL_CACHED_ENTRY);
      InternalCacheEntry ice=(InternalCacheEntry)o;
      marshallObject(ice.getKey(),out,refMap);
      marshallObject(ice.getValue(),out,refMap);
      if (ice.canExpire()) {
        out.writeBoolean(true);
        writeUnsignedLong(out,ice.getCreated());
        out.writeLong(ice.getLifespan());
        writeUnsignedLong(out,ice.getLastUsed());
        out.writeLong(ice.getMaxIdle());
      }
 else {
        out.writeBoolean(false);
      }
    }
 else     if (o.getClass().equals(ArrayList.class)) {
      out.writeByte(MAGICNUMBER_ARRAY_LIST);
      marshallCollection((Collection)o,out,refMap);
    }
 else     if (o instanceof LinkedList) {
      out.writeByte(MAGICNUMBER_LINKED_LIST);
      marshallCollection((Collection)o,out,refMap);
    }
 else     if (o.getClass().getName().equals("java.util.Collections$SingletonList")) {
      out.writeByte(MAGICNUMBER_SINGLETON_LIST);
      marshallObject(((List)o).get(0),out,refMap);
    }
 else     if (o.getClass().equals(HashMap.class)) {
      out.writeByte(MAGICNUMBER_HASH_MAP);
      marshallMap((Map)o,out,refMap);
    }
 else     if (o.getClass().equals(TreeMap.class)) {
      out.writeByte(MAGICNUMBER_TREE_MAP);
      marshallMap((Map)o,out,refMap);
    }
 else     if (o.getClass().equals(FastCopyHashMap.class)) {
      out.writeByte(MAGICNUMBER_FASTCOPY_HASHMAP);
      marshallMap((Map)o,out,refMap);
    }
 else     if (o instanceof Map && Immutables.isImmutable(o)) {
      out.writeByte(MAGICNUMBER_IMMUTABLE_MAPCOPY);
      marshallMap((Map)o,out,refMap);
    }
 else     if (o.getClass().equals(HashSet.class)) {
      out.writeByte(MAGICNUMBER_HASH_SET);
      marshallCollection((Collection)o,out,refMap);
    }
 else     if (o.getClass().equals(TreeSet.class)) {
      out.writeByte(MAGICNUMBER_TREE_SET);
      marshallCollection((Collection)o,out,refMap);
    }
 else     if (o instanceof Boolean) {
      out.writeByte(MAGICNUMBER_BOOLEAN);
      out.writeBoolean(((Boolean)o).booleanValue());
    }
 else     if (o instanceof Integer) {
      out.writeByte(MAGICNUMBER_INTEGER);
      out.writeInt(((Integer)o).intValue());
    }
 else     if (o instanceof Long) {
      out.writeByte(MAGICNUMBER_LONG);
      out.writeLong(((Long)o).longValue());
    }
 else     if (o instanceof Short) {
      out.writeByte(MAGICNUMBER_SHORT);
      out.writeShort(((Short)o).shortValue());
    }
 else     if (o instanceof Byte) {
      out.writeByte(MAGICNUMBER_BYTE);
      out.writeByte(((Byte)o).byteValue());
    }
 else     if (o instanceof String) {
      out.writeByte(MAGICNUMBER_STRING);
      if (useRefs)       writeReference(out,createReference(o,refMap));
      marshallString((String)o,out);
    }
 else     if (o instanceof TransactionLog.LogEntry) {
      out.writeByte(MAGICNUMBER_TRANSACTION_LOG);
      TransactionLog.LogEntry le=(TransactionLog.LogEntry)o;
      marshallObject(le.getTransaction(),out,refMap);
      WriteCommand[] cmds=le.getModifications();
      writeUnsignedInt(out,cmds.length);
      for (      WriteCommand c : cmds)       marshallObject(c,out,refMap);
    }
 else     if (o instanceof Serializable) {
      if (trace)       log.trace("WARNING: using object serialization for [{0}]",o.getClass());
      out.writeByte(MAGICNUMBER_SERIALIZABLE);
      if (useRefs)       writeReference(out,createReference(o,refMap));
      out.writeObject(o);
    }
 else {
      throw new IOException("Don't know how to marshall object of type " + o.getClass());
    }
  }
}
