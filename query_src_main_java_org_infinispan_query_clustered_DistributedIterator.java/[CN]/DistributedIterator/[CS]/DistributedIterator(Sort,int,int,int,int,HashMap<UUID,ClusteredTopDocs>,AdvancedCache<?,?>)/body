{
  this.fetchSize=fetchSize;
  this.resultSize=resultSize;
  this.maxResults=maxResults;
  this.firstResult=firstResult;
  this.cache=cache;
  final int parallels=topDocsResponses.size();
  this.clusterIDs=new UUID[parallels];
  this.partialResults=new ClusteredTopDocs[parallels];
  this.partialTopDocs=new TopDocs[parallels];
  this.partialPositionNext=new int[parallels];
  int i=0;
  for (  Entry<UUID,ClusteredTopDocs> entry : topDocsResponses.entrySet()) {
    clusterIDs[i]=entry.getKey();
    partialResults[i]=entry.getValue();
    partialTopDocs[i]=partialResults[i].getTopDocs();
    i++;
  }
  try {
    mergedResults=TopDocs.merge(sort,firstResult,maxResults,partialTopDocs);
  }
 catch (  IOException e) {
    throw log.unexpectedIOException(e);
  }
}
