{
  while (next == null) {
    if (iterator.hasNext()) {
      InternalCacheEntry<K,V> entry=iterator.next();
      if (entry.isExpired(timeService.wallClockTime())) {
        continue;
      }
      K marshalledKey=unwrapMarshalledvalue(entry.getKey());
      V marshalledValue=unwrapMarshalledvalue(entry.getValue());
      InternalCacheEntry<K,V> clone;
      if (marshalledKey != entry.getKey() || marshalledValue != entry.getValue()) {
        clone=entryFactory.create(marshalledKey,marshalledValue,entry);
      }
 else {
        clone=entry;
      }
      if (filter != null) {
        K key=clone.getKey();
        if (converter == null && filter instanceof KeyValueFilterConverter) {
          C converted=((KeyValueFilterConverter<K,V,C>)filter).filterAndConvert(key,clone.getValue(),clone.getMetadata());
          if (converted != null) {
            if (entry == clone) {
              clone=(InternalCacheEntry<K,V>)entryFactory.create(clone.getKey(),converted,entry);
            }
 else {
              clone.setValue((V)converted);
            }
          }
 else {
            continue;
          }
        }
 else         if (!filter.accept(key,clone.getValue(),clone.getMetadata())) {
          continue;
        }
      }
      next=(CacheEntry<K,C>)clone;
      if (converter != null) {
        C newValue=converter.convert(clone.getKey(),clone.getValue(),clone.getMetadata());
        if (newValue != clone.getValue()) {
          if (entry == clone) {
            next=entryFactory.create(clone.getKey(),newValue,entry);
          }
 else {
            next.setValue(newValue);
          }
        }
      }
    }
 else {
      break;
    }
  }
  return next != null;
}
