{
  try {
    FileProvider.Log logFile=fileProvider.getFileForLog();
    int currentOffset=0;
    while (true) {
      LogRequest request=queue.pop();
      if (request != null) {
        if (request.isClear()) {
          logFile.close();
          queue.notifyNoWait();
          request.pause();
          currentOffset=0;
          logFile=fileProvider.getFileForLog();
          log.debug("Appending records to " + logFile.fileId);
          continue;
        }
 else         if (request.isStop()) {
          queue.notifyNoWait();
          break;
        }
 else         if (request.isPause()) {
          queue.notifyNoWait();
          request.pause();
          continue;
        }
        if (currentOffset + request.length() > maxFileSize) {
          logFile.close();
          compactor.completeFile(logFile.fileId);
          currentOffset=0;
          logFile=fileProvider.getFileForLog();
          log.debug("Appending records to " + logFile.fileId);
        }
        long seqId=nextSeqId();
        EntryRecord.writeEntry(logFile.fileChannel,request.getSerializedKey(),request.getSerializedMetadata(),request.getSerializedValue(),seqId,request.getExpiration());
        int offset=request.getSerializedValue() == null ? ~currentOffset : currentOffset;
        temporaryTable.set(request.getKey(),logFile.fileId,offset);
        IndexRequest indexRequest=IndexRequest.update(request.getKey(),raw(request.getSerializedKey()),logFile.fileId,offset,request.length());
        request.setIndexRequest(indexRequest);
        indexQueue.put(indexRequest);
        currentOffset+=request.length();
      }
 else {
        if (syncWrites) {
          logFile.fileChannel.force(false);
        }
        queue.notifyAndWait();
      }
    }
  }
 catch (  Exception e) {
    queue.notifyError();
    throw new RuntimeException(e);
  }
}
