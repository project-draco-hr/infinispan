{
  final Object returnValue=invokeNextInterceptor(ctx,command);
  if (!isLocalModeForced(ctx) && command.isSuccessful() && ctx.isOriginLocal()&& !ctx.isInTxScope()) {
    if (ctx.isUseFutureReturnType()) {
      return submitRpcCall(new Callable<Object>(){
        public Object call() throws Exception {
          rpcManager.broadcastReplicableCommand(command,true);
          return null;
        }
      }
,returnValue);
    }
 else {
      rpcManager.broadcastReplicableCommand(command,isSynchronous(ctx));
    }
  }
  return returnValue;
}
