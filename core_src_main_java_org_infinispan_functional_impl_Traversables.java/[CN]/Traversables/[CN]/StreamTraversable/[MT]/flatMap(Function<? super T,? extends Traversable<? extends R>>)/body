{
  Function<? super T,? extends Stream<? extends R>> mapper=new Function<T,Stream<? extends R>>(){
    @Override public Stream<? extends R> apply(    T t){
      StreamTraversable<? extends R> applied=(StreamTraversable<? extends R>)f.apply(t);
      return applied.stream;
    }
  }
;
  return new StreamTraversable<>(stream.flatMap(mapper));
}
