{
  if (numSegments < 1)   throw new IllegalArgumentException("The number of segments must be strictly positive");
  if (numOwners < 1)   throw new IllegalArgumentException("The number of owners must be strictly positive");
  this.numOwners=numOwners;
  this.hashFunction=hashFunction;
  this.members=new ArrayList<Address>(members);
  if (capacityFactors == null) {
    this.capacityFactors=null;
  }
 else {
    this.capacityFactors=new float[members.size()];
    for (int i=0; i < this.capacityFactors.length; i++) {
      this.capacityFactors[i]=capacityFactors.get(members.get(i));
    }
  }
  this.segmentOwners=new List[numSegments];
  for (int i=0; i < numSegments; i++) {
    if (segmentOwners[i] == null || segmentOwners[i].isEmpty()) {
      throw new IllegalArgumentException("Segment owner list cannot be null or empty");
    }
    this.segmentOwners[i]=Immutables.immutableListCopy(segmentOwners[i]);
  }
  this.segmentSize=Util.getSegmentSize(numSegments);
}
