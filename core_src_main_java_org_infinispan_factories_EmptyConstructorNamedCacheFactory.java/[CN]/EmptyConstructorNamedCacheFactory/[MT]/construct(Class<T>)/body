{
  Class<?> componentImpl;
  if (componentType.equals(ClusteringDependentLogic.class)) {
    CacheMode cacheMode=configuration.clustering().cacheMode();
    if (cacheMode.isReplicated() || !cacheMode.isClustered() || cacheMode.isInvalidation()) {
      return componentType.cast(new ClusteringDependentLogic.AllNodesLogic());
    }
 else {
      return componentType.cast(new ClusteringDependentLogic.DistributionLogic());
    }
  }
 else {
    boolean isTransactional=configuration.transaction().transactionMode().isTransactional();
    if (componentType.equals(InvocationContextContainer.class)) {
      componentImpl=isTransactional ? TransactionalInvocationContextContainer.class : NonTransactionalInvocationContextContainer.class;
      return componentType.cast(getInstance(componentImpl));
    }
 else     if (componentType.equals(CacheNotifier.class)) {
      return (T)new CacheNotifierImpl();
    }
 else     if (componentType.equals(CommandsFactory.class)) {
      return (T)new CommandsFactoryImpl();
    }
 else     if (componentType.equals(CacheLoaderManager.class)) {
      return (T)new CacheLoaderManagerImpl();
    }
 else     if (componentType.equals(PassivationManager.class)) {
      return (T)new PassivationManagerImpl();
    }
 else     if (componentType.equals(BatchContainer.class)) {
      return (T)new BatchContainer();
    }
 else     if (componentType.equals(TransactionCoordinator.class)) {
      return (T)new TransactionCoordinator();
    }
 else     if (componentType.equals(RecoveryAdminOperations.class)) {
      return (T)new RecoveryAdminOperations();
    }
 else     if (componentType.equals(StateTransferLock.class)) {
      return (T)new StateTransferLockImpl();
    }
 else     if (componentType.equals(EvictionManager.class)) {
      return (T)new EvictionManagerImpl();
    }
 else     if (componentType.equals(LockContainer.class)) {
      boolean notTransactional=!isTransactional;
      LockContainer<?> lockContainer=configuration.locking().useLockStriping() ? notTransactional ? new ReentrantStripedLockContainer(configuration.locking().concurrencyLevel()) : new OwnableReentrantStripedLockContainer(configuration.locking().concurrencyLevel()) : notTransactional ? new ReentrantPerEntryLockContainer(configuration.locking().concurrencyLevel()) : new OwnableReentrantPerEntryLockContainer(configuration.locking().concurrencyLevel());
      return (T)lockContainer;
    }
 else     if (componentType.equals(L1Manager.class)) {
      return (T)new L1ManagerImpl();
    }
 else     if (componentType.equals(TransactionFactory.class)) {
      return (T)new TransactionFactory();
    }
 else     if (componentType.equals(BackupSender.class)) {
      return (T)new BackupSenderImpl(globalConfiguration.sites().localSite());
    }
  }
  throw new ConfigurationException("Don't know how to create a " + componentType.getName());
}
