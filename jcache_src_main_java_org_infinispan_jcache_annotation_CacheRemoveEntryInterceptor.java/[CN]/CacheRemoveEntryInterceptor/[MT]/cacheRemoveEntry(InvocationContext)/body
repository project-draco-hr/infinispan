{
  if (log.isTraceEnabled()) {
    log.tracef("Interception of method named '%s'",invocationContext.getMethod().getName());
  }
  final CacheKeyInvocationContext<CacheRemoveEntry> cacheKeyInvocationContext=contextFactory.getCacheKeyInvocationContext(invocationContext);
  final CacheKeyGenerator cacheKeyGenerator=cacheKeyInvocationContext.unwrap(CacheKeyInvocationContextImpl.class).getCacheKeyGenerator();
  final Cache<GeneratedCacheKey,Object> cache=cacheResolver.resolveCache(cacheKeyInvocationContext);
  final CacheRemoveEntry cacheRemoveEntry=cacheKeyInvocationContext.getCacheAnnotation();
  final GeneratedCacheKey cacheKey=cacheKeyGenerator.generateCacheKey(cacheKeyInvocationContext);
  if (!cacheRemoveEntry.afterInvocation()) {
    cache.remove(cacheKey);
    if (log.isTraceEnabled()) {
      log.tracef("Remove entry with key '%s' in cache '%s' before method invocation",cacheKey,cache.getName());
    }
  }
  final Object result=invocationContext.proceed();
  if (cacheRemoveEntry.afterInvocation()) {
    cache.remove(cacheKey);
    if (log.isTraceEnabled()) {
      log.tracef("Remove entry with key '%s' in cache '%s' after method invocation",cacheKey,cache.getName());
    }
  }
  return result;
}
