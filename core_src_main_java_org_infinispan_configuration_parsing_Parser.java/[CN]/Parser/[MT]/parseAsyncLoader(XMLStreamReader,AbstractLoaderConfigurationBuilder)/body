{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceSystemProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ENABLED:
      if (Boolean.valueOf(value).booleanValue())       loaderBuilder.async().enable();
 else       loaderBuilder.async().disable();
    break;
case FLUSH_LOCK_TIMEOUT:
  loaderBuilder.async().flushLockTimeout(Long.valueOf(value).longValue());
break;
case MODIFICTION_QUEUE_SIZE:
loaderBuilder.async().modificationQueueSize(Integer.valueOf(value).intValue());
break;
case SHUTDOWN_TIMEOUT:
loaderBuilder.async().shutdownTimeout(Long.valueOf(value).longValue());
break;
case THREAD_POOL_SIZE:
loaderBuilder.async().threadPoolSize(Integer.valueOf(value).intValue());
break;
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
ParseUtils.requireNoContent(reader);
}
