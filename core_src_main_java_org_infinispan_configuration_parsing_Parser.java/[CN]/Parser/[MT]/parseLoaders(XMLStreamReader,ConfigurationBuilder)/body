{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceSystemProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case PASSIVATION:
      builder.loaders().passivation(Boolean.valueOf(value));
    break;
case PRELOAD:
  builder.loaders().preload(Boolean.valueOf(value));
break;
case SHARED:
builder.loaders().shared(Boolean.valueOf(value));
break;
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
case LOADER:
parseLoader(reader,builder);
break;
default :
throw ParseUtils.unexpectedElement(reader);
}
}
}
