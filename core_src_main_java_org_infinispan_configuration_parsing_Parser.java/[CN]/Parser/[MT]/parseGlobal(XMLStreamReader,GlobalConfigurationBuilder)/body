{
  ParseUtils.requireNoAttributes(reader);
  while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
    Element element=Element.forName(reader.getLocalName());
switch (element) {
case ASYNC_LISTENER_EXECUTOR:
{
        parseAsyncListenerExectuor(reader,builder);
        break;
      }
case ASYNC_TRANSPORT_EXECUTOR:
{
      parseAsyncTransportExecutor(reader,builder);
      break;
    }
case EVICTION_SCHEDULED_EXECUTOR:
{
    parseEvictionScheduledExecutor(reader,builder);
    break;
  }
case GLOBAL_JMX_STATISTICS:
{
  parseGlobalJMXStatistics(reader,builder);
  break;
}
case REPLICATION_QUEUE_SCHEDULED_EXECUTOR:
{
parseReplicationQueueScheduledExecutor(reader,builder);
break;
}
case SERIALIZATION:
{
parseSerialization(reader,builder);
break;
}
case SHUTDOWN:
{
parseShutdown(reader,builder);
break;
}
case TRANSPORT:
{
parseTransport(reader,builder);
break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
}
