{
  ConfigurationBuilderHolder holder=new ConfigurationBuilderHolder();
  for (  XMLStreamReader reader : readers) {
    Element root=ParseUtils.nextElement(reader);
    if (!root.getLocalName().equals(Element.ROOT.getLocalName())) {
      throw ParseUtils.missingRequiredElement(reader,Collections.singleton(Element.ROOT));
    }
    boolean onNamedCaches=false;
    while (!onNamedCaches && reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
      Element element=Element.forName(reader.getLocalName());
switch (element) {
case DEFAULT:
{
          parseDefaultCache(reader,holder.getDefaultConfigurationBuilder());
          break;
        }
case GLOBAL:
{
        parseGlobal(reader,holder.getGlobalConfigurationBuilder());
        break;
      }
case NAMED_CACHE:
{
      onNamedCaches=true;
      break;
    }
default :
{
    throw ParseUtils.unexpectedElement(reader);
  }
}
}
}
for (XMLStreamReader reader : readers) {
if (Element.forName(reader.getLocalName()) == Element.NAMED_CACHE) {
parseNamedCache(reader,holder);
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
case NAMED_CACHE:
{
    parseNamedCache(reader,holder);
    break;
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
}
}
return holder;
}
