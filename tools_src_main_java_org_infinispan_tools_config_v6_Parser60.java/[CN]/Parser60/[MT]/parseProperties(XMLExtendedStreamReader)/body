{
  ParseUtils.requireNoAttributes(reader);
  Properties p=new Properties();
  while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
    Element element=Element.forName(reader.getLocalName());
switch (element) {
case PROPERTY:
{
        int attributes=reader.getAttributeCount();
        ParseUtils.requireAttributes(reader,Attribute.NAME.getLocalName(),Attribute.VALUE.getLocalName());
        String key=null;
        String propertyValue=null;
        for (int i=0; i < attributes; i++) {
          String value=reader.getAttributeValue(i);
          Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
              key=value;
              break;
            }
case VALUE:
{
            propertyValue=value;
            break;
          }
default :
{
          throw ParseUtils.unexpectedAttribute(reader,i);
        }
    }
  }
  p.put(key,propertyValue);
  ParseUtils.requireNoContent(reader);
  break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
return p;
}
