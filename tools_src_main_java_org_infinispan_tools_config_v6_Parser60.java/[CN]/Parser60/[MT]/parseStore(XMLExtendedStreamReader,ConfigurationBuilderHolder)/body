{
  ConfigurationBuilder builder=holder.getCurrentConfigurationBuilder();
  CacheLoader store=null;
  Boolean fetchPersistentState=null;
  Boolean ignoreModifications=null;
  Boolean purgeOnStartup=null;
  Boolean preload=null;
  Boolean shared=null;
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case CLASS:
      store=Util.getInstance(value,holder.getClassLoader());
    break;
case FETCH_PERSISTENT_STATE:
  fetchPersistentState=Boolean.valueOf(value);
break;
case IGNORE_MODIFICATIONS:
ignoreModifications=Boolean.valueOf(value);
break;
case PURGE_ON_STARTUP:
purgeOnStartup=Boolean.valueOf(value);
break;
case PRELOAD:
preload=Boolean.parseBoolean(value);
break;
case SHARED:
shared=Boolean.parseBoolean(value);
break;
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
if (store != null) {
AbstractStoreConfigurationBuilder storeConfigurationBuilder=null;
if (store instanceof SingleFileStore) {
storeConfigurationBuilder=builder.persistence().addSingleFileStore();
parseStoreChildren(reader,storeConfigurationBuilder);
}
 else if (store instanceof ClusterLoader) {
storeConfigurationBuilder=builder.persistence().addClusterLoader();
parseLoaderChildren(reader,storeConfigurationBuilder);
}
if (storeConfigurationBuilder != null) {
if (fetchPersistentState != null) storeConfigurationBuilder.fetchPersistentState(fetchPersistentState);
if (ignoreModifications != null) storeConfigurationBuilder.ignoreModifications(ignoreModifications);
if (purgeOnStartup != null) storeConfigurationBuilder.purgeOnStartup(purgeOnStartup);
if (preload != null) storeConfigurationBuilder.preload(preload);
if (shared != null) storeConfigurationBuilder.shared(shared);
}
}
}
