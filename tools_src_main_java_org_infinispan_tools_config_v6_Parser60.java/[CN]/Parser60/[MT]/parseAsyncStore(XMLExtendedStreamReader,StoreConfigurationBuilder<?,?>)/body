{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ENABLED:
      if (Boolean.parseBoolean(value)) {
        storeBuilder.async().enable();
      }
 else {
        storeBuilder.async().disable();
      }
    break;
case FLUSH_LOCK_TIMEOUT:
  storeBuilder.async().flushLockTimeout(Long.parseLong(value));
break;
case MODIFICATION_QUEUE_SIZE:
storeBuilder.async().modificationQueueSize(Integer.parseInt(value));
break;
case SHUTDOWN_TIMEOUT:
storeBuilder.async().shutdownTimeout(Long.parseLong(value));
break;
case THREAD_POOL_SIZE:
storeBuilder.async().threadPoolSize(Integer.parseInt(value));
break;
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
ParseUtils.requireNoContent(reader);
}
