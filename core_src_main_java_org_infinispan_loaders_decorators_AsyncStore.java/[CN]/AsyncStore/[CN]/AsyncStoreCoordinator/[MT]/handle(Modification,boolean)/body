{
  boolean asyncProcessorNeeded=false;
switch (mod.getType()) {
case STORE:
    Store store=(Store)mod;
  stateMapLock.lock();
state.put(store.getStoredEntry().getKey(),store);
stateMapLock.unlock();
asyncProcessorNeeded=true;
break;
case REMOVE:
Remove remove=(Remove)mod;
stateMapLock.lock();
state.put(remove.getKey(),remove);
stateMapLock.unlock();
asyncProcessorNeeded=true;
break;
case CLEAR:
performClear();
break;
case PURGE_EXPIRED:
delegatePurgeExpired();
break;
case LIST:
applyModificationsList((ModificationsList)mod);
asyncProcessorNeeded=true;
break;
default :
throw new IllegalArgumentException("Unexpected modification type " + mod.getType());
}
if (asyncProcessorNeeded && !nested) {
ensureMoreWorkIsHandled();
}
}
