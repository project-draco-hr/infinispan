{
  super.init(config,cache,m);
  changesDeque=new LinkedBlockingQueue<Modification>(asyncStoreConfig.getModificationQueueSize());
  Configuration cacheCfg=cache != null ? cache.getConfiguration() : null;
  concurrencyLevel=cacheCfg != null ? cacheCfg.getConcurrencyLevel() : 16;
  int cacheStopTimeout=cacheCfg != null ? cacheCfg.getCacheStopTimeout() : 30000;
  Long configuredAsyncStopTimeout=asyncStoreConfig.getShutdownTimeout();
  cacheName=cacheCfg != null ? cacheCfg.getName() : null;
  if (configuredAsyncStopTimeout >= cacheStopTimeout) {
    shutdownTimeout=Math.round(cacheStopTimeout * 0.90);
    log.asyncStoreShutdownTimeoutTooHigh(configuredAsyncStopTimeout,cacheStopTimeout,shutdownTimeout);
  }
 else {
    shutdownTimeout=configuredAsyncStopTimeout;
  }
  lockContainer=new ReleaseAllLockContainer(concurrencyLevel);
  transactions=new ConcurrentHashMap<GlobalTransaction,List<? extends Modification>>(64,0.75f,concurrencyLevel);
}
