{
  if (transactions.isEmpty()) {
    return createAndStore(globalTransaction);
  }
  if (trace) {
    log.tracef("Transactions pending for Transaction %s are %s",globalTransaction,transactions);
  }
  PendingLockPromiseImpl pendingLockPromise=new PendingLockPromiseImpl(transactions,timeService.expectedEndTime(time,unit));
  PendingLockPromise existing=pendingLockPromiseMap.putIfAbsent(globalTransaction,pendingLockPromise);
  if (trace) {
    log.tracef("Stored PendingLock is %s",existing != null ? existing : pendingLockPromise);
  }
  if (existing != null) {
    return existing;
  }
  pendingLockPromise.registerListenerInCacheTransactions();
  if (!pendingLockPromise.isReady()) {
    timeoutExecutor.schedule(pendingLockPromise,time,unit);
  }
  return pendingLockPromise;
}
