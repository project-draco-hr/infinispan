{
  String xml="<?xml version=\"1.0\" encoding=\"UTF-8\"?>" + "<infinispan>" + "<cache-container name=\"1\" default-cache=\"default-cache\">"+ "<local-cache name=\"default-cache\">"+ "  <data-container class=\"org.infinispan.configuration.QueryableDataContainer\">"+ "     <property name=\"foo\">bar</property>"+ "  </data-container>"+ "</local-cache>"+ "</cache-container>"+ "</infinispan>";
  InputStream stream=new ByteArrayInputStream(xml.getBytes());
  EmbeddedCacheManager cm=TestCacheManagerFactory.fromStream(stream);
  try {
    AdvancedCache<Object,Object> cache=cm.getCache().getAdvancedCache();
    DataContainer ddc=DefaultDataContainer.unBoundedDataContainer(cache.getCacheConfiguration().locking().concurrencyLevel());
    ActivationManager activationManager=mock(ActivationManager.class);
    doNothing().when(activationManager).onUpdate(Mockito.anyObject(),Mockito.anyBoolean());
    ((DefaultDataContainer)ddc).initialize(null,null,new InternalEntryFactoryImpl(),activationManager,null,TIME_SERVICE,null,mock(ExpirationManager.class));
    QueryableDataContainer.setDelegate(ddc);
    Assert.assertEquals(cm.getDefaultCacheConfiguration().dataContainer().dataContainer().getClass().getName(),QueryableDataContainer.class.getName());
    Assert.assertEquals(cache.getDataContainer().getClass(),QueryableDataContainer.class);
    QueryableDataContainer dataContainer=QueryableDataContainer.class.cast(cache.getDataContainer());
    Assert.assertFalse(checkLoggedOperations(dataContainer.getLoggedOperations(),"setFoo(bar)"));
    cache.put("name","Pete");
    Assert.assertTrue(checkLoggedOperations(dataContainer.getLoggedOperations(),"put(name, Pete","compute(name,"));
  }
  finally {
    TestingUtil.killCacheManagers(cm);
  }
}
