{
  Object returnValue;
  if (ctx.isOriginLocal()) {
    Object key=command.getKey();
    if (command.hasFlag(Flag.CACHE_MODE_LOCAL) || command.hasFlag(Flag.SKIP_REMOTE_LOOKUP) || command.hasFlag(Flag.IGNORE_RETURN_VALUES)|| cdl.localNodeIsOwner(key)|| dataContainer.containsKey(key)) {
      return invokeNextInterceptor(ctx,command);
    }
    L1WriteSynchronizer l1WriteSync=new L1WriteSynchronizer(dataContainer,l1Lifespan,stateTransferLock,cdl);
    L1WriteSynchronizer presentSync=concurrentWrites.putIfAbsent(key,l1WriteSync);
    if (presentSync == null) {
      try {
        returnValue=invokeNextInterceptor(ctx,command);
        l1WriteSync.runL1UpdateIfPossible(returnValue,command);
      }
 catch (      Throwable t) {
        l1WriteSync.retrievalEncounteredException(t);
        throw t;
      }
 finally {
        concurrentWrites.remove(key);
      }
    }
 else {
      if (trace) {
        log.tracef("Found current request for key %s, waiting for their invocation's response",key);
      }
      try {
        returnValue=presentSync.get();
      }
 catch (      ExecutionException e) {
        throw e.getCause();
      }
    }
  }
 else {
    returnValue=invokeNextInterceptor(ctx,command);
    if (returnValue != null) {
      l1Manager.addRequestor(command.getKey(),ctx.getOrigin());
    }
  }
  return returnValue;
}
