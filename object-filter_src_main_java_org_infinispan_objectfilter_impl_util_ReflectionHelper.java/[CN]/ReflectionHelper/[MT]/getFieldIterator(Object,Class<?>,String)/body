{
  Field field;
  try {
    field=clazz.getDeclaredField(fieldName);
  }
 catch (  NoSuchFieldException e) {
    return null;
  }
  Object fieldValue;
  try {
    field.setAccessible(true);
    fieldValue=field.get(instance);
  }
 catch (  IllegalAccessException e) {
    return null;
  }
  Class<?> fieldClass=field.getType();
  if (fieldClass.isArray()) {
    return new ArrayIterator(fieldValue);
  }
 else   if (Collection.class.isAssignableFrom(fieldClass)) {
    return ((Collection)fieldValue).iterator();
  }
 else   if (Map.class.isAssignableFrom(fieldClass)) {
    return ((Map)fieldValue).values().iterator();
  }
  return null;
}
