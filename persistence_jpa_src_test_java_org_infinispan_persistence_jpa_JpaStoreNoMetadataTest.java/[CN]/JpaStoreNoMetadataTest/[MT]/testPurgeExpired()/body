{
  long lifespan=6000;
  long idle=4000;
  InternalCacheEntry ice1=TestInternalCacheEntryFactory.create("k1",wrap("k1","v1"),lifespan);
  cl.write(TestingUtil.marshalledEntry(ice1,getMarshaller()));
  InternalCacheEntry ice2=TestInternalCacheEntryFactory.create("k2",wrap("k2","v2"),-1,idle);
  cl.write(TestingUtil.marshalledEntry(ice2,getMarshaller()));
  InternalCacheEntry ice3=TestInternalCacheEntryFactory.create("k3",wrap("k3","v3"),lifespan,idle);
  cl.write(TestingUtil.marshalledEntry(ice3,getMarshaller()));
  InternalCacheEntry ice4=TestInternalCacheEntryFactory.create("k4",wrap("k4","v4"),-1,-1);
  cl.write(TestingUtil.marshalledEntry(ice4,getMarshaller()));
  InternalCacheEntry ice5=TestInternalCacheEntryFactory.create("k5",wrap("k5","v5"),lifespan * 1000,idle * 1000);
  cl.write(TestingUtil.marshalledEntry(ice5,getMarshaller()));
  assertTrue(cl.contains("k1"));
  assertTrue(cl.contains("k2"));
  assertTrue(cl.contains("k3"));
  assertTrue(cl.contains("k4"));
  assertTrue(cl.contains("k5"));
  purgeExpired();
  assertTrue(cl.contains("k1"));
  assertTrue(cl.contains("k2"));
  assertTrue(cl.contains("k3"));
  assertTrue(cl.contains("k4"));
  assertTrue(cl.contains("k5"));
}
