{
  Cache<byte[],byte[]> cache=cacheManager.getCache();
  RemoteCache<String,String> remoteCache=remoteCacheManager.getCache();
  remoteCache.put("k1","v1");
  GenericJBossMarshaller marshaller=new GenericJBossMarshaller();
  byte[] k1=marshaller.objectToByteBuffer("k1");
  assertTrue(cache.containsKey(k1));
  String sessionId=interpreter.createSessionId(BasicCacheContainer.DEFAULT_CACHE_NAME);
  Map<String,String> response=interpreter.execute(sessionId,"get --codec=hotrod k1;");
  assertEquals("v1",response.get(ResultKeys.OUTPUT.toString()));
  assertInterpreter(interpreter.execute(sessionId,"remove --codec=hotrod k1;"));
  String v1=remoteCache.get("k1");
  assertNull(v1);
  assertInterpreter(interpreter.execute(sessionId,"put --codec=hotrod k2 v2;"));
  String v2=remoteCache.get("k2");
  assertEquals("v2",v2);
  assertInterpreter(interpreter.execute(sessionId,"evict --codec=hotrod k2;"));
  v2=remoteCache.get("k2");
  assertNull(v2);
}
