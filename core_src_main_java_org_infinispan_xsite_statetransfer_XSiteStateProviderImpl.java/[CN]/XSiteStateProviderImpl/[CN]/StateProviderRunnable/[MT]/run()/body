{
  try {
    final List<XSiteState> chunk=new ArrayList<XSiteState>(chunkSize <= 0 ? DEFAULT_CHUNK_SIZE : chunkSize);
    final Queue<BackupResponse> backupResponseQueue=new LinkedList<BackupResponse>();
    if (debug) {
      log.debugf("[X-Site State Transfer - %s] start DataContainer iteration",xSiteBackup.getSiteName());
    }
    for (    InternalCacheEntry ice : dataContainer) {
      if (canceled.get()) {
        return;
      }
      if (chunkSize > 0 && chunk.size() == chunkSize) {
        try {
          sendFromSharedBuffer(xSiteBackup,chunk,backupResponseQueue);
        }
 catch (        Exception e) {
          log.unableToSendXSiteState(xSiteBackup.getSiteName(),e);
          return;
        }
        chunk.clear();
      }
      if (shouldSendKey(ice.getKey())) {
        chunk.add(XSiteState.fromDataContainer(ice));
      }
    }
    if (canceled.get()) {
      return;
    }
    if (chunk.size() > 0) {
      try {
        sendFromSharedBuffer(xSiteBackup,chunk,backupResponseQueue);
      }
 catch (      Exception e) {
        log.unableToSendXSiteState(xSiteBackup.getSiteName(),e);
        return;
      }
    }
    if (debug) {
      log.debugf("[X-Site State Transfer - %s] finish DataContainer iteration",xSiteBackup.getSiteName());
    }
    @SuppressWarnings("unchecked") AdvancedCacheLoader<Object,Object> stProvider=persistenceManager.getStateTransferProvider();
    if (stProvider != null) {
      if (debug) {
        log.debugf("[X-Site State Transfer - %s] start Persistence iteration",xSiteBackup.getSiteName());
      }
      KeyFilter<Object> filter=new CacheLoaderFilter(new ReadOnlyDataContainerBackedKeySet(dataContainer));
      StateTransferCacheLoaderTask task=new StateTransferCacheLoaderTask(xSiteBackup,chunk,chunkSize,backupResponseQueue,canceled);
      try {
        stProvider.process(filter,task,EXECUTOR_SERVICE,true,true);
        if (canceled.get()) {
          return;
        }
        task.sendRemainingState();
      }
 catch (      CacheException e) {
        log.failedLoadingKeysFromCacheStore(e);
      }
catch (      Exception e) {
        log.unableToSendXSiteState(xSiteBackup.getSiteName(),e);
      }
      if (debug) {
        log.debugf("[X-Site State Transfer - %s] finish Persistence iteration",xSiteBackup.getSiteName());
      }
    }
 else     if (debug) {
      log.debugf("[X-Site State Transfer - %s] skip Persistence iteration",xSiteBackup.getSiteName());
    }
    BackupResponse response=backupResponseQueue.poll();
    while (response != null) {
      if (canceled.get()) {
        return;
      }
      try {
        response.waitForBackupToFinish();
      }
 catch (      Exception e) {
        log.unableToWaitForXSiteStateAcks(xSiteBackup.getSiteName(),e);
        return;
      }
      response=backupResponseQueue.poll();
    }
  }
  finally {
    notifyStateTransferEnd(xSiteBackup.getSiteName(),origin);
  }
}
