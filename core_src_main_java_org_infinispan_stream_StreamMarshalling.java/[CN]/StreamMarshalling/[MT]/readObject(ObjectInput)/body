{
  int number=input.readUnsignedByte();
  ExternalizerId[] ids=ExternalizerId.values();
  if (number < 0 || number >= ids.length) {
    throw new IllegalArgumentException("Found invalid number " + number);
  }
  ExternalizerId id=ids[number];
switch (id) {
case EQUALITY_PREDICATE:
    return new EqualityPredicate(input.readObject());
case ENTRY_KEY_FUNCTION:
  return EntryToKeyFunction.getInstance();
case ENTRY_VALUE_FUNCTION:
return EntryToValueFunction.getInstance();
case NON_NULL_PREDICATE:
return NonNullPredicate.getInstance();
case ALWAYS_TRUE_PREDICATE:
return AlwaysTruePredicate.getInstance();
default :
throw new IllegalArgumentException("ExternalizerId not supported: " + id);
}
}
