{
  ClusterTopologyManager ctm=TestingUtil.extractGlobalComponent(manager,ClusterTopologyManager.class);
  final Answer<Object> forwardedAnswer=AdditionalAnswers.delegatesTo(ctm);
  ClusterTopologyManager mockManager=mock(ClusterTopologyManager.class,withSettings().defaultAnswer(forwardedAnswer));
  doAnswer(new Answer<Object>(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      Object answer=forwardedAnswer.answer(invocation);
      checkPoint.trigger("sending_join_response");
      checkPoint.awaitStrict("resume_join_response",10,SECONDS);
      return answer;
    }
  }
).when(mockManager).handleJoin(anyString(),any(Address.class),any(CacheJoinInfo.class),anyInt());
  TestingUtil.replaceComponent(manager,ClusterTopologyManager.class,mockManager,true);
}
