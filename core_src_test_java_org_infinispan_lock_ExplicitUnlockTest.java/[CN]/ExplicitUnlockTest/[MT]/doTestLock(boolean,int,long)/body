{
  for (int key=1; key <= NUMBER_OF_KEYS; key++) {
    cache.put("" + key,"value");
  }
  List<Future<Boolean>> results=new ArrayList<Future<Boolean>>(nThreads);
  for (int i=1; i <= nThreads; i++) {
    results.add(fork(new Worker(i,cache,withUnlock,stepDelayMsec)));
  }
  boolean success=true;
  for (  Future<Boolean> next : results) {
    success=success && next.get(30,TimeUnit.SECONDS);
  }
  assertTrue("All worker should complete without exceptions",success);
  assertNoTransactions();
  for (int i=0; i < NUMBER_OF_KEYS; ++i) {
    assertNotLocked(cache,valueOf(i));
  }
}
