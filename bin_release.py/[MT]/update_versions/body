def update_versions(version):
    poms_to_patch = get_poms_to_patch('.')
    modified_files = []
    for pom in poms_to_patch:
        if patch(pom, version):
            modified_files.append(pom)
    version_java = './core/src/main/java/org/infinispan/Version.java'
    modified_files.append(version_java)
    f_in = open(version_java)
    f_out = open((version_java + '.tmp'), 'w')
    regexp = re.compile('\\s*private static final (String (MAJOR|MINOR|MICRO|MODIFIER)|boolean SNAPSHOT)')
    pieces = version.split('.')
    try:
        for l in f_in:
            if regexp.match(l):
                if (l.find('MAJOR') > (-1)):
                    f_out.write(('   private static final String MAJOR = "%s";\n' % pieces[0]))
                elif (l.find('MINOR') > (-1)):
                    f_out.write(('   private static final String MINOR = "%s";\n' % pieces[1]))
                elif (l.find('MICRO') > (-1)):
                    f_out.write(('   private static final String MICRO = "%s";\n' % pieces[2]))
                elif (l.find('MODIFIER') > (-1)):
                    f_out.write(('   private static final String MODIFIER = "%s";\n' % pieces[3]))
                elif (l.find('SNAPSHOT') > (-1)):
                    f_out.write('   private static final boolean SNAPSHOT = false;\n')
            else:
                f_out.write(l)
    finally:
        f_in.close()
        f_out.close()
    os.rename((version_java + '.tmp'), version_java)
    git.commit(modified_files)
