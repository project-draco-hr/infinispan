def release():
    require_settings_file()
    missing_keys = []
    expected_keys = [svn_base_key, local_tags_dir_key, local_mvn_repo_dir_key]
    for expected_key in expected_keys:
        if (expected_key not in settings):
            missing_keys.append(expected_key)
    if (len(missing_keys) > 0):
        print ('Entries %s are missing in configuration file %s!  Cannot proceed!' % (missing_keys, settings_file))
        sys.exit(2)
    if (len(sys.argv) < 2):
        helpAndExit()
    base_dir = os.getcwd()
    version = validateVersion(sys.argv[1])
    print ('Releasing Infinispan version ' + version)
    print 'Please stand by!'
    newVersion = ('%s/tags/%s' % (settings[svn_base_key], version))
    print ('Step 1: Tagging trunk in SVN as %s' % newVersion)
    tagInSubversion(version, newVersion)
    print 'Step 1: Complete'
    workingDir = ((settings[local_tags_dir_key] + '/') + version)
    print 'Step 2: Updating version number in source files'
    updateVersions(version, workingDir, base_dir)
    print 'Step 2: Complete'
    print 'Step 3: Build and test in Maven2'
    buildAndTest(workingDir)
    print 'Step 3: Complete'
    print 'Step 4: Checking in to Maven2 Repo (this can take a while, go get coffee)'
    checkInMaven2Repo(version, workingDir)
    print 'Step 4: Complete'
    print 'Step 5: Uploading Javadocs'
    uploadJavadocs(base_dir, workingDir, version)
    print 'Step 5: Complete'
    print 'Step 6: Uploading to Sourceforge'
    uploadArtifactsToSourceforge(version)
    print 'Step 6: Complete'
    print '\n\n\nDone!  Now all you need to do is:'
    print '   1.  Update http://www.infinispan.org'
    print '   2.  Update wiki pages with relevant information and links to docs, etc'
    print '   3.  Login to the Sourceforge project admin page and mark the -bin.ZIP package as the default download for all platforms.'
