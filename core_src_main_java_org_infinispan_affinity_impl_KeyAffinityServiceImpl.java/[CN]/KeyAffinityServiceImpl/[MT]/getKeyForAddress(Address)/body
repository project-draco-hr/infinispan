{
  if (!started) {
    throw new IllegalStateException("You have to start the service first!");
  }
  if (address == null)   throw new NullPointerException("Null address not supported!");
  BlockingQueue<K> queue=null;
  try {
    K result=null;
    while (result == null && !keyGenWorker.isStopped()) {
      maxNumberInvariant.readLock().lock();
      try {
        queue=address2key.get(address);
        if (queue == null)         throw new IllegalStateException("Address " + address + " is no longer in the cluster");
        result=queue.poll();
        if (result == null) {
          keyProducerStartLatch.open();
          if (!isNodeInConsistentHash(address))           throw new IllegalStateException("Address " + address + " is no longer in the cluster");
        }
      }
  finally {
        maxNumberInvariant.readLock().unlock();
      }
      if (result == null) {
        try {
          result=queue.poll(POLL_INTERVAL_MILLIS,TimeUnit.MILLISECONDS);
        }
 catch (        InterruptedException e) {
          Thread.currentThread().interrupt();
        }
      }
    }
    existingKeyCount.decrementAndGet();
    log.tracef("Returning key %s for address %s",result,address);
    return result;
  }
  finally {
    if (queue != null && queue.size() < bufferSize * THRESHOLD + 1) {
      keyProducerStartLatch.open();
    }
  }
}
