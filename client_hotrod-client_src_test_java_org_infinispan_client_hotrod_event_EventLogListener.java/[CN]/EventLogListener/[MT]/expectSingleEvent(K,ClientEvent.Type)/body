{
switch (type) {
case CLIENT_CACHE_ENTRY_CREATED:
    ClientCacheEntryCreatedEvent createdEvent=pollEvent(type);
  assertAnyEquals(key,createdEvent.getKey());
assertAnyEquals(serverDataVersion(remote,key),createdEvent.getVersion());
break;
case CLIENT_CACHE_ENTRY_MODIFIED:
ClientCacheEntryModifiedEvent modifiedEvent=pollEvent(type);
assertAnyEquals(key,modifiedEvent.getKey());
assertAnyEquals(serverDataVersion(remote,key),modifiedEvent.getVersion());
break;
case CLIENT_CACHE_ENTRY_REMOVED:
ClientCacheEntryRemovedEvent removedEvent=pollEvent(type);
assertAnyEquals(key,removedEvent.getKey());
break;
case CLIENT_CACHE_ENTRY_EXPIRED:
ClientCacheEntryExpiredEvent expiredEvent=pollEvent(type);
assertAnyEquals(key,expiredEvent.getKey());
break;
}
Assert.assertEquals(0,queue(type).size());
}
