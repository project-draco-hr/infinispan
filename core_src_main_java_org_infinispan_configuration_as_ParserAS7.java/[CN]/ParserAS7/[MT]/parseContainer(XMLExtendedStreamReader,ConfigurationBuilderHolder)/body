{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case ALIASES:
case JNDI_NAME:
case NAME:
case START:
{
        break;
      }
case DEFAULT_CACHE:
{
      break;
    }
case LISTENER_EXECUTOR:
{
    break;
  }
case EVICTION_EXECUTOR:
{
  break;
}
case REPLICATION_QUEUE_EXECUTOR:
{
break;
}
case MODULE:
{
break;
}
default :
{
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
case TRANSPORT:
{
parseTransport(reader,holder);
break;
}
case LOCAL_CACHE:
{
parseLocalCache(reader,holder);
break;
}
case INVALIDATION_CACHE:
{
parseInvalidationCache(reader,holder);
break;
}
case REPLICATED_CACHE:
{
parseReplicatedCache(reader,holder);
break;
}
case DISTRIBUTED_CACHE:
{
parseDistributedCache(reader,holder);
break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
}
