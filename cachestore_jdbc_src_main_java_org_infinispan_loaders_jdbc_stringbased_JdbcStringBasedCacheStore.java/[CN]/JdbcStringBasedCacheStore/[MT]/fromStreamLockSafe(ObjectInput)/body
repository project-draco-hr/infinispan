{
  Connection conn=null;
  PreparedStatement ps=null;
  try {
    conn=connectionFactory.getConnection();
    String sql=tableManipulation.getInsertRowSql();
    ps=conn.prepareStatement(sql);
    int readStoredEntries=0;
    int batchSize=config.getBatchSize();
    Object objFromStream=marshaller.objectFromObjectStream(objectInput);
    while (objFromStream instanceof InternalCacheEntry) {
      InternalCacheEntry se=(InternalCacheEntry)objFromStream;
      readStoredEntries++;
      String key=key2StringMapper.getStringMapping(se.getKey());
      ByteBuffer buffer=JdbcUtil.marshall(getMarshaller(),se);
      ps.setBinaryStream(1,buffer.getStream(),buffer.getLength());
      ps.setLong(2,se.getExpiryTime());
      ps.setString(3,key);
      ps.addBatch();
      if (readStoredEntries % batchSize == 0) {
        ps.executeBatch();
        if (log.isTraceEnabled())         log.trace("Executing batch " + (readStoredEntries / batchSize) + ", batch size is "+ batchSize);
      }
      objFromStream=marshaller.objectFromObjectStream(objectInput);
    }
    if (readStoredEntries % batchSize != 0)     ps.executeBatch();
    if (log.isTraceEnabled())     log.trace("Successfully inserted " + readStoredEntries + " buckets into the database, batch size is "+ batchSize);
  }
 catch (  IOException ex) {
    logAndThrow(ex,"I/O failure while integrating state into store");
  }
catch (  SQLException e) {
    logAndThrow(e,"SQL failure while integrating state into store");
  }
catch (  ClassNotFoundException e) {
    logAndThrow(e,"Unexpected failure while integrating state into store");
  }
 finally {
    JdbcUtil.safeClose(ps);
    connectionFactory.releaseConnection(conn);
  }
}
