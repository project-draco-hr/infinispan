{
  InternalCacheEntry existingOne=readStoredEntry(ed,lockingKey);
  String sql;
  if (existingOne == null) {
    sql=tableManipulation.getInsertRowSql();
  }
 else {
    sql=tableManipulation.getUpdateRowSql();
  }
  if (log.isTraceEnabled())   log.trace("Running sql '" + sql + "' on "+ ed+ ". Key string is '"+ lockingKey+ "'");
  Connection connection=null;
  PreparedStatement ps=null;
  ByteBuffer byteBuffer=null;
  try {
    byteBuffer=JdbcUtil.marshall(getMarshaller(),ed.toInternalCacheValue());
    connection=connectionFactory.getConnection();
    ps=connection.prepareStatement(sql);
    ps.setBinaryStream(1,byteBuffer.getStream(),byteBuffer.getLength());
    ps.setLong(2,ed.getExpiryTime());
    ps.setString(3,lockingKey);
    ps.executeUpdate();
  }
 catch (  SQLException ex) {
    logAndThrow(ex,"Error while storing string key to database; key: '" + lockingKey + "', buffer size of value: "+ byteBuffer.getLength()+ " bytes");
  }
catch (  InterruptedException e) {
    if (log.isTraceEnabled())     log.trace("Interrupted while marshalling to store");
    Thread.currentThread().interrupt();
  }
 finally {
    JdbcUtil.safeClose(ps);
    connectionFactory.releaseConnection(connection);
  }
}
