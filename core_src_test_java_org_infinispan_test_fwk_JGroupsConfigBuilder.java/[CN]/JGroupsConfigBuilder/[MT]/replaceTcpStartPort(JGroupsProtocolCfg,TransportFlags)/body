{
  ProtocolType transportProtocol=jgroupsCfg.containsProtocol(TCP_NIO2) ? TCP_NIO2 : TCP;
  Map<String,String> props=jgroupsCfg.getProtocol(transportProtocol).getProperties();
  Integer startPort=threadTcpStartPort.get();
  int portRange=TCP_PORT_RANGE_PER_THREAD;
  if (transportFlags.isPortRangeSpecified()) {
    portRange=10;
    int maxIndex=TCP_PORT_RANGE_PER_THREAD / portRange - 1;
    if (transportFlags.portRange() > maxIndex) {
      throw new IllegalStateException("Currently we only support " + (maxIndex + 1) + " ranges/sites!");
    }
    startPort+=transportFlags.portRange() * portRange;
  }
  props.put("bind_port",startPort.toString());
  props.put("port_range",String.valueOf(portRange - 1));
  return replaceProperties(jgroupsCfg,props,transportProtocol);
}
