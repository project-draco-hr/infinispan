{
  if (!ctx.getGlobalTransaction().isRemote()) {
    if (trace)     log.trace("received my own message (discarding it)");
    return null;
  }
  try {
    if (trace)     log.trace("(" + cacheManager.getAddress() + ") call on command ["+ command+ "]");
    GlobalTransaction gtx=ctx.getGlobalTransaction();
    Transaction ltx=txTable.getLocalTransaction(gtx);
    if (ltx == null) {
      log.warn("No local transaction for this remotely originating rollback.  Possibly rolling back before a prepare call was broadcast?");
      txTable.cleanup(gtx);
      return null;
    }
    Transaction currentTx=txManager.getTransaction();
    boolean resumeCurrentTxOnCompletion=false;
    try {
      if (!ltx.equals(currentTx)) {
        currentTx=txManager.suspend();
        resumeCurrentTxOnCompletion=true;
        txManager.resume(ltx);
        ctx.setTransaction(ltx);
      }
      if (log.isDebugEnabled())       log.debug("executing with local TX " + ltx + " under global tx "+ gtx);
      txManager.rollback();
      if (getStatisticsEnabled())       rollbacks.incrementAndGet();
    }
  finally {
      if (resumeCurrentTxOnCompletion) {
        resumeTransactionOnCompletion(ctx,currentTx);
      }
      transactions.remove(ltx);
      txTable.cleanup(gtx);
    }
    if (log.isDebugEnabled())     log.debug("Finished remote commit/rollback method for " + gtx);
  }
 catch (  Throwable throwable) {
    throwIfNeeded(ctx,throwable);
  }
  return null;
}
