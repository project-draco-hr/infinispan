{
  try {
    return invokeNextInterceptor(ctx,command);
  }
  finally {
    if (!ctx.isOriginLocal() && !ctx.skipTransactionCompleteCheck()) {
      boolean originatorMissing=!rpcManager.getTransport().getMembers().contains(command.getOrigin());
      boolean alreadyCompleted=txTable.isTransactionCompleted(command.getGlobalTransaction());
      if (log.isTraceEnabled()) {
        log.tracef("invokeNextInterceptorAndVerifyTransaction :: originatorMissing=%s, alreadyCompleted=%s",originatorMissing,alreadyCompleted);
      }
      if (alreadyCompleted || originatorMissing) {
        if (log.isTraceEnabled()) {
          log.tracef("Rolling back remote transaction %s because either already completed(%s) or originator no " + "longer in the cluster(%s).",command.getGlobalTransaction(),alreadyCompleted,originatorMissing);
        }
        RollbackCommand rollback=new RollbackCommand(command.getCacheName(),command.getGlobalTransaction());
        try {
          invokeNextInterceptor(ctx,rollback);
        }
  finally {
          RemoteTransaction remoteTx=(RemoteTransaction)ctx.getCacheTransaction();
          remoteTx.markForRollback(true);
          txTable.removeRemoteTransaction(command.getGlobalTransaction());
        }
      }
    }
  }
}
