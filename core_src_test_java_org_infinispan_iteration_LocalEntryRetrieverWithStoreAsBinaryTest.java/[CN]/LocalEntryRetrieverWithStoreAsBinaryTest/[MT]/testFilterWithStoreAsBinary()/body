{
  Map<CustomClass,CustomClass> originalValues=new HashMap<>();
  originalValues.put(new CustomClass("value0"),new CustomClass("cache0"));
  originalValues.put(new CustomClass("value1"),new CustomClass("cache1"));
  originalValues.put(new CustomClass("value2"),new CustomClass("cache2"));
  cache.putAll(originalValues);
  EntryRetriever<CustomClass,CustomClass> retriever=cache.getAdvancedCache().getComponentRegistry().getComponent(EntryRetriever.class);
  Iterator<CacheEntry<CustomClass,CustomClass>> iterator=retriever.retrieveEntries(new CustomClassFilter(originalValues),null,null,null);
  int count=0;
  Map<CustomClass,CustomClass> results=new HashMap<>();
  while (iterator.hasNext()) {
    Map.Entry<CustomClass,CustomClass> entry=iterator.next();
    results.put(entry.getKey(),entry.getValue());
    count++;
  }
  assertEquals(3,count);
  assertEquals(originalValues,results);
}
