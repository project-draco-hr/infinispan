{
  Map<CustomClass,CustomClass> originalValues=new HashMap<>();
  originalValues.put(new CustomClass("value0"),new CustomClass("cache0"));
  originalValues.put(new CustomClass("value1"),new CustomClass("cache1"));
  originalValues.put(new CustomClass("value2"),new CustomClass("cache2"));
  cache.putAll(originalValues);
  EntryRetriever<CustomClass,CustomClass> retriever=cache.getAdvancedCache().getComponentRegistry().getComponent(EntryRetriever.class);
  Iterator<CacheEntry<CustomClass,CustomClass>> iterator=retriever.retrieveEntries(new CustomClassFilter(Collections.singletonMap(new CustomClass("value1"),new CustomClass("cache1"))),null,null,null);
  assertTrue(iterator.hasNext());
  CacheEntry<CustomClass,CustomClass> entry=iterator.next();
  assertEquals(new CustomClass("value1"),entry.getKey());
  assertEquals(new CustomClass("cache1"),entry.getValue());
  assertFalse(iterator.hasNext());
}
