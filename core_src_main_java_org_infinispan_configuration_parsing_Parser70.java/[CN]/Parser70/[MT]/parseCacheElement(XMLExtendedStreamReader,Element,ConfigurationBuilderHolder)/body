{
  ConfigurationBuilder builder=holder.getCurrentConfigurationBuilder();
switch (element) {
case LOCKING:
{
      this.parseLocking(reader,builder);
      break;
    }
case TRANSACTION:
{
    this.parseTransaction(reader,builder,holder);
    break;
  }
case EVICTION:
{
  this.parseEviction(reader,builder);
  break;
}
case EXPIRATION:
{
this.parseExpiration(reader,builder);
break;
}
case PERSISTENCE:
{
this.parsePersistence(reader,holder);
break;
}
case INDEXING:
{
this.parseIndexing(reader,holder);
break;
}
case CUSTOM_INTERCEPTORS:
{
this.parseCustomInterceptors(reader,holder);
break;
}
case VERSIONING:
{
parseVersioning(reader,holder);
break;
}
case COMPATIBILITY:
{
parseCompatibility(reader,holder);
break;
}
case STORE_AS_BINARY:
{
parseStoreAsBinary(reader,holder);
break;
}
case MODULES:
{
parseModules(reader,holder);
break;
}
case DATA_CONTAINER:
{
parseDataContainer(reader,holder);
break;
}
case BACKUPS:
{
this.parseBackups(reader,builder);
break;
}
case BACKUP_FOR:
{
this.parseBackupFor(reader,builder);
break;
}
case SECURITY:
{
this.parseCacheSecurity(reader,builder);
break;
}
default :
{
reader.handleAny(holder);
}
}
}
