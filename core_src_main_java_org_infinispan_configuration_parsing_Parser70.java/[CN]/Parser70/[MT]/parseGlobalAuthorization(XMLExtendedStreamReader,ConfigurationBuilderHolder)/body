{
  GlobalAuthorizationConfigurationBuilder builder=holder.getGlobalConfigurationBuilder().security().authorization().enable();
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case AUDIT_LOGGER:
{
        builder.auditLogger(Util.<AuditLogger>getInstance(value,holder.getClassLoader()));
        break;
      }
case MAPPER:
{
      builder.principalRoleMapper(Util.<PrincipalRoleMapper>getInstance(value,holder.getClassLoader()));
      break;
    }
default :
{
    throw ParseUtils.unexpectedAttribute(reader,i);
  }
}
}
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
case ROLE:
{
  parseGlobalRole(reader,builder);
  break;
}
default :
{
throw ParseUtils.unexpectedElement(reader);
}
}
}
}
