{
  Response rsp=response.getValue();
  if (rsp.isSuccessful() && rsp.isValid()) {
    Map<K,List<V>> r=(Map<K,List<V>>)((SuccessfulResponse)rsp).getResponseValue();
    for (    Entry<K,List<V>> entry : r.entrySet()) {
synchronized (result) {
        List<V> list=result.get(entry.getKey());
        if (list != null) {
          list.addAll(entry.getValue());
        }
 else {
          list=new ArrayList<V>();
          list.addAll(entry.getValue());
        }
        result.put(entry.getKey(),list);
      }
    }
  }
 else   if (rsp instanceof ExceptionResponse) {
    throw new CacheException("Reduce phase of MapReduce task on remote node " + response.getKey() + " threw Exception",((ExceptionResponse)rsp).getException());
  }
 else {
    throw new CacheException("Reduce phase of MapReduce task on remote node " + response.getKey() + " failed ");
  }
}
