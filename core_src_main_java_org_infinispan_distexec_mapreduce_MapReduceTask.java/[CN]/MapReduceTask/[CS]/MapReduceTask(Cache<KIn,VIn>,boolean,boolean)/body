{
  if (masterCacheNode == null)   throw new IllegalArgumentException("Can not use null cache for MapReduceTask");
  ensureProperCacheState(masterCacheNode.getAdvancedCache());
  this.cache=masterCacheNode.getAdvancedCache();
  this.keys=new LinkedList<KIn>();
  this.marshaller=cache.getComponentRegistry().getComponent(StreamingMarshaller.class,CACHE_MARSHALLER);
  this.mapReduceManager=cache.getComponentRegistry().getComponent(MapReduceManager.class);
  this.cancellationService=cache.getComponentRegistry().getComponent(CancellationService.class);
  this.taskId=UUID.randomUUID();
  this.distributeReducePhase=distributeReducePhase;
  this.useIntermediateSharedCache=useIntermediateSharedCache;
  this.cancellableTasks=Collections.synchronizedList(new ArrayList<CancellableTaskPart>());
  this.clusteringDependentLogic=cache.getComponentRegistry().getComponent(ClusteringDependentLogic.class);
  this.isLocalOnly=cache.getRpcManager() == null;
  this.rpcOptionsBuilder=isLocalOnly ? null : new RpcOptionsBuilder(cache.getRpcManager().getDefaultRpcOptions(true));
}
