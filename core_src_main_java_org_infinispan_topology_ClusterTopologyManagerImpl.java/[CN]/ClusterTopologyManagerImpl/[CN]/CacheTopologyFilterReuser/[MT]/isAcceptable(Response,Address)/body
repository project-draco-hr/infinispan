{
  if (response.isSuccessful()) {
    ManagerStatusResponse value=(ManagerStatusResponse)((SuccessfulResponse)response).getResponseValue();
    for (    Entry<String,CacheStatusResponse> entry : value.getCaches().entrySet()) {
      CacheStatusResponse csr=entry.getValue();
      CacheTopology cacheTopology=csr.getCacheTopology();
      CacheTopology stableTopology=csr.getStableTopology();
      CacheTopology replaceCacheTopology=seenTopologies.get(cacheTopology);
      if (replaceCacheTopology == null) {
        seenTopologies.put(cacheTopology,cacheTopology);
        replaceCacheTopology=cacheTopology;
      }
      CacheTopology replaceStableTopology;
      if (!Objects.equals(cacheTopology,stableTopology)) {
        replaceStableTopology=seenTopologies.get(stableTopology);
        if (replaceStableTopology == null) {
          seenTopologies.put(stableTopology,stableTopology);
          replaceStableTopology=stableTopology;
        }
      }
 else {
        replaceStableTopology=replaceCacheTopology;
      }
      CacheJoinInfo info=csr.getCacheJoinInfo();
      CacheJoinInfo replaceInfo=seenInfos.get(info);
      if (replaceInfo == null) {
        seenInfos.put(info,info);
      }
      if (replaceCacheTopology != null || replaceStableTopology != null || replaceInfo != null) {
        entry.setValue(new CacheStatusResponse(replaceInfo != null ? replaceInfo : info,replaceCacheTopology,replaceStableTopology,csr.getAvailabilityMode()));
      }
    }
  }
  return true;
}
