{
synchronized (viewHandlingLock) {
    if (newViewId <= viewId) {
      log.tracef("Ignoring old cluster view notification: %s",newViewId);
      return;
    }
    boolean becameCoordinator=!isCoordinator && transport.isCoordinator();
    isCoordinator=transport.isCoordinator();
    if (trace) {
      log.tracef("Received new cluster view: %d, isCoordinator = %s, becameCoordinator = %s",(Object)newViewId,isCoordinator,becameCoordinator);
    }
    mustRecoverClusterStatus|=mergeView || becameCoordinator;
    if (!isCoordinator)     return;
    if (mustRecoverClusterStatus) {
      cacheStatusMap.clear();
      try {
        recoverClusterStatus(newViewId,mergeView,transport.getMembers());
        mustRecoverClusterStatus=false;
      }
 catch (      InterruptedException e) {
        log.tracef("Cluster state recovery interrupted because the coordinator is shutting down");
        return;
      }
catch (      SuspectException e) {
        return;
      }
catch (      Exception e) {
        if (!isShuttingDown) {
          log.failedToRecoverClusterState(e);
        }
 else {
          log.tracef("Cluster state recovery failed because the coordinator is shutting down");
        }
      }
    }
synchronized (viewUpdateLock) {
      viewId=newViewId;
      viewUpdateLock.notifyAll();
    }
  }
  if (!mustRecoverClusterStatus) {
    try {
      updateCacheMembers(transport.getMembers());
    }
 catch (    Exception e) {
      log.errorUpdatingMembersList(e);
    }
  }
}
