{
  log.debugf("Recovering running caches in the cluster");
  ReplicableCommand command=new CacheTopologyControlCommand(null,CacheTopologyControlCommand.Type.GET_STATUS,transport.getAddress());
  Map<Address,Object> statusResponses=executeOnClusterSync(command,getGlobalTimeout());
  HashMap<String,List<CacheTopology>> clusterCacheMap=new HashMap<String,List<CacheTopology>>();
  for (  Object o : statusResponses.values()) {
    Map<String,Object[]> nodeStatus=(Map<String,Object[]>)o;
    for (    Map.Entry<String,Object[]> e : nodeStatus.entrySet()) {
      String cacheName=e.getKey();
      CacheJoinInfo joinInfo=(CacheJoinInfo)e.getValue()[0];
      CacheTopology cacheTopology=(CacheTopology)e.getValue()[1];
      List<CacheTopology> topologyList=clusterCacheMap.get(cacheName);
      if (topologyList == null) {
        rebalancePolicy.initCache(cacheName,joinInfo);
        topologyList=new ArrayList<CacheTopology>();
        clusterCacheMap.put(cacheName,topologyList);
      }
      topologyList.add(cacheTopology);
    }
  }
  return clusterCacheMap;
}
