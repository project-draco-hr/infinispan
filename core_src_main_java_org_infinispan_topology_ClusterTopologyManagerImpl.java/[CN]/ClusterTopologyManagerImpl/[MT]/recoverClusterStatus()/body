{
  log.debugf("Recovering running caches in the cluster");
  ReplicableCommand command=new CacheTopologyControlCommand(null,CacheTopologyControlCommand.Type.GET_STATUS,transport.getAddress(),viewId);
  Map<Address,Object> statusResponses=executeOnClusterSync(command,getGlobalTimeout());
  HashMap<String,List<CacheTopology>> clusterCacheMap=new HashMap<String,List<CacheTopology>>();
  for (  Map.Entry<Address,Object> responseEntry : statusResponses.entrySet()) {
    Address sender=responseEntry.getKey();
    Map<String,Object[]> nodeStatus=(Map<String,Object[]>)responseEntry.getValue();
    for (    Map.Entry<String,Object[]> statusEntry : nodeStatus.entrySet()) {
      String cacheName=statusEntry.getKey();
      CacheJoinInfo joinInfo=(CacheJoinInfo)statusEntry.getValue()[0];
      CacheTopology cacheTopology=(CacheTopology)statusEntry.getValue()[1];
      List<CacheTopology> topologyList=clusterCacheMap.get(cacheName);
      if (topologyList == null) {
        initCacheStatusIfAbsent(cacheName,joinInfo);
        topologyList=new ArrayList<CacheTopology>();
        clusterCacheMap.put(cacheName,topologyList);
      }
      topologyList.add(cacheTopology);
      cacheStatusMap.get(cacheName).addMember(sender);
    }
  }
  return clusterCacheMap;
}
