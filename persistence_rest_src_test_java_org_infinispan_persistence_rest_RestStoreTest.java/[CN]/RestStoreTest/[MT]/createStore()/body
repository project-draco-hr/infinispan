{
  ConfigurationBuilder localBuilder=TestCacheManagerFactory.getDefaultCacheConfiguration(false);
  localBuilder.eviction().maxEntries(100).strategy(EvictionStrategy.UNORDERED).expiration().wakeUpInterval(10L);
  GlobalConfigurationBuilder globalConfig=new GlobalConfigurationBuilder().nonClusteredDefault();
  globalConfig.globalJmxStatistics().allowDuplicateDomains(true);
  localCacheManager=TestCacheManagerFactory.createCacheManager(globalConfig,localBuilder);
  localCacheManager.getCache(REMOTE_CACHE);
  GlobalComponentRegistry gcr=localCacheManager.getGlobalComponentRegistry();
  gcr.registerComponent(timeService,TimeService.class);
  gcr.rewire();
  localCacheManager.getCache(REMOTE_CACHE).getAdvancedCache().getComponentRegistry().rewire();
  restServer=RestTestingUtil.startRestServer(localCacheManager);
  ConfigurationBuilder builder=TestCacheManagerFactory.getDefaultCacheConfiguration(false);
  RestStoreConfigurationBuilder storeConfigurationBuilder=builder.persistence().addStore(RestStoreConfigurationBuilder.class);
  storeConfigurationBuilder.host(restServer.getHost()).port(restServer.getPort()).path("/rest/" + REMOTE_CACHE);
  storeConfigurationBuilder.connectionPool().maxTotalConnections(10).maxConnectionsPerHost(10);
  storeConfigurationBuilder.validate();
  RestStore restStore=new RestStore();
  restStore.init(createContext(builder.build()));
  return restStore;
}
