{
  if (keys.isEmpty()) {
    return Collections.emptyList();
  }
  final Log log=getLog();
  Collection<Object> keysToLock=new ArrayList<>(keys.size());
  for (  Object key : keys) {
switch (LockUtil.getLockOwnership(key,cdl)) {
case PRIMARY:
      if (trace) {
        log.tracef("Acquiring locks on %s.",toStr(key));
      }
    keysToLock.add(key);
  break;
case BACKUP:
if (trace) {
  log.tracef("Acquiring backup locks on %s.",toStr(key));
}
ctx.getCacheTransaction().addBackupLockForKey(key);
break;
default :
break;
}
}
if (keysToLock.isEmpty()) {
return Collections.emptyList();
}
checkPendingAndLockAllKeys(ctx,keysToLock,lockTimeout);
return keysToLock;
}
