{
  legacy.fetchPersistentState(config.fetchPersistentState());
  legacy.ignoreModifications(config.ignoreModifications());
  legacy.purgeOnStartup(config.purgeOnStartup());
  legacy.purgeSynchronously(config.purgeSynchronously());
  legacy.purgerThreads(config.purgerThreads());
  legacy.getAsyncStoreConfig().setEnabled(config.async().enabled());
  legacy.getAsyncStoreConfig().flushLockTimeout(config.async().flushLockTimeout());
  legacy.getAsyncStoreConfig().modificationQueueSize(config.async().modificationQueueSize());
  legacy.getAsyncStoreConfig().shutdownTimeout(config.async().shutdownTimeout());
  legacy.getAsyncStoreConfig().threadPoolSize(config.async().threadPoolSize());
  legacy.getSingletonStoreConfig().enabled(config.singletonStore().enabled());
  legacy.getSingletonStoreConfig().pushStateTimeout(config.singletonStore().pushStateTimeout());
  legacy.getSingletonStoreConfig().pushStateWhenCoordinator(config.singletonStore().pushStateWhenCoordinator());
  if (config instanceof LockSupportStoreConfiguration) {
    LockSupportStoreConfiguration lockConfig=(LockSupportStoreConfiguration)config;
    LockSupportCacheStoreConfig lockLegacy=(LockSupportCacheStoreConfig)legacy;
    lockLegacy.setLockAcquistionTimeout(lockConfig.lockAcquistionTimeout());
    lockLegacy.setLockConcurrencyLevel(lockConfig.lockConcurrencyLevel());
  }
}
