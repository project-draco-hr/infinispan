{
  LoaderConfigurationBuilder<?,?> loaderBuilder=null;
  if (clc instanceof ClusterCacheLoaderConfig) {
    ClusterCacheLoaderConfig cclc=(ClusterCacheLoaderConfig)clc;
    ClusterCacheLoaderConfigurationBuilder cclBuilder=builder.loaders().addClusterCacheLoader();
    cclBuilder.remoteCallTimeout(cclc.getRemoteCallTimeout());
    loaderBuilder=cclBuilder;
  }
 else   if (clc instanceof FileCacheStoreConfig) {
    FileCacheStoreConfig csc=(FileCacheStoreConfig)clc;
    FileCacheStoreConfigurationBuilder fcsBuilder=builder.loaders().addFileCacheStore();
    fcsBuilder.fetchPersistentState(csc.isFetchPersistentState());
    fcsBuilder.ignoreModifications(csc.isIgnoreModifications());
    fcsBuilder.purgeOnStartup(csc.isPurgeOnStartup());
    fcsBuilder.purgerThreads(csc.getPurgerThreads());
    fcsBuilder.purgeSynchronously(csc.isPurgeSynchronously());
    fcsBuilder.location(csc.getLocation());
    fcsBuilder.fsyncInterval(csc.getFsyncInterval());
    fcsBuilder.fsyncMode(FileCacheStoreConfigurationBuilder.FsyncMode.valueOf(csc.getFsyncMode().name()));
    fcsBuilder.streamBufferSize(csc.getStreamBufferSize());
    loaderBuilder=fcsBuilder;
  }
 else   if (clc instanceof CacheStoreConfig) {
    LegacyStoreConfigurationBuilder tmpStoreBuilder=builder.loaders().addStore();
    tmpStoreBuilder.cacheStore(Util.<CacheStore>getInstance(clc.getCacheLoaderClassName(),cl));
    CacheStoreConfig csc=(CacheStoreConfig)clc;
    tmpStoreBuilder.fetchPersistentState(csc.isFetchPersistentState());
    tmpStoreBuilder.ignoreModifications(csc.isIgnoreModifications());
    tmpStoreBuilder.purgeOnStartup(csc.isPurgeOnStartup());
    tmpStoreBuilder.purgerThreads(csc.getPurgerThreads());
    tmpStoreBuilder.purgeSynchronously(csc.isPurgeSynchronously());
    loaderBuilder=tmpStoreBuilder;
    if (clc instanceof AbstractCacheStoreConfig) {
      tmpStoreBuilder.withProperties(((AbstractCacheLoaderConfig)clc).getProperties());
    }
  }
 else {
    LegacyLoaderConfigurationBuilder tmpLoaderBuilder=builder.loaders().addLoader();
    tmpLoaderBuilder.cacheLoader(Util.<CacheLoader>getInstance(clc.getCacheLoaderClassName(),cl));
    loaderBuilder=tmpLoaderBuilder;
  }
  if (clc instanceof CacheStoreConfig) {
    CacheStoreConfig csc=(CacheStoreConfig)clc;
    StoreConfigurationBuilder<?,?> storeBuilder=(StoreConfigurationBuilder<?,?>)loaderBuilder;
    storeBuilder.async().enabled(csc.getAsyncStoreConfig().isEnabled());
    storeBuilder.async().flushLockTimeout(csc.getAsyncStoreConfig().getFlushLockTimeout());
    storeBuilder.async().modificationQueueSize(csc.getAsyncStoreConfig().getModificationQueueSize());
    storeBuilder.async().shutdownTimeout(csc.getAsyncStoreConfig().getShutdownTimeout());
    storeBuilder.async().threadPoolSize(csc.getAsyncStoreConfig().getThreadPoolSize());
    storeBuilder.singletonStore().enabled(csc.getSingletonStoreConfig().isSingletonStoreEnabled());
    storeBuilder.singletonStore().pushStateTimeout(csc.getSingletonStoreConfig().getPushStateTimeout());
    storeBuilder.singletonStore().pushStateWhenCoordinator(csc.getSingletonStoreConfig().isPushStateWhenCoordinator());
  }
}
