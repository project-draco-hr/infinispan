{
  if (lookupFailed)   return;
  InitialContext ctx;
  try {
    ctx=new InitialContext();
  }
 catch (  NamingException e) {
    log.failedToCreateInitialCtx(e);
    lookupFailed=true;
    return;
  }
  for (  String[] knownJNDIManager : knownJNDIManagers) {
    Object jndiObject;
    try {
      if (log.isDebugEnabled())       log.debugf("Trying to lookup TransactionManager for %s",knownJNDIManager[1]);
      jndiObject=ctx.lookup(knownJNDIManager[0]);
    }
 catch (    NamingException e) {
      log.debugf("Failed to perform a lookup for [%s (%s)]",knownJNDIManager[0],knownJNDIManager[1]);
      continue;
    }
    if (jndiObject instanceof TransactionManager) {
      tm=(TransactionManager)jndiObject;
      log.debugf("Found TransactionManager for %s",knownJNDIManager[1]);
      return;
    }
  }
  Class clazz;
  try {
    log.debugf("Trying WebSphere 5.1: %s",WS_FACTORY_CLASS_5_1);
    clazz=Util.loadClassStrict(WS_FACTORY_CLASS_5_1);
    log.debugf("Found WebSphere 5.1: %s",WS_FACTORY_CLASS_5_1);
  }
 catch (  ClassNotFoundException ex) {
    try {
      log.debugf("Trying WebSphere 5.0: %s",WS_FACTORY_CLASS_5_0);
      clazz=Util.loadClassStrict(WS_FACTORY_CLASS_5_0);
      log.debugf("Found WebSphere 5.0: %s",WS_FACTORY_CLASS_5_0);
    }
 catch (    ClassNotFoundException ex2) {
      try {
        log.debugf("Trying WebSphere 4: %s",WS_FACTORY_CLASS_4);
        clazz=Util.loadClassStrict(WS_FACTORY_CLASS_4);
        log.debugf("Found WebSphere 4: %s",WS_FACTORY_CLASS_4);
      }
 catch (      ClassNotFoundException ex3) {
        log.debug("Couldn't find any WebSphere TransactionManager factory class, neither for WebSphere version 5.1 nor 5.0 nor 4");
        lookupFailed=true;
        return;
      }
    }
  }
  try {
    Class[] signature=null;
    Object[] args=null;
    Method method=clazz.getMethod("getTransactionManager",signature);
    tm=(TransactionManager)method.invoke(null,args);
  }
 catch (  Exception ex) {
    log.unableToInvokeWebsphereStaticGetTmMethod(ex);
  }
}
