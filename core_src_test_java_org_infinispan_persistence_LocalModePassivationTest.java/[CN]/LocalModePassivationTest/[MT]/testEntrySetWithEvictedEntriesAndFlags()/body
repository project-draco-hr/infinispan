{
  final int numKeys=300;
  for (int i=0; i < numKeys; i++) {
    cache.put(i,i);
  }
  AdvancedCache<Object,Object> flagCache=cache.getAdvancedCache().withFlags(Flag.SKIP_CACHE_LOAD);
  DataContainer dc=flagCache.getDataContainer();
  assertFalse("Data Container should not have all keys",numKeys == dc.size());
  Set<Map.Entry<Object,Object>> entrySet=flagCache.entrySet();
  assertEquals(dc.size(),entrySet.size());
  Set<InternalCacheEntry> entries=dc.entrySet();
  Map<Object,Object> map=new HashMap<Object,Object>(entrySet.size());
  for (  Map.Entry<Object,Object> entry : entrySet) {
    map.put(entry.getKey(),entry.getValue());
  }
  for (  InternalCacheEntry entry : entries) {
    assertEquals("Key/Value mismatch!",entry.getValue(),map.get(entry.getKey()));
  }
}
