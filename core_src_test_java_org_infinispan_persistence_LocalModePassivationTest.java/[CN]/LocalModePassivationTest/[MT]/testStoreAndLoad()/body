{
  final int numKeys=300;
  for (int i=0; i < numKeys; i++) {
    cache().put(i,i);
  }
  int keysInDataContainer=cache().getAdvancedCache().getDataContainer().keySet().size();
  assertTrue(keysInDataContainer != numKeys);
  AdvancedLoadWriteStore store=(AdvancedLoadWriteStore)TestingUtil.getCacheLoader(cache());
  int keysInCacheStore=PersistenceUtil.count(store,null);
  if (passivationEnabled) {
    assertEquals(numKeys,keysInDataContainer + keysInCacheStore);
  }
 else {
    assertEquals(numKeys,keysInCacheStore);
  }
  cache().stop();
  cache().start();
  store=(AdvancedLoadWriteStore)TestingUtil.getCacheLoader(cache());
  assertEquals(numKeys,PersistenceUtil.count(store,null));
  for (int i=0; i < numKeys; i++) {
    assertEquals(i,cache().get(i));
  }
}
