{
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return TestingUtil.extractLockManager(cache(managerIndex)).getNumberOfLocksHeld() == 0;
    }
  }
);
  final TransactionTable tt=TestingUtil.extractComponent(cache(managerIndex),TransactionTable.class);
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      log.tracef("For cache %s have remoteTx=%s and localTx=%s",managerIndex,tt.getRemoteTxCount(),tt.getLocalTxCount());
      return (tt.getRemoteTxCount() == 0) && (tt.getLocalTxCount() == 0);
    }
  }
);
  final RecoveryManager rm=TestingUtil.extractComponent(cache(managerIndex),RecoveryManager.class);
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return rm.getInDoubtTransactions().isEmpty() && rm.getPreparedTransactionsFromCluster().all().length == 0;
    }
  }
);
}
