{
  LockSupport.parkNanos(TimeUnit.SECONDS.toNanos(1));
  int gracetime=120000;
  long giveup=System.currentTimeMillis() + gracetime;
  for (  Cache c : caches) {
    LocalTopologyManager localTopologyManager=TestingUtil.extractGlobalComponent(c.getCacheManager(),LocalTopologyManager.class);
    RpcManager rpcManager=TestingUtil.extractComponent(c,RpcManager.class);
    CacheTopology cacheTopology=localTopologyManager.getCacheTopology(c.getName());
    while (cacheTopology.getCurrentCH().getMembers().size() != caches.length) {
      if (System.currentTimeMillis() > giveup) {
        String message=String.format("Timed out waiting for rehash to complete on node %s, expected member list is %s, current member list is %s!",rpcManager.getAddress(),Arrays.toString(caches),cacheTopology.getCurrentCH());
        log.error(message);
        throw new RuntimeException(message);
      }
      LockSupport.parkNanos(TimeUnit.MILLISECONDS.toNanos(100));
    }
    log.trace("Node " + rpcManager.getAddress() + " finished rehash task.");
  }
}
