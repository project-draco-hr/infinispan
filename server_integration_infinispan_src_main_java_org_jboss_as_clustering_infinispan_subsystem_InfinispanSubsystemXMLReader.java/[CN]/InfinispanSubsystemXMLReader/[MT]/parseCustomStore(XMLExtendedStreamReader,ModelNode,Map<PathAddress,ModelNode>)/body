{
  ModelNode store=Util.getEmptyOperation(ModelDescriptionConstants.ADD,null);
  String name=ModelKeys.STORE_NAME;
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case CLASS:
{
        StoreConfigurationResource.CLASS.parseAndSetParameter(value,store,reader);
        break;
      }
default :
{
      name=this.parseStoreAttribute(name,reader,i,attribute,value,store);
    }
}
}
if (!store.hasDefined(ModelKeys.CLASS)) {
throw ParseUtils.missingRequired(reader,EnumSet.of(Attribute.CLASS));
}
PathAddress storeAddress=setOperationAddress(store,PathAddress.pathAddress(cache.get(OP_ADDR)),StoreConfigurationResource.STORE_PATH,name);
Map<PathAddress,ModelNode> additionalConfigurationOperations=new LinkedHashMap<>();
this.parseStoreElements(reader,store,additionalConfigurationOperations);
operations.put(storeAddress,store);
operations.putAll(additionalConfigurationOperations);
}
