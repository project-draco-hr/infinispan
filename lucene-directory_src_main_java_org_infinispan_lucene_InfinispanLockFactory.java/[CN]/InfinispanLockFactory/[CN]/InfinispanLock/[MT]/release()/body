{
  boolean removed=false;
synchronized (cache) {
    try {
      tm.commit();
      if (log.isTraceEnabled()) {
        log.trace("Batch transaction commited for index: {}",indexName);
      }
      tm.begin();
      removed=cache.remove(new FileCacheKey(indexName,lockName,true)) != null;
    }
 catch (    Exception e) {
      throw new CacheException("Unable to commit work done or release lock!",e);
    }
 finally {
      try {
        if (removed) {
          tm.commit();
          if (log.isTraceEnabled()) {
            log.trace("Lock: {} removed for index: {} ",new Object[]{lockName,indexName});
          }
        }
 else {
          tm.rollback();
        }
      }
 catch (      Exception e) {
        throw new CacheException("Unable to release lock!",e);
      }
    }
  }
}
