{
  return ((EquivalentConcurrentHashMapV8<K,InternalCacheEntry<K,V>>)entries).compute(key,new EquivalentConcurrentHashMapV8.BiFun<K,InternalCacheEntry<K,V>,InternalCacheEntry<K,V>>(){
    @Override public InternalCacheEntry<K,V> apply(    K key,    InternalCacheEntry<K,V> oldEntry){
      InternalCacheEntry<K,V> newEntry=action.compute(key,oldEntry,entryFactory);
      if (newEntry == oldEntry) {
        return oldEntry;
      }
 else       if (newEntry == null) {
        return null;
      }
      if (oldEntry == null) {
        activator.activate(key);
      }
      if (trace)       log.tracef("Store %s in container",newEntry);
      return newEntry;
    }
  }
);
}
