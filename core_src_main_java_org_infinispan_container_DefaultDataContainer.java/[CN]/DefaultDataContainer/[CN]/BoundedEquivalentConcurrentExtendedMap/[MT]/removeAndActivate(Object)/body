{
  final AtomicReference<InternalCacheEntry<K,V>> reference=new AtomicReference<>(null);
  ((BoundedEquivalentConcurrentHashMapV8<Object,InternalCacheEntry<K,V>>)entries).compute(key,new BoundedEquivalentConcurrentHashMapV8.BiFun<Object,InternalCacheEntry<K,V>,InternalCacheEntry<K,V>>(){
    @Override public InternalCacheEntry<K,V> apply(    Object key,    InternalCacheEntry<K,V> entry){
      activator.onRemove(key,entry == null);
      reference.set(entry);
      return null;
    }
  }
);
  return reference.get();
}
