{
  long start=0;
  if (!Thread.currentThread().isInterrupted()) {
    try {
      if (trace) {
        log.trace("Purging data container of expired entries");
        start=timeService.time();
      }
      long currentTimeMillis=timeService.wallClockTime();
      for (Iterator<InternalCacheEntry<K,V>> purgeCandidates=dataContainer.iteratorIncludingExpired(); purgeCandidates.hasNext(); ) {
        InternalCacheEntry<K,V> e=purgeCandidates.next();
        if (e.isExpired(currentTimeMillis)) {
          handleInMemoryExpiration(e);
        }
      }
      if (trace) {
        log.tracef("Purging data container completed in %s",Util.prettyPrintTime(timeService.timeDuration(start,TimeUnit.MILLISECONDS)));
      }
    }
 catch (    Exception e) {
      log.exceptionPurgingDataContainer(e);
    }
  }
  if (!Thread.currentThread().isInterrupted()) {
    persistenceManager.purgeExpired();
  }
}
