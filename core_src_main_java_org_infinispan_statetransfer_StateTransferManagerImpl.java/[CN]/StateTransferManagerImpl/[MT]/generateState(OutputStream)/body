{
  ObjectOutput oo=null;
  boolean txLogActivated=false;
  try {
    boolean canProvideState=(txLogActivated=transactionLog.activate());
    if (log.isDebugEnabled())     log.debugf("Generating state.  Can provide? %s",canProvideState);
    oo=marshaller.startObjectOutput(out,true);
    marshaller.objectToObjectStream(true,oo);
    marshaller.objectToObjectStream(canProvideState,oo);
    if (canProvideState) {
      delimit(oo);
      if (transientState || alwaysProvideTransientState)       generateInMemoryState(oo);
      delimit(oo);
      if (persistentState)       generatePersistentState(oo);
      delimit(oo);
      generateTransactionLog(oo);
      if (log.isDebugEnabled())       log.debug("State generated, closing object stream");
    }
 else {
      if (log.isDebugEnabled())       log.debug("Not providing state!");
    }
  }
 catch (  StateTransferException ste) {
    throw ste;
  }
catch (  Exception e) {
    throw new StateTransferException(e);
  }
 finally {
    marshaller.finishObjectOutput(oo);
    if (txLogActivated)     transactionLog.deactivate();
  }
}
