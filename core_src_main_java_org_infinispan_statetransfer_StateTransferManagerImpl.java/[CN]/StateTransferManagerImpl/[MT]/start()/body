{
  if (trace) {
    log.tracef("Starting StateTransferManager of cache %s on node %s",cacheName,rpcManager.getAddress());
  }
  CacheJoinInfo joinInfo=new CacheJoinInfo(pickConsistentHashFactory(),configuration.clustering().hash().hash(),configuration.clustering().hash().numSegments(),configuration.clustering().hash().numOwners(),configuration.clustering().stateTransfer().timeout());
  CacheTopology initialTopology=localTopologyManager.join(cacheName,joinInfo,new CacheTopologyHandler(){
    @Override public void updateConsistentHash(    CacheTopology cacheTopology){
      doTopologyUpdate(cacheTopology,false);
    }
    @Override public void rebalance(    CacheTopology cacheTopology){
      doTopologyUpdate(cacheTopology,true);
    }
  }
);
  if (trace) {
    log.tracef("StateTransferManager of cache %s on node %s received initial topology %s",cacheName,rpcManager.getAddress(),initialTopology);
  }
}
