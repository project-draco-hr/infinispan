{
  RemoteCache<Integer,String> remote=client(0).getCache();
  remote.put(1,"v1");
  assertEquals("v1",remote.get(1));
  PutHammer putHammer=new PutHammer();
  Future<Void> putHammerFuture=fork(putHammer);
  EmbeddedCacheManager cm=TestCacheManagerFactory.createClusteredCacheManager(getCacheConfiguration());
  registerCacheManager(cm);
  TestHelper.startHotRodServer(cm);
  waitForClusterToForm();
  TestingUtil.waitForRehashToComplete(cm.getCache(),cache(0));
  TestingUtil.sleepThread(2000);
  TestingUtil.killCacheManagers(cm);
  TestingUtil.waitForRehashToComplete(cache(0));
  TcpTransportFactory transportFactory=TestingUtil.extractField(client(0),"transportFactory");
  SocketAddress[] servers=((RoundRobinBalancingStrategy)transportFactory.getBalancer(RemoteCacheManager.cacheNameBytes())).getServers();
  putHammer.stop=true;
  putHammerFuture.get();
  assertEquals(1,servers.length);
}
