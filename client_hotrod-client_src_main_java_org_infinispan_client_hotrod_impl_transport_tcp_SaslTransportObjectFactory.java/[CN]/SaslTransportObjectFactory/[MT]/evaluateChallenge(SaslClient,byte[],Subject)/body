{
  if (clientSubject != null) {
    try {
      return Subject.doAs(clientSubject,new PrivilegedExceptionAction<byte[]>(){
        @Override public byte[] run() throws Exception {
          return saslClient.evaluateChallenge(challenge);
        }
      }
);
    }
 catch (    PrivilegedActionException e) {
      Throwable cause=e.getCause();
      if (cause instanceof SaslException) {
        throw (SaslException)cause;
      }
 else {
        throw new RuntimeException(cause);
      }
    }
  }
 else {
    return saslClient.evaluateChallenge(challenge);
  }
}
