{
  GlobalTransaction gtx=command.getGlobalTransaction();
  if (trace) {
    log.tracef("Second phase command received. Commit?=%s Transaction=%s, Local=%s",commit,gtx.globalId(),context.isOriginLocal());
  }
  TotalOrderRemoteTransactionState state=getTransactionState(context);
  try {
    if (!processSecondCommand(state,commit) && !context.isOriginLocal()) {
      return context.shortCircuit(null);
    }
    return context.shortCircuit(context.forkInvocationSync(command));
  }
 catch (  Throwable exception) {
    if (log.isDebugEnabled()) {
      log.debugf(exception,"Exception while rollback transaction %s",gtx.globalId());
    }
    throw exception;
  }
 finally {
    if (state != null && state.isFinished()) {
      totalOrderManager.release(state);
      if (commit) {
        transactionTable.remoteTransactionCommitted(command.getGlobalTransaction(),false);
      }
 else {
        transactionTable.remoteTransactionRollback(command.getGlobalTransaction());
      }
      if (context.isOriginLocal()) {
        executorService.checkForReadyTasks();
      }
    }
  }
}
