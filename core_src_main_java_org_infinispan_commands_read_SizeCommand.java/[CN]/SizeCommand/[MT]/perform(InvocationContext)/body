{
  int size=0;
  Map<Object,CacheEntry> contextEntries=ctx.getLookedUpEntries();
  Set<Object> keys=new HashSet<>();
  try (CloseableIterable<CacheEntry<Object,Void>> iterator=cache.getAdvancedCache().withFlags(flags != null ? flags.toArray(new Flag[flags.size()]) : null).filterEntries(AcceptAllKeyValueFilter.getInstance()).converter(NullValueConverter.getInstance())){
    for (    CacheEntry<Object,Void> entry : iterator) {
      CacheEntry value=contextEntries.get(entry.getKey());
      if (value != null) {
        keys.add(entry.getKey());
        if (!value.isRemoved() && !value.isNull()) {
          if (size++ == Integer.MAX_VALUE) {
            return Integer.MAX_VALUE;
          }
        }
      }
 else {
        if (size++ == Integer.MAX_VALUE) {
          return Integer.MAX_VALUE;
        }
      }
    }
  }
   for (  Map.Entry<Object,CacheEntry> entry : contextEntries.entrySet()) {
    if (!keys.contains(entry.getKey()) && !entry.getValue().isRemoved() && !entry.getValue().isNull()) {
      if (size++ == Integer.MAX_VALUE) {
        return Integer.MAX_VALUE;
      }
    }
  }
  return size;
}
