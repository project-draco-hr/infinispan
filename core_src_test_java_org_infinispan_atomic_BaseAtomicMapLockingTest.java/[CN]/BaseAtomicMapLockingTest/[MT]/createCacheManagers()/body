{
  for (int i=0; i < NUM_NODES; ++i) {
    collectors[i]=new CollectCompositeKeysInterceptor();
    ConfigurationBuilder builder=getDefaultClusteredCacheConfig(CacheMode.DIST_SYNC,true);
    builder.transaction().lockingMode(pessimistic ? LockingMode.PESSIMISTIC : LockingMode.OPTIMISTIC);
    builder.customInterceptors().addInterceptor().interceptor(collectors[i]).before(TxInterceptor.class);
    builder.clustering().hash().numOwners(2);
    addClusterEnabledCacheManager(builder);
  }
  waitForClusterToForm();
  for (int i=0; i < NUM_NODES; ++i) {
    RpcManager rpcManager=TestingUtil.extractComponent(cache(i),RpcManager.class);
    rpcManagers[i]=new ControlledRpcManager(rpcManager);
    TestingUtil.replaceComponent(cache(i),RpcManager.class,rpcManagers[i],true);
  }
  ahmKey=new MagicKey("AtomicHashMap",cache(0));
  fgahmKey=new MagicKey("FineGrainedAtomicHashMap",cache(0));
}
