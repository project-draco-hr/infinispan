{
  log.debugf("Node %s joining cache %s",transport.getAddress(),cacheName);
  LocalCacheStatus cacheStatus=new LocalCacheStatus(joinInfo,stm,phm);
  runningCaches.put(cacheName,cacheStatus);
  int viewId=transport.getViewId();
  ReplicableCommand command=new CacheTopologyControlCommand(cacheName,CacheTopologyControlCommand.Type.JOIN,transport.getAddress(),joinInfo,viewId);
  long timeout=joinInfo.getTimeout();
  long endTime=timeService.expectedEndTime(timeout,TimeUnit.MILLISECONDS);
synchronized (cacheStatus) {
    while (true) {
      try {
        CacheStatusResponse initialStatus=(CacheStatusResponse)executeOnCoordinator(command,timeout);
        if (initialStatus != null) {
          handleTopologyUpdate(cacheName,initialStatus.getCacheTopology(),initialStatus.getAvailabilityMode(),viewId);
          handleStableTopologyUpdate(cacheName,initialStatus.getStableTopology(),viewId);
          return initialStatus.getCacheTopology();
        }
      }
 catch (      Exception e) {
        log.debugf(e,"Error sending join request for cache %s to coordinator",cacheName);
        if (timeService.isTimeExpired(endTime)) {
          throw e;
        }
        Thread.sleep(1000);
      }
    }
  }
}
