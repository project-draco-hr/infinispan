{
  LocalCacheStatus cacheStatus=runningCaches.get(cacheName);
  if (cacheStatus == null) {
    log.tracef("Ignoring rebalance %s for cache %s that doesn't exist locally",cacheTopology.getTopologyId(),cacheName);
    return;
  }
  log.debugf("Starting local rebalance for cache %s, topology = %s",cacheName,cacheTopology);
  cacheStatus.joinedLatch.await();
  cacheStatus.topology=cacheTopology;
  ConsistentHash unionCH=cacheStatus.joinInfo.getConsistentHashFactory().union(cacheTopology.getCurrentCH(),cacheTopology.getPendingCH());
  CacheTopologyHandler handler=cacheStatus.handler;
  try {
    handler.rebalance(cacheStatus.topology);
  }
  finally {
    ReplicableCommand command=new CacheTopologyControlCommand(cacheName,CacheTopologyControlCommand.Type.REBALANCE_CONFIRM,transport.getAddress(),cacheTopology.getTopologyId(),null,null);
    try {
      executeOnCoordinatorAsync(command);
    }
 catch (    Exception e) {
      log.debugf(e,"Error sending the rebalance completed notification for cache %s to coordinator",cacheName);
    }
  }
}
