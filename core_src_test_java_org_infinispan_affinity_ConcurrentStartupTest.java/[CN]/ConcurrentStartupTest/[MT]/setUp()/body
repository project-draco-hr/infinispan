{
  Configuration conf=new Configuration();
  conf.fluent().invocationBatching();
  conf.fluent().clustering().hash().numOwners(1);
  conf.fluent().clustering().hash().rehashEnabled(false);
  conf.fluent().clustering().mode(Configuration.CacheMode.DIST_SYNC);
  manager1=TestCacheManagerFactory.createClusteredCacheManager(conf);
  manager1.defineConfiguration("test",conf);
  cache1=manager1.getCache("test").getAdvancedCache();
  keyAffinityService1=KeyAffinityServiceFactory.newLocalKeyAffinityService(cache1,new RndKeyGenerator(),Executors.newSingleThreadExecutor(),KEY_QUEUE_SIZE);
  System.out.println("Address for manager1: " + manager1.getAddress());
  manager2=TestCacheManagerFactory.createClusteredCacheManager(conf);
  manager2.defineConfiguration("test",conf);
  cache2=manager2.getCache("test").getAdvancedCache();
  keyAffinityService2=KeyAffinityServiceFactory.newLocalKeyAffinityService(cache2,new RndKeyGenerator(),Executors.newSingleThreadExecutor(),KEY_QUEUE_SIZE);
  System.out.println("Address for manager2: " + manager2.getAddress());
  TestingUtil.blockUntilViewsReceived(60000,cache1,cache2);
  Thread.sleep(5000);
}
