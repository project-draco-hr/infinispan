{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case AUTO_CREATE_KEYSPACE:
{
        builder.autoCreateKeyspace(Boolean.parseBoolean(value));
        break;
      }
case CONFIGURATION_PROPERTIES_FILE:
{
      builder.configurationPropertiesFile(value);
      break;
    }
case ENTRY_COLUMN_FAMILY:
{
    builder.entryColumnFamily(value);
    break;
  }
case EXPIRATION_COLUMN_FAMILY:
{
  builder.expirationColumnFamily(value);
  break;
}
case FRAMED:
{
builder.framed(true);
break;
}
case KEY_MAPPER:
{
builder.keyMapper(value);
break;
}
case KEY_SPACE:
{
builder.keySpace(value);
break;
}
case PASSWORD:
{
builder.password(value);
break;
}
case READ_CONSISTENCY_LEVEL:
{
builder.readConsistencyLevel(ConsistencyLevel.valueOf(value));
break;
}
case USERNAME:
{
builder.username(value);
break;
}
case WRITE_CONSISTENCY_LEVEL:
{
builder.writeConsistencyLevel(ConsistencyLevel.valueOf(value));
break;
}
default :
{
Parser52.parseCommonStoreAttributes(reader,i,builder);
break;
}
}
}
}
