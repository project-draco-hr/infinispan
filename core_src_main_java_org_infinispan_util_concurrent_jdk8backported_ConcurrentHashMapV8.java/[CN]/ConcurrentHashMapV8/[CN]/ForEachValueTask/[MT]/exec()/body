{
  final Action<V> action=this.action;
  if (action == null)   return abortOnNullFunction();
  try {
    int b=batch(), c;
    while (b > 1 && baseIndex != baseLimit) {
      do {
      }
 while (!casPending(c=pending,c + 1));
      new ForEachValueTask<K,V>(map,this,b>>>=1,action).fork();
    }
    Object v;
    while ((v=advance()) != null)     action.apply((V)v);
    tryComplete();
  }
 catch (  Throwable ex) {
    return tryCompleteComputation(ex);
  }
  return false;
}
