{
  Class<?> c=k.getClass();
  while (p != null) {
    int dir, ph;
    Object pk;
    Class<?> pc;
    if ((ph=p.hash) == h) {
      if ((pk=p.key) == k || k.equals(pk))       return p;
      if (c != (pc=pk.getClass()) || !(k instanceof Comparable) || (dir=((Comparable)k).compareTo((Comparable)pk)) == 0) {
        dir=(c == pc) ? 0 : c.getName().compareTo(pc.getName());
        TreeNode r=null, s=null, pl, pr;
        if (dir >= 0) {
          if ((pl=p.left) != null && h <= pl.hash)           s=pl;
        }
 else         if ((pr=p.right) != null && h >= pr.hash)         s=pr;
        if (s != null && (r=getTreeNode(h,k,s)) != null)         return r;
      }
    }
 else     dir=(h < ph) ? -1 : 1;
    p=(dir > 0) ? p.right : p.left;
  }
  return null;
}
