{
  int topologyId=cacheTopology.getTopologyId();
  List<Address> members=cacheTopology.getMembers();
  ConsistentHash readCh=cacheTopology.getReadConsistentHash();
  for (  CacheTransaction tx : transactions) {
    if (tx.getTopologyId() < topologyId && !members.contains(tx.getGlobalTransaction().getAddress()))     continue;
    Set<Object> filteredLockedKeys=new HashSet<Object>();
    Set<Object> lockedKeys=tx.getLockedKeys();
synchronized (lockedKeys) {
      for (      Object key : lockedKeys) {
        if (segments.contains(readCh.getSegment(key))) {
          filteredLockedKeys.add(key);
        }
      }
    }
    Set<Object> backupLockedKeys=tx.getBackupLockedKeys();
synchronized (backupLockedKeys) {
      for (      Object key : backupLockedKeys) {
        if (segments.contains(readCh.getSegment(key))) {
          filteredLockedKeys.add(key);
        }
      }
    }
    if (!filteredLockedKeys.isEmpty()) {
      List<WriteCommand> txModifications=tx.getModifications();
      WriteCommand[] modifications=null;
      if (!txModifications.isEmpty()) {
        modifications=txModifications.toArray(new WriteCommand[txModifications.size()]);
      }
      transactionsToTransfer.add(new TransactionInfo(tx.getGlobalTransaction(),tx.getTopologyId(),modifications,filteredLockedKeys));
    }
  }
}
