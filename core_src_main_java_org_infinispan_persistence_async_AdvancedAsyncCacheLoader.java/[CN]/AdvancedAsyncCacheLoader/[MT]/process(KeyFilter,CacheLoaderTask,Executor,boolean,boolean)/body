{
  int batchSize=100;
  ExecutorCompletionService ecs=new ExecutorCompletionService(executor);
  int tasks=0;
  final TaskContext taskContext=new TaskContextImpl();
  Set<Object> allKeys=new HashSet<Object>(batchSize);
  Set<Object> batch=new HashSet<Object>();
  loadAllKeys(state.get(),allKeys,keyFilter,executor);
  for (Iterator it=allKeys.iterator(); it.hasNext(); ) {
    batch.add(it.next());
    if (batch.size() == batchSize) {
      final Set<Object> toHandle=batch;
      batch=new HashSet<Object>(batchSize);
      submitProcessTask(cacheLoaderTask,ecs,taskContext,toHandle);
      tasks++;
    }
  }
  if (!batch.isEmpty()) {
    submitProcessTask(cacheLoaderTask,ecs,taskContext,batch);
    tasks++;
  }
  PersistenceUtil.waitForAllTasksToComplete(ecs,tasks);
}
