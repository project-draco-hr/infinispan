{
  int[] thePrimaryOwners=new int[primaryOwnerIndices.length];
  for (int i=0; i < primaryOwnerIndices.length; i++) {
    if (membersToUse != null) {
      int membersToUseIndex=Math.min(primaryOwnerIndices[i],membersToUse.size() - 1);
      int membersIndex=members.indexOf(membersToUse.get(membersToUseIndex));
      thePrimaryOwners[i]=membersIndex > 0 ? membersIndex : members.size() - 1;
    }
 else {
      thePrimaryOwners[i]=Math.min(primaryOwnerIndices[i],members.size() - 1);
    }
  }
  return new ReplicatedConsistentHash(hashFunction,members,thePrimaryOwners);
}
