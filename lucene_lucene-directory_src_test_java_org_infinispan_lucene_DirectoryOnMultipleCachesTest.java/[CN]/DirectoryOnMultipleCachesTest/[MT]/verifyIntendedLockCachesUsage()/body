{
  final List<Object> keysThatShouldBeRemoved=new ArrayList<Object>();
  for (  Object key : lockCache.keySet()) {
    AssertJUnit.assertEquals(FileReadLockKey.class,key.getClass());
    int value=(Integer)lockCache.get(key);
    if (value == 0) {
      keysThatShouldBeRemoved.add(key);
      continue;
    }
    AssertJUnit.assertEquals(1,value);
  }
  for (int i=0; i < MAX_ITERATIONS && !keysThatShouldBeRemoved.isEmpty(); ++i) {
    try {
      Thread.sleep(SLEEP);
    }
 catch (    InterruptedException e) {
      Thread.currentThread().interrupt();
      break;
    }
    for (Iterator<Object> iterator=keysThatShouldBeRemoved.iterator(); iterator.hasNext(); ) {
      if (!lockCache.containsKey(iterator.next())) {
        iterator.remove();
      }
    }
  }
  AssertJUnit.assertTrue("The following keys " + keysThatShouldBeRemoved + " are supposed to be removed from lockCache",keysThatShouldBeRemoved.isEmpty());
}
