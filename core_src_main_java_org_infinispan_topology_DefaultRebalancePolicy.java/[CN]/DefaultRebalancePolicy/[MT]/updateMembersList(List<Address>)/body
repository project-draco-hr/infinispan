{
  this.clusterMembers=newClusterMembers;
  log.tracef("Updating cluster members for all the caches. New list is %s",newClusterMembers);
  for (  Map.Entry<String,CacheStatus> e : cacheStatusMap.entrySet()) {
    String cacheName=e.getKey();
    CacheStatus cacheStatus=e.getValue();
synchronized (cacheStatus) {
      ConsistentHash currentCH=cacheStatus.getCacheTopology().getCurrentCH();
      if (currentCH == null)       continue;
      ConsistentHash pendingCH=cacheStatus.getCacheTopology().getPendingCH();
      boolean currentMembersValid=newClusterMembers.containsAll(currentCH.getMembers());
      boolean pendingMembersValid=pendingCH == null || newClusterMembers.containsAll(pendingCH.getMembers());
      if (!currentMembersValid || !pendingMembersValid) {
        List<Address> newCurrentMembers=new ArrayList<Address>(currentCH.getMembers());
        newCurrentMembers.retainAll(newClusterMembers);
        updateCacheMembers(cacheName,cacheStatus,newCurrentMembers);
      }
      if (!isBalanced(cacheStatus.getCacheTopology().getCurrentCH()) || !cacheStatus.getJoiners().isEmpty()) {
        triggerRebalance(cacheName,cacheStatus);
      }
    }
  }
}
