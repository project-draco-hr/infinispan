{
  Set<String> caches;
synchronized (lock) {
    caches=cachesPendingRebalance;
    if (enabled) {
      if (cachesPendingRebalance != null) {
        log.debugf("Rebalancing enabled");
        cachesPendingRebalance=null;
      }
    }
 else {
      if (cachesPendingRebalance == null) {
        log.debugf("Rebalancing suspended");
        cachesPendingRebalance=new HashSet<String>();
      }
    }
  }
  if (enabled && caches != null) {
    log.tracef("Rebalancing enabled, triggering rebalancing for caches %s",caches);
    for (    String cacheName : caches) {
      try {
        clusterTopologyManager.triggerRebalance(cacheName);
      }
 catch (      Exception e) {
        log.rebalanceStartError(cacheName,e);
      }
    }
  }
}
