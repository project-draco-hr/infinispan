{
  log.debugf("Finished cluster-wide rebalance for cache %s, topology id = %d",cacheName,topologyId);
  CacheStatus cacheStatus=cacheStatusMap.get(cacheName);
synchronized (cacheStatus) {
    if (topologyId != cacheStatus.getCacheTopology().getTopologyId()) {
      throw new IllegalStateException(String.format("Invalid cluster-wide rebalance confirmation: received topology id %d, expected %d",topologyId,cacheStatus.getCacheTopology().getTopologyId()));
    }
    int newTopologyId=topologyId + 1;
    ConsistentHash newCurrentCH=cacheStatus.getCacheTopology().getPendingCH();
    CacheTopology cacheTopology=new CacheTopology(newTopologyId,newCurrentCH,null);
    updateConsistentHash(cacheName,cacheStatus,cacheTopology);
    cacheStatus.getJoiners().removeAll(newCurrentCH.getMembers());
    log.tracef("After rebalance, joiners without state are %",cacheStatus.getJoiners());
    if (cacheStatus.getJoiners().isEmpty() && isBalanced(newCurrentCH)) {
      log.tracef("Consistent hash is now balanced for cache %s",cacheName);
    }
 else {
      triggerRebalance(cacheName,cacheStatus);
    }
  }
}
