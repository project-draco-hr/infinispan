{
  K key=event.getKey();
  boolean enqueued=!completed.get();
  CacheEntry<K,V> cacheEntry=entryFactory.create(event.getKey(),event.getValue(),event.getMetadata());
  if (enqueued && !addEvent(key,cacheEntry.getValue() != null ? cacheEntry : REMOVED)) {
    int segment=distributionManager.getReadConsistentHash().getSegment(key);
    Queue<KeyValuePair<CacheEntryEvent<K,V>,ListenerInvocation<Event<K,V>>>> queue;
    if ((queue=queues.get(segment)) != null) {
      KeyValuePair<CacheEntryEvent<K,V>,ListenerInvocation<Event<K,V>>> eventPair=new KeyValuePair<>(event,invocation);
      queue.add(eventPair);
      if (queues.get(segment) == null) {
        if (queue.remove(eventPair)) {
          enqueued=false;
        }
      }
    }
 else {
      enqueued=false;
    }
  }
  return enqueued;
}
