{
  autoCreateTable=template.autoCreateTable();
  entryColumnFamily=template.entryColumnFamily();
  entryTable=template.entryTable();
  entryValueField=template.entryValueField();
  expirationColumnFamily=template.expirationColumnFamily();
  expirationTable=template.expirationTable();
  expirationValueField=template.expirationValueField();
  hbaseZookeeperQuorumHost=template.hbaseZookeeperQuorumHost();
  hbaseZookeeperClientPort=template.hbaseZookeeperClientPort();
  keyMapper=template.keyMapper();
  sharedTable=template.sharedTable();
  fetchPersistentState=template.fetchPersistentState();
  ignoreModifications=template.ignoreModifications();
  properties=template.properties();
  purgeOnStartup=template.purgeOnStartup();
  purgeSynchronously=template.purgeSynchronously();
  async.read(template.async());
  singletonStore.read(template.singletonStore());
  return this;
}
