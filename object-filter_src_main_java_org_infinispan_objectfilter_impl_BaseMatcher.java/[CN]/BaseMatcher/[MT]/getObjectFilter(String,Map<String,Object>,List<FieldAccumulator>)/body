{
  final FilterParsingResult<TypeMetadata> parsingResult=parse(jpaQuery,namedParameters);
  disallowGroupingAndAggregations(parsingResult);
  if (parsingResult.getWhereClause() == ConstantBooleanExpr.FALSE) {
    return new ObjectFilter(){
      @Override public String getEntityTypeName(){
        return parsingResult.getTargetEntityName();
      }
      @Override public String[] getProjection(){
        return null;
      }
      @Override public Class<?>[] getProjectionTypes(){
        return null;
      }
      @Override public SortField[] getSortFields(){
        return null;
      }
      @Override public Comparator<Comparable[]> getComparator(){
        return null;
      }
      @Override public FilterResult filter(      Object instance){
        if (instance == null) {
          throw new IllegalArgumentException("instance cannot be null");
        }
        return null;
      }
    }
;
  }
  final MetadataAdapter<TypeMetadata,AttributeMetadata,AttributeId> metadataAdapter=createMetadataAdapter(parsingResult.getTargetEntityMetadata());
  if ((parsingResult.getWhereClause() == null || parsingResult.getWhereClause() == ConstantBooleanExpr.TRUE) && parsingResult.getSortFields() == null && parsingResult.getProjectedPaths() == null) {
    return new ObjectFilter(){
      @Override public String getEntityTypeName(){
        return parsingResult.getTargetEntityName();
      }
      @Override public String[] getProjection(){
        return null;
      }
      @Override public Class<?>[] getProjectionTypes(){
        return null;
      }
      @Override public SortField[] getSortFields(){
        return null;
      }
      @Override public Comparator<Comparable[]> getComparator(){
        return null;
      }
      @Override public FilterResult filter(      Object instance){
        if (instance == null) {
          throw new IllegalArgumentException("instance cannot be null");
        }
        MatcherEvalContext<TypeMetadata,AttributeMetadata,AttributeId> matcherEvalContext=startSingleTypeContext(null,null,instance,metadataAdapter);
        if (matcherEvalContext != null) {
          return new FilterResultImpl(convert(instance),null,null);
        }
        return null;
      }
    }
;
  }
  FieldAccumulator[] accumulators=acc != null ? acc.toArray(new FieldAccumulator[acc.size()]) : null;
  return new ObjectFilterImpl<>(this,metadataAdapter,jpaQuery,namedParameters,parsingResult.getWhereClause(),parsingResult.getProjections(),parsingResult.getProjectedTypes(),parsingResult.getSortFields(),accumulators);
}
