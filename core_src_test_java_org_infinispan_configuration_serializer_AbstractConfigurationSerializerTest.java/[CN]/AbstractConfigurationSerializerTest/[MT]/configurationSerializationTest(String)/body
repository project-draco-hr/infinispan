{
  ParserRegistry registry=new ParserRegistry();
  InputStream is=FileLookupFactory.newInstance().lookupFileStrict(config,Thread.currentThread().getContextClassLoader());
  ConfigurationBuilderHolder holderBefore=registry.parse(is);
  Map<String,Configuration> configurations=new HashMap<>();
  for (  Map.Entry<String,ConfigurationBuilder> configuration : holderBefore.getNamedConfigurationBuilders().entrySet()) {
    configurations.put(configuration.getKey(),configuration.getValue().build());
  }
  ByteArrayOutputStream baos=new ByteArrayOutputStream();
  registry.serialize(baos,holderBefore.getGlobalConfigurationBuilder().build(),configurations);
  ByteArrayInputStream bais=new ByteArrayInputStream(baos.toByteArray());
  try {
    ConfigurationBuilderHolder holderAfter=registry.parse(bais);
    for (    String name : holderBefore.getNamedConfigurationBuilders().keySet()) {
      Configuration configurationBefore=holderBefore.getNamedConfigurationBuilders().get(name).build();
      Configuration configurationAfter=holderAfter.getNamedConfigurationBuilders().get(name).build();
      compareAttributeSets(name,configurationBefore.clustering().attributes(),configurationAfter.clustering().attributes());
      compareAttributeSets(name,configurationBefore.compatibility().attributes(),configurationAfter.compatibility().attributes(),"marshaller");
      compareAttributeSets(name,configurationBefore.eviction().attributes(),configurationAfter.eviction().attributes());
      compareAttributeSets(name,configurationBefore.expiration().attributes(),configurationAfter.expiration().attributes());
      compareAttributeSets(name,configurationBefore.indexing().attributes(),configurationAfter.indexing().attributes());
      compareAttributeSets(name,configurationBefore.locking().attributes(),configurationAfter.locking().attributes());
      compareAttributeSets(name,configurationBefore.persistence().attributes(),configurationAfter.persistence().attributes());
      compareStores(name,configurationBefore.persistence().stores(),configurationAfter.persistence().stores());
      compareAttributeSets(name,configurationBefore.security().authorization().attributes(),configurationAfter.security().authorization().attributes());
      compareAttributeSets(name,configurationBefore.storeAsBinary().attributes(),configurationAfter.storeAsBinary().attributes());
      compareAttributeSets(name,configurationBefore.transaction().attributes(),configurationAfter.transaction().attributes(),"transaction-manager-lookup");
      compareAttributeSets(name,configurationBefore.versioning().attributes(),configurationAfter.versioning().attributes());
      compareExtraConfiguration(name,configurationBefore,configurationAfter);
    }
  }
 catch (  Throwable e) {
    System.out.println(new String(baos.toByteArray()));
    throw e;
  }
}
