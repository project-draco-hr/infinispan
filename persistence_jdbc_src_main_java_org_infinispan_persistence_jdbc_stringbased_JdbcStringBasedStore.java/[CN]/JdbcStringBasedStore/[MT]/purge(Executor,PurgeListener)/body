{
  Connection conn=null;
  PreparedStatement ps=null;
  ResultSet rs=null;
  try {
    String sql=tableManager.getSelectOnlyExpiredRowsSql();
    conn=connectionFactory.getConnection();
    ps=conn.prepareStatement(sql);
    ps.setLong(1,ctx.getTimeService().wallClockTime());
    rs=ps.executeQuery();
    try (PreparedStatement batchDelete=conn.prepareStatement(tableManager.getDeleteRowSql())){
      int affectedRows=0;
      boolean twoWayMapperExists=key2StringMapper instanceof TwoWayKey2StringMapper;
      while (rs.next()) {
        affectedRows++;
        String keyStr=rs.getString(2);
        batchDelete.setString(1,keyStr);
        batchDelete.addBatch();
        if (twoWayMapperExists && purgeListener != null) {
          Object key=((TwoWayKey2StringMapper)key2StringMapper).getKeyMapping(keyStr);
          purgeListener.entryPurged(key);
        }
      }
      if (!twoWayMapperExists)       log.twoWayKey2StringMapperIsMissing(TwoWayKey2StringMapper.class.getSimpleName());
      if (affectedRows > 0) {
        int[] result=batchDelete.executeBatch();
        if (trace) {
          log.tracef("Successfully purged %d rows.",result.length);
        }
      }
    }
   }
 catch (  SQLException ex) {
    log.failedClearingJdbcCacheStore(ex);
    throw new PersistenceException("Failed clearing string based JDBC store",ex);
  }
 finally {
    JdbcUtil.safeClose(rs);
    JdbcUtil.safeClose(ps);
    connectionFactory.releaseConnection(conn);
  }
}
