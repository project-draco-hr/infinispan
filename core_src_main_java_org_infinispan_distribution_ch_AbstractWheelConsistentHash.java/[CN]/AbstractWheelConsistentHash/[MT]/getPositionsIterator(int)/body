{
  final int startIndex=getPositionIndex(normalizedHash);
  return new Iterator<Map.Entry<Integer,Address>>(){
    int i=startIndex;
    @Override public boolean hasNext(){
      return i >= 0;
    }
    @Override public Map.Entry<Integer,Address> next(){
      Map.Entry<Integer,Address> value=new AbstractMap.SimpleImmutableEntry(positionKeys[i],positionValues[i]);
      i++;
      if (i == positionKeys.length)       i=0;
      if (i == startIndex)       i=-1;
      return value;
    }
    @Override public void remove(){
      throw new UnsupportedOperationException("The positions map cannot be modified");
    }
  }
;
}
