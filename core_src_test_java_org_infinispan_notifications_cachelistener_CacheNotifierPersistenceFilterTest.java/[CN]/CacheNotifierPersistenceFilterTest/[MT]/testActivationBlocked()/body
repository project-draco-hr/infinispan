{
  String key="key";
  String value="value";
  Cache<String,String> cache0=cache(0,CACHE_NAME);
  PassivationManager passivationManager=cache0.getAdvancedCache().getComponentRegistry().getComponent(PassivationManager.class);
  passivationManager.passivate(new ImmortalCacheEntry(key,value));
  passivationManager.passivate(new ImmortalCacheEntry("not" + key,value));
  AllCacheEntryListener listener=new AllCacheEntryListener();
  cache0.addListener(listener,new EventKeyFilter(Event.Type.CACHE_ENTRY_ACTIVATED,key),null);
  assertEquals(value,cache0.get("not" + key));
  assertEquals(0,listener.events.size());
  assertEquals(value,cache0.get(key));
  assertEquals(2,listener.events.size());
  assertEquals(Event.Type.CACHE_ENTRY_ACTIVATED,listener.events.get(0).getType());
  assertEquals(key,listener.events.get(0).getKey());
  assertEquals(value,listener.events.get(0).getValue());
  assertEquals(Event.Type.CACHE_ENTRY_ACTIVATED,listener.events.get(0).getType());
  assertEquals(key,listener.events.get(1).getKey());
  assertEquals(value,listener.events.get(1).getValue());
}
