{
  RemoteCache<String,Integer> cache=client(0).getCache();
  assertNull(cache.get(KEY));
  long timeSpent=System.currentTimeMillis();
  List<Future<Integer>> results=new ArrayList<Future<Integer>>(NUM_THREADS);
  ExecutorService executor=Executors.newFixedThreadPool(NUM_THREADS,getTestThreadFactory("Worker"));
  for (int i=0; i < NUM_THREADS; i++) {
    CounterUpdater app=new CounterUpdater(cache,KEY,OPS_PER_THREAD);
    Future<Integer> result=executor.submit(app);
    results.add(result);
  }
  executor.shutdown();
  executor.awaitTermination(TIMEOUT_MINUTES,TimeUnit.MINUTES);
  timeSpent=System.currentTimeMillis() - timeSpent;
  int actual=cache.get(KEY);
  int expected=0;
  for (  Future<Integer> f : results)   expected+=f.get();
  log.info("Time spent: " + timeSpent / 1000.0 + " secs.");
  assertEquals(expected,actual);
}
