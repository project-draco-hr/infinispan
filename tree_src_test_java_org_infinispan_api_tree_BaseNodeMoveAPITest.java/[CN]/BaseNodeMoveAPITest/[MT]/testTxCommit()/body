{
  Node<Object,Object> rootNode=treeCache.getRoot();
  Node<Object,Object> nodeA=rootNode.addChild(A);
  Node<Object,Object> nodeB=nodeA.addChild(B);
  assertEquals(rootNode,nodeA.getParent());
  assertEquals(nodeA,nodeB.getParent());
  assertEquals(nodeA,rootNode.getChildren().iterator().next());
  assertEquals(nodeB,nodeA.getChildren().iterator().next());
  tm.begin();
  log.debugf("Before: " + TreeStructureSupport.printTree(treeCache,true));
  treeCache.move(nodeB.getFqn(),Fqn.ROOT);
  log.debugf("After: " + TreeStructureSupport.printTree(treeCache,true));
  tm.commit();
  log.debugf("Committed: " + TreeStructureSupport.printTree(treeCache,true));
  nodeB=rootNode.getChild(B);
  assertEquals(rootNode,nodeA.getParent());
  assertEquals(rootNode,nodeB.getParent());
  assertTrue(rootNode.getChildren().contains(nodeA));
  assertTrue(rootNode.getChildren().contains(nodeB));
  assertTrue(nodeA.getChildren().isEmpty());
}
