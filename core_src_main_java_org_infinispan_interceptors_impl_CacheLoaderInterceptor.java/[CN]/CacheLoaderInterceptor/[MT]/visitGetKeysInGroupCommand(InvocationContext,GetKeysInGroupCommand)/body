{
  final String groupName=command.getGroupName();
  if (!command.isGroupOwner() || hasSkipLoadFlag(command)) {
    return ctx.continueInvocation();
  }
  final KeyFilter<Object> keyFilter=new CompositeKeyFilter<>(new GroupFilter<>(groupName,groupManager),new CollectionKeyFilter<>(ctx.getLookedUpEntries().keySet()));
  persistenceManager.processOnAllStores(keyFilter,new AdvancedCacheLoader.CacheLoaderTask(){
    @Override public void processEntry(    MarshalledEntry marshalledEntry,    AdvancedCacheLoader.TaskContext taskContext) throws InterruptedException {
synchronized (ctx) {
        entryFactory.wrapExternalEntry(ctx,marshalledEntry.getKey(),convert(marshalledEntry,iceFactory),EntryFactory.Wrap.STORE,false);
      }
    }
  }
,true,true);
  return ctx.continueInvocation();
}
