{
  LRUNode<K,V> eviction=(LRUNode<K,V>)e.eviction;
synchronized (eviction) {
    if (!eviction.removed) {
      DequeNode<Node<K,V>> queueNode=new DequeNode<>(e);
      eviction.queueNode=queueNode;
      deque.linkLast(queueNode);
      incrementSizeEviction(currentSize,1,0);
    }
  }
}
