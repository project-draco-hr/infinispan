{
  this.expirationThreadPool=expirationThreadPool;
  this.listenerThreadPool=listenerThreadPool;
  this.replicationQueueThreadPool=replicationQueueThreadPool;
  this.persistenceThreadPool=persistenceThreadPool;
  this.stateTransferThreadPool=stateTransferThreadPool;
  this.asyncThreadPool=asyncThreadPool;
  this.globalJmxStatistics=globalJmxStatistics;
  this.transport=transport;
  this.security=security;
  this.serialization=serialization;
  this.shutdown=shutdown;
  this.globalState=globalState;
  Map<Class<?>,Object> moduleMap=new HashMap<Class<?>,Object>();
  for (  Object module : modules) {
    moduleMap.put(module.getClass(),module);
  }
  this.modules=Collections.unmodifiableMap(moduleMap);
  this.site=site;
  this.cl=new WeakReference<ClassLoader>(cl);
}
