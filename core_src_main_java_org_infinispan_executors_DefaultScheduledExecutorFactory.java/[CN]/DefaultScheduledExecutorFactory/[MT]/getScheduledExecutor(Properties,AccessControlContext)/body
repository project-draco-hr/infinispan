{
  TypedProperties tp=new TypedProperties(p);
  final String threadNamePrefix=p.getProperty("threadNamePrefix",p.getProperty("componentName","Thread"));
  final int threadPrio=tp.getIntProperty("threadPriority",Thread.MIN_PRIORITY);
  final AccessControlContext acc=context;
  return Executors.newSingleThreadScheduledExecutor(new ThreadFactory(){
    public Thread createThread(    Runnable r){
      Thread th=new Thread(r,"Scheduled-" + threadNamePrefix + "-"+ counter.getAndIncrement());
      th.setDaemon(true);
      th.setPriority(threadPrio);
      return th;
    }
    @Override public Thread newThread(    Runnable r){
      final Runnable runnable=r;
      if (System.getSecurityManager() != null && acc != null) {
        return AccessController.doPrivileged(new PrivilegedAction<Thread>(){
          @Override public Thread run(){
            return createThread(runnable);
          }
        }
,acc);
      }
 else {
        return createThread(runnable);
      }
    }
  }
);
}
