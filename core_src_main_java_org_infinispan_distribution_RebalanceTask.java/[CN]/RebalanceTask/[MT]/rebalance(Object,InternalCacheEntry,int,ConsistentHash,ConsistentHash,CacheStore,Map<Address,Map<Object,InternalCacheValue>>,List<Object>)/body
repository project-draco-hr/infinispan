{
  List<Address> oldServers=chOld.locate(key,numOwners);
  List<Address> newServers=chNew.locate(key,numOwners);
  if (oldServers.equals(newServers))   return;
  Address oldOwner=null;
  for (int i=oldServers.size() - 1; i >= 0; i--) {
    Address tmp=oldServers.get(i);
    if (newServers.contains(tmp)) {
      oldOwner=tmp;
      break;
    }
  }
  if (self.equals(oldOwner)) {
    if (value == null) {
      try {
        value=cacheStore.load(key);
      }
 catch (      CacheLoaderException e) {
        log.warnf("failed loading value for key %s from cache store",key);
      }
    }
    for (    Address server : newServers) {
      if (!oldServers.contains(server)) {
        Map<Object,InternalCacheValue> map=states.get(server);
        if (map == null) {
          map=new HashMap<Object,InternalCacheValue>();
          states.put(server,map);
        }
        if (value != null)         map.put(key,value.toInternalCacheValue());
      }
    }
  }
  if (oldServers.contains(self) && !newServers.contains(self)) {
    removedKeys.add(key);
  }
}
