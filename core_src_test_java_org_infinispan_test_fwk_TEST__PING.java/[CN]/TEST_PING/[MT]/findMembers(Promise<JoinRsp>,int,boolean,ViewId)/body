{
  if (!stopped) {
    Map<Address,TEST_PING> discoveries=registerInDiscoveries();
    boolean discardEnabled=isDiscardEnabled(this);
    if (!discardEnabled) {
      if (!discoveries.isEmpty()) {
        LinkedList<PingData> rsps=new LinkedList<PingData>();
synchronized (discoveries) {
          for (          TEST_PING discovery : discoveries.values()) {
            boolean traceEnabled=log.isTraceEnabled();
            if (discovery != this) {
              boolean remoteDiscardEnabled=isDiscardEnabled(discovery);
              if (!remoteDiscardEnabled && !discovery.stopped) {
                addPingRsp(rsps,discovery);
              }
 else               if (discovery.stopped) {
                log.debug(String.format("%s is stopped, so no ping responses will be received",discovery.getLocalAddr()));
              }
 else {
                if (traceEnabled)                 log.trace("Skipping sending response cos DISCARD is on");
                addPingRsp(new LinkedList<PingData>(),discovery);
              }
            }
 else {
              if (traceEnabled)               log.trace("Skipping sending discovery to self");
            }
          }
        }
        return rsps;
      }
 else {
        log.debug("No other nodes yet, so skip sending get-members request");
        return new LinkedList<PingData>();
      }
    }
 else {
      log.debug("Not sending discovery because DISCARD is on");
      return new LinkedList<PingData>();
    }
  }
 else {
    log.debug("Discovery protocol already stopped, so don't look for members");
    return new LinkedList<PingData>();
  }
}
