{
  if (!stopped) {
    Map<Address,TEST_PING> discoveries=registerInDiscoveries();
    boolean discardEnabled=isDiscardEnabled(this);
    if (!discardEnabled) {
      if (!discoveries.isEmpty()) {
synchronized (discoveries) {
          boolean traceEnabled=log.isTraceEnabled();
          for (          TEST_PING discovery : discoveries.values()) {
            if (discovery != this) {
              boolean remoteDiscardEnabled=isDiscardEnabled(discovery);
              if (!remoteDiscardEnabled && !discovery.stopped) {
                addPingRsp(pingDatas,discovery);
              }
 else               if (discovery.stopped) {
                log.debug(String.format("%s is stopped, so no ping responses will be received",discovery.getLocalAddr()));
              }
 else {
                if (traceEnabled)                 log.trace("Skipping sending response cos DISCARD is on");
                addPingRsp(null,discovery);
              }
            }
 else {
              if (traceEnabled)               log.trace("Skipping sending discovery to self");
            }
          }
        }
      }
 else {
        log.debug("No other nodes yet, so skip sending get-members request");
      }
    }
 else {
      log.debug("Not sending discovery because DISCARD is on");
    }
  }
 else {
    log.debug("Discovery protocol already stopped, so don't look for members");
  }
  if (forceCoordSingleMember && pingDatas.size() == 1) {
    PingData singlePingData=pingDatas.iterator().next();
    if (!singlePingData.isCoord())     singlePingData.coord(true);
    forceCoordSingleMember=false;
  }
  pingDatas.done();
}
