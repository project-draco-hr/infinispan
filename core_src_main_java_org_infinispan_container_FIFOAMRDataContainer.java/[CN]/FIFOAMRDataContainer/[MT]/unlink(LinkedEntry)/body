{
  if (node == head || node == tail)   return;
  while (true) {
    AtomicMarkableReference<LinkedEntry> next=node.n;
    if (next.isMarked())     return;
    if (node.n.compareAndSet(next.getReference(),next.getReference(),false,true)) {
      AtomicMarkableReference<LinkedEntry> prev;
      while (true) {
        prev=node.p;
        if (prev.isMarked() || node.p.compareAndSet(prev.getReference(),prev.getReference(),false,true)) {
          break;
        }
      }
      correctPrev(prev.getReference().p.getReference(),next.getReference());
    }
  }
}
