{
  String queryString="from org.infinispan.objectfilter.test.model.Person p where p.name = 'John'";
  BaseMatcher matcher=createMatcher();
  Object person=createPerson();
  final int[] matchCount=new int[1];
  FilterSubscription filterSubscription=matcher.registerFilter(queryString,new FilterCallback(){
    @Override public void onFilterResult(    Object instance,    Object[] projection,    boolean isMatching){
      if (isMatching) {
        matchCount[0]++;
      }
    }
  }
);
  final int[] matchCount2=new int[1];
  Matcher subMatcher=matcher.getSingleFilterMatcher(filterSubscription,new FilterCallback(){
    @Override public void onFilterResult(    Object instance,    Object[] projection,    boolean isMatching){
      if (isMatching) {
        matchCount2[0]++;
      }
    }
  }
);
  matcher.match(person);
  assertEquals(1,matchCount[0]);
  assertEquals(0,matchCount2[0]);
  subMatcher.match(person);
  assertEquals(1,matchCount[0]);
  assertEquals(1,matchCount2[0]);
}
