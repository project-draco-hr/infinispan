{
  ExternalizerAdapter adapter=new ExternalizerAdapter(index++,new InstanceWriter(RequestIgnoredResponse.INSTANCE));
  objects.add(adapter);
  writers.put(RequestIgnoredResponse.class,adapter);
  adapter=new ExternalizerAdapter(index++,new InstanceWriter(UnsuccessfulResponse.INSTANCE));
  objects.add(adapter);
  writers.put(UnsuccessfulResponse.class,adapter);
  try {
    for (    Map.Entry<String,String> entry : EXTERNALIZERS.entrySet()) {
      try {
        Class typeClazz=Util.loadClass(entry.getKey());
        Externalizer delegate=(Externalizer)Util.getInstance(entry.getValue());
        if (delegate instanceof ReplicableCommandExternalizer) {
          ((ReplicableCommandExternalizer)delegate).init(cmdFactory);
        }
        if (delegate instanceof MarshalledValueExternalizer) {
          ((MarshalledValueExternalizer)delegate).init(ispnMarshaller);
        }
        ExternalizerAdapter rwrt=new ExternalizerAdapter(index++,delegate);
        objects.add(rwrt);
        writers.put(typeClazz,rwrt);
      }
 catch (      ClassNotFoundException e) {
        if (log.isDebugEnabled())         log.debug("Unable to load class (ignore if class belonging to a module not in use): {0}",e.getMessage());
      }
    }
  }
 catch (  Exception e) {
    throw new CacheException("Unable to instantiate Externalizer class",e);
  }
}
