{
  boolean isMBean=false;
  MBeanComponent mbc=new MBeanComponent();
  mbc.className=cd.qualifiedTypeName();
  mbc.name=cd.typeName();
  for (  AnnotationDesc a : cd.annotations()) {
    AnnotationTypeDoc atd=a.annotationType();
    String annotationName=atd.qualifiedTypeName();
    if (annotationName.equals(MBean.class.getName())) {
      isMBean=true;
      setNameDesc(a.elementValues(),mbc);
    }
  }
  for (  MethodDoc method : cd.methods()) {
    for (    AnnotationDesc a : method.annotations()) {
      String annotationName=a.annotationType().qualifiedTypeName();
      if (annotationName.equals(ManagedOperation.class.getName())) {
        isMBean=true;
        MBeanOperation o=new MBeanOperation();
        o.name=method.name();
        setNameDesc(a.elementValues(),o);
        o.returnType=method.returnType().simpleTypeName();
        for (        Parameter p : method.parameters())         o.addParam(p.type().simpleTypeName());
        mbc.operations.add(o);
      }
 else       if (annotationName.equals(ManagedAttribute.class.getName())) {
        isMBean=true;
        MBeanAttribute attr=new MBeanAttribute();
        if (method.name().startsWith("get") || method.name().startsWith("is")) {
          attr.type=method.returnType().simpleTypeName();
        }
 else         if (method.parameters().length > 0) {
          attr.type=method.parameters()[0].type().simpleTypeName();
        }
        attr.name=fromBeanConvention(method.name());
        setNameDesc(a.elementValues(),attr);
        setWritable(a.elementValues(),attr);
        mbc.attributes.add(attr);
      }
    }
  }
  for (  FieldDoc field : cd.fields(false)) {
    for (    AnnotationDesc a : field.annotations()) {
      String annotationName=a.annotationType().qualifiedTypeName();
      if (annotationName.equals(ManagedAttribute.class.getName())) {
        isMBean=true;
        MBeanAttribute attr=new MBeanAttribute();
        attr.name=field.name();
        attr.type=field.type().simpleTypeName();
        setNameDesc(a.elementValues(),attr);
        setWritable(a.elementValues(),attr);
        mbc.attributes.add(attr);
      }
    }
  }
  if (isMBean) {
    Collections.sort(mbc.attributes);
    Collections.sort(mbc.operations);
    return mbc;
  }
 else {
    return null;
  }
}
