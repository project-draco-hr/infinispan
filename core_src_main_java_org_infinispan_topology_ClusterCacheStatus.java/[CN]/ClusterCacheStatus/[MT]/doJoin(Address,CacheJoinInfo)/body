{
  boolean isFirstMember;
  CacheTopology topologyBeforeRebalance;
synchronized (this) {
    isFirstMember=getCurrentTopology() == null;
    boolean memberJoined=addMember(joiner,joinInfo);
    if (!isFirstMember && !memberJoined) {
      if (trace)       log.tracef("Trying to add node %s to cache %s, but it is already a member: " + "members = %s, joiners = %s",joiner,cacheName,expectedMembers,joiners);
      return new CacheStatusResponse(null,currentTopology,stableTopology,availabilityMode);
    }
    if (isFirstMember) {
      CacheTopology initialTopology=createInitialCacheTopology();
      clusterTopologyManager.broadcastStableTopologyUpdate(cacheName,initialTopology,isTotalOrder(),isDistributed());
    }
    topologyBeforeRebalance=getCurrentTopology();
    availabilityStrategy.onJoin(this,joiner);
  }
  return new CacheStatusResponse(null,topologyBeforeRebalance,stableTopology,availabilityMode);
}
