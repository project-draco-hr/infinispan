{
  log.trace("buildCacheTopology");
  int unionTopologyId=0;
  ConsistentHash currentCHUnion=null;
  ConsistentHashFactory chFactory=getJoinInfo().getConsistentHashFactory();
  ConsistentHash latestTopologyCh=null;
  for (  CacheTopology topology : partitionTopologies) {
    if (topology.getTopologyId() > unionTopologyId) {
      unionTopologyId=topology.getTopologyId();
      latestTopologyCh=topology.getCurrentCH();
    }
    if (currentCHUnion == null) {
      currentCHUnion=topology.getCurrentCH();
    }
 else {
      currentCHUnion=chFactory.union(currentCHUnion,topology.getCurrentCH());
    }
  }
  updateClusterMembers(clusterMembers);
  List<Address> members=getMembers();
  if (members.isEmpty()) {
    log.tracef("Cache %s has no members left, skipping topology update",cacheName);
    return null;
  }
  if (currentCHUnion != null) {
    currentCHUnion=chFactory.updateMembers(currentCHUnion,members,getCapacityFactors());
  }
  unionTopologyId+=2;
  return new CacheTopology(unionTopologyId,currentCHUnion,null,isDataLost(latestTopologyCh,clusterMembers));
}
