def __init__(self, host, debug=0):
    self.debug = debug
    if isinstance(host, tuple):
        (host, self.weight) = host
    else:
        self.weight = 1
    m = re.match('^(?P<proto>unix):(?P<path>.*)$', host)
    if (not m):
        m = re.match('^(?P<proto>inet):(?P<host>[^:]+)(:(?P<port>[0-9]+))?$', host)
    if (not m):
        m = re.match('^(?P<host>[^:]+):(?P<port>[0-9]+)$', host)
    if (not m):
        raise ValueError(('Unable to parse connection string: "%s"' % host))
    hostData = m.groupdict()
    if (hostData.get('proto') == 'unix'):
        self.family = socket.AF_UNIX
        self.address = hostData['path']
    else:
        self.family = socket.AF_INET
        self.ip = hostData['host']
        self.port = int(hostData.get('port', 11211))
        self.address = (self.ip, self.port)
    self.deaduntil = 0
    self.socket = None
    self.buffer = ''
