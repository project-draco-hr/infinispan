{
  Subscriptions subscriptions;
  Predicate<AttributeDomain> predicate=predicateNode.getPredicate();
  if (useIntervals && predicate instanceof IntervalPredicate) {
    if (orderedPredicates == null) {
      orderedPredicates=new IntervalTree<AttributeDomain,Subscriptions>();
    }
    IntervalTree.Node<AttributeDomain,Subscriptions> n=orderedPredicates.add(((IntervalPredicate)predicate).getInterval());
    if (n.value == null) {
      subscriptions=new Subscriptions(predicate);
      n.value=subscriptions;
    }
 else {
      subscriptions=n.value;
    }
  }
 else {
    subscriptions=null;
    if (unorderedPredicates == null) {
      unorderedPredicates=new ArrayList<Subscriptions>();
    }
 else {
      for (int i=0; i < unorderedPredicates.size(); i++) {
        Subscriptions s=unorderedPredicates.get(i);
        if (s.predicate.equals(predicate)) {
          subscriptions=s;
          break;
        }
      }
    }
    if (subscriptions == null) {
      subscriptions=new Subscriptions(predicate);
      unorderedPredicates.add(subscriptions);
    }
  }
  Subscription<AttributeId> subscription=new Subscription<AttributeId>(predicateNode,filterSubscription);
  subscriptions.add(subscription);
  return subscription;
}
