{
  if (orderedPredicates != null && attributeValue instanceof Comparable) {
    orderedPredicates.stab((AttributeDomain)attributeValue,new IntervalTree.NodeCallback<AttributeDomain,Subscriptions>(){
      @Override public void handle(      IntervalTree.Node<AttributeDomain,Subscriptions> node){
        Subscriptions subscriptions=node.value;
        if (subscriptions.isActive(ctx)) {
          for (          Subscription s : subscriptions.subscriptions) {
            s.handleValue(ctx,true);
          }
        }
      }
    }
);
  }
  if (unorderedPredicates != null) {
    for (int k=unorderedPredicates.size() - 1; k >= 0; k--) {
      Subscriptions subscriptions=unorderedPredicates.get(k);
      if (subscriptions.isActive(ctx)) {
        boolean isMatching=subscriptions.predicate.match(attributeValue);
        List<Subscription> s=subscriptions.subscriptions;
        for (int i=s.size() - 1; i >= 0; i--) {
          s.get(i).handleValue(ctx,isMatching);
        }
      }
    }
  }
}
