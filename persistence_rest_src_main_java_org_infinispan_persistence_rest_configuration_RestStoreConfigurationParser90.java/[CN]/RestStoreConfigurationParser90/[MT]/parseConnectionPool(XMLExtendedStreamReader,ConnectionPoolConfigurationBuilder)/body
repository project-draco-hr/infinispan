{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case CONNECTION_TIMEOUT:
{
        builder.connectionTimeout(Integer.parseInt(value));
        break;
      }
case MAX_CONNECTIONS_PER_HOST:
{
      builder.maxConnectionsPerHost(Integer.parseInt(value));
      break;
    }
case MAX_TOTAL_CONNECTIONS:
{
    builder.maxTotalConnections(Integer.parseInt(value));
    break;
  }
case BUFFER_SIZE:
{
  builder.bufferSize(Integer.parseInt(value));
  break;
}
case SOCKET_TIMEOUT:
{
builder.socketTimeout(Integer.parseInt(value));
break;
}
case TCP_NO_DELAY:
{
builder.tcpNoDelay(Boolean.parseBoolean(value));
break;
}
default :
{
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
ParseUtils.requireNoContent(reader);
}
