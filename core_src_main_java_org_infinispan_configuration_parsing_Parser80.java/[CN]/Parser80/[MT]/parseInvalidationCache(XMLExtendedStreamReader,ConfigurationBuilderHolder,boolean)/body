{
  String name=reader.getAttributeValue(null,Attribute.NAME.getLocalName());
  String extend=reader.getAttributeValue(null,Attribute.EXTENDS.getLocalName());
  ConfigurationBuilder builder=getConfigurationBuilder(holder,name,template,extend);
  CacheMode baseCacheMode=CacheMode.INVALIDATION_SYNC;
  builder.clustering().cacheMode(baseCacheMode);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case KEY_PARTITIONER:
{
        builder.clustering().hash().keyPartitioner(Util.getInstance(value,holder.getClassLoader()));
        break;
      }
default :
{
      this.parseClusteredCacheAttribute(reader,i,attribute,value,builder,baseCacheMode);
    }
}
}
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
default :
{
    this.parseCacheElement(reader,element,holder);
  }
}
}
}
