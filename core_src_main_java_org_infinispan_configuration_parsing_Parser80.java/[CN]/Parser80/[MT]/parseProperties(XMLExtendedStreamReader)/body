{
  Properties p=new Properties();
  while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
    Element element=Element.forName(reader.getLocalName());
switch (element) {
case PROPERTY:
{
        int attributes=reader.getAttributeCount();
        ParseUtils.requireAttributes(reader,Attribute.NAME.getLocalName());
        String key=null;
        String propertyValue;
        for (int i=0; i < attributes; i++) {
          String value=replaceProperties(reader.getAttributeValue(i));
          Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case NAME:
{
              key=value;
              break;
            }
default :
{
            throw ParseUtils.unexpectedAttribute(reader,i);
          }
      }
    }
    propertyValue=replaceProperties(reader.getElementText());
    p.setProperty(key,propertyValue);
    break;
  }
default :
{
  throw ParseUtils.unexpectedElement(reader);
}
}
}
return p;
}
