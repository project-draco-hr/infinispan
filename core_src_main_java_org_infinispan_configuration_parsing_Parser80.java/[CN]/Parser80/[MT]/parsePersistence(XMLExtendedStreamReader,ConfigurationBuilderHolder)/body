{
  ConfigurationBuilder builder=holder.getCurrentConfigurationBuilder();
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case PASSIVATION:
      builder.persistence().passivation(Boolean.parseBoolean(value));
    break;
default :
  throw ParseUtils.unexpectedAttribute(reader,i);
}
}
builder.persistence().clearStores();
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
case CLUSTER_LOADER:
parseClusterLoader(reader,holder);
break;
case FILE_STORE:
parseFileStore(reader,holder);
break;
case STORE:
parseCustomStore(reader,holder);
break;
case LOADER:
log.ignoreXmlElement(element);
break;
default :
reader.handleAny(holder);
}
}
}
