{
  c1=TestCacheManagerFactory.createCacheManager(hotRodCacheConfiguration()).getCache();
  c2=TestCacheManagerFactory.createCacheManager(hotRodCacheConfiguration()).getCache();
  registerCacheManager(c1.getCacheManager(),c2.getCacheManager());
  hotRodServer1=HotRodClientTestingUtil.startHotRodServer(c1.getCacheManager());
  hotRodServer2=HotRodClientTestingUtil.startHotRodServer(c2.getCacheManager());
  String servers=HotRodClientTestingUtil.getServersString(hotRodServer1,hotRodServer2);
  org.infinispan.client.hotrod.configuration.ConfigurationBuilder clientBuilder=new org.infinispan.client.hotrod.configuration.ConfigurationBuilder();
  clientBuilder.connectionPool().maxActive(2).maxTotal(8).maxIdle(6).exhaustedAction(ExhaustedAction.WAIT).testOnBorrow(false).testOnReturn(false).timeBetweenEvictionRuns(-2).minEvictableIdleTime(7).testWhileIdle(true).minIdle(-5).lifo(true).addServers(servers);
  remoteCacheManager=new InternalRemoteCacheManager(clientBuilder.build());
  remoteCache=remoteCacheManager.getCache();
  TcpTransportFactory tcpConnectionFactory=(TcpTransportFactory)((InternalRemoteCacheManager)remoteCacheManager).getTransportFactory();
  connectionPool=(GenericKeyedObjectPool<?,?>)tcpConnectionFactory.getConnectionPool();
  workerThread1=new WorkerThread(remoteCache);
  workerThread2=new WorkerThread(remoteCache);
  workerThread3=new WorkerThread(remoteCache);
  workerThread4=new WorkerThread(remoteCache);
  workerThread5=new WorkerThread(remoteCache);
  workerThread6=new WorkerThread(remoteCache);
  hrServ1Addr=new InetSocketAddress("localhost",hotRodServer1.getPort());
  hrServ2Addr=new InetSocketAddress("localhost",hotRodServer2.getPort());
}
