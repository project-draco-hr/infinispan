{
  Cache<Object,Object> cache=cm.getCache();
  String cacheName=EmbeddedCacheManager.DEFAULT_CACHE_NAME;
  ImmortalCacheEntry entry1=(ImmortalCacheEntry)TestInternalCacheEntryFactory.create("key","value",System.currentTimeMillis() - 1000,-1,System.currentTimeMillis(),-1);
  Collection<InternalCacheEntry> state=new ArrayList<InternalCacheEntry>();
  state.add(entry1);
  Address a1=new JGroupsAddress(UUID.randomUUID());
  Address a2=new JGroupsAddress(UUID.randomUUID());
  Address a3=new JGroupsAddress(UUID.randomUUID());
  List<Address> oldAddresses=new ArrayList();
  oldAddresses.add(a1);
  oldAddresses.add(a2);
  DefaultConsistentHashFactory chf=new DefaultConsistentHashFactory();
  DefaultConsistentHash oldCh=chf.create(new MurmurHash3(),2,3,oldAddresses);
  List<Address> newAddresses=new ArrayList();
  newAddresses.add(a1);
  newAddresses.add(a2);
  newAddresses.add(a3);
  DefaultConsistentHash newCh=chf.create(new MurmurHash3(),2,3,newAddresses);
  StateTransferControlCommand c14=new StateTransferControlCommand(cacheName,StateTransferControlCommand.Type.APPLY_STATE,a1,99,state,null);
  byte[] bytes=marshaller.objectToByteBuffer(c14);
  marshaller.objectFromByteBuffer(bytes);
  bytes=marshaller.objectToByteBuffer(c14);
  marshaller.objectFromByteBuffer(bytes);
  bytes=marshaller.objectToByteBuffer(c14);
  marshaller.objectFromByteBuffer(bytes);
}
