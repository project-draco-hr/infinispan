{
  ThreadFactory tf=new MemcachedThreadFactory(cacheName,ExecutorType.MASTER);
  if (masterThreads == 0) {
    log.debug("Configured unlimited threads for master thread pool");
    masterExecutor=Executors.newCachedThreadPool(tf);
  }
 else {
    log.debug("Configured {0} threads for master thread pool",masterThreads);
    masterExecutor=Executors.newFixedThreadPool(masterThreads,tf);
  }
  tf=new MemcachedThreadFactory(cacheName,ExecutorType.WORKER);
  if (workerThreads == 0) {
    log.debug("Configured unlimited threads for worker thread pool");
    workerExecutor=Executors.newCachedThreadPool(tf);
  }
 else {
    log.debug("Configured {0} threads for worker thread pool",workerThreads);
    workerExecutor=Executors.newFixedThreadPool(workerThreads,tf);
  }
  NettyChannelUpstreamHandler handler=new NettyChannelUpstreamHandler(commandHandler,acceptedChannels);
  this.pipeline=new NettyChannelPipelineFactory(decoder,encoder,handler);
  this.address=address;
  if (workerThreads == 0) {
    factory=new NioServerSocketChannelFactory(masterExecutor,workerExecutor);
  }
 else {
    factory=new NioServerSocketChannelFactory(masterExecutor,workerExecutor,workerThreads);
  }
}
