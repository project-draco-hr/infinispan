{
  addInternalExternalizer(new ArrayListExternalizer());
  addInternalExternalizer(new LinkedListExternalizer());
  addInternalExternalizer(new MapExternalizer());
  addInternalExternalizer(new SetExternalizer());
  addInternalExternalizer(new SingletonListExternalizer());
  addInternalExternalizer(new GlobalTransaction.Externalizer());
  addInternalExternalizer(new RecoveryAwareGlobalTransaction.Externalizer());
  addInternalExternalizer(new DldGlobalTransaction.Externalizer());
  addInternalExternalizer(new RecoveryAwareDldGlobalTransaction.Externalizer());
  addInternalExternalizer(new JGroupsAddress.Externalizer());
  addInternalExternalizer(new Immutables.ImmutableMapWrapperExternalizer());
  addInternalExternalizer(new MarshalledValue.Externalizer(globalMarshaller));
  addInternalExternalizer(new SuccessfulResponse.Externalizer());
  addInternalExternalizer(new ExceptionResponse.Externalizer());
  addInternalExternalizer(new UnsuccessfulResponse.Externalizer());
  addInternalExternalizer(new UnsureResponse.Externalizer());
  ReplicableCommandExternalizer cmExt=new ReplicableCommandExternalizer(cmdFactory,gcr);
  addInternalExternalizer(cmExt);
  addInternalExternalizer(new CacheRpcCommandExternalizer(gcr,cmExt));
  addInternalExternalizer(new ImmortalCacheEntry.Externalizer());
  addInternalExternalizer(new MortalCacheEntry.Externalizer());
  addInternalExternalizer(new TransientCacheEntry.Externalizer());
  addInternalExternalizer(new TransientMortalCacheEntry.Externalizer());
  addInternalExternalizer(new ImmortalCacheValue.Externalizer());
  addInternalExternalizer(new MortalCacheValue.Externalizer());
  addInternalExternalizer(new TransientCacheValue.Externalizer());
  addInternalExternalizer(new TransientMortalCacheValue.Externalizer());
  addInternalExternalizer(new SimpleClusteredVersion.Externalizer());
  addInternalExternalizer(new MetadataImmortalCacheEntry.Externalizer());
  addInternalExternalizer(new MetadataMortalCacheEntry.Externalizer());
  addInternalExternalizer(new MetadataTransientCacheEntry.Externalizer());
  addInternalExternalizer(new MetadataTransientMortalCacheEntry.Externalizer());
  addInternalExternalizer(new MetadataImmortalCacheValue.Externalizer());
  addInternalExternalizer(new MetadataMortalCacheValue.Externalizer());
  addInternalExternalizer(new MetadataTransientCacheValue.Externalizer());
  addInternalExternalizer(new MetadataTransientMortalCacheValue.Externalizer());
  addInternalExternalizer(new DeltaCompositeKey.DeltaCompositeKeyExternalizer());
  addInternalExternalizer(new AtomicHashMap.Externalizer());
  addInternalExternalizer(new Bucket.Externalizer(gcr));
  addInternalExternalizer(new AtomicHashMapDelta.Externalizer());
  addInternalExternalizer(new PutOperation.Externalizer());
  addInternalExternalizer(new RemoveOperation.Externalizer());
  addInternalExternalizer(new ClearOperation.Externalizer());
  addInternalExternalizer(new JGroupsTopologyAwareAddress.Externalizer());
  addInternalExternalizer(new ByteArrayKey.Externalizer());
  addInternalExternalizer(new SerializableXid.XidExternalizer());
  addInternalExternalizer(new InDoubtTxInfoImpl.Externalizer());
  addInternalExternalizer(new MurmurHash2.Externalizer());
  addInternalExternalizer(new MurmurHash2Compat.Externalizer());
  addInternalExternalizer(new MurmurHash3.Externalizer());
  addInternalExternalizer(new DefaultConsistentHash.Externalizer());
  addInternalExternalizer(new ReplicatedConsistentHash.Externalizer());
  addInternalExternalizer(new DefaultConsistentHashFactory.Externalizer());
  addInternalExternalizer(new ReplicatedConsistentHashFactory.Externalizer());
  addInternalExternalizer(new SyncConsistentHashFactory.Externalizer());
  addInternalExternalizer(new TopologyAwareConsistentHashFactory.Externalizer());
  addInternalExternalizer(new TopologyAwareSyncConsistentHashFactory.Externalizer());
  addInternalExternalizer(new CacheTopology.Externalizer());
  addInternalExternalizer(new CacheJoinInfo.Externalizer());
  addInternalExternalizer(new TransactionInfo.Externalizer());
  addInternalExternalizer(new StateChunk.Externalizer());
  addInternalExternalizer(new Flag.Externalizer());
  addInternalExternalizer(new InfinispanCollections.EmptySet.EmptySetExternalizer());
  addInternalExternalizer(new InfinispanCollections.EmptyMap.EmptyMapExternalizer());
  addInternalExternalizer(new InfinispanCollections.EmptyList.EmptyListExternalizer());
  addInternalExternalizer(new EmbeddedMetadata.Externalizer());
}
