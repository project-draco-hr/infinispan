{
  LocalTopologyManager component=TestingUtil.extractGlobalComponent(manager,LocalTopologyManager.class);
  LocalTopologyManager spyLtm=Mockito.spy(component);
  doAnswer(new Answer(){
    @Override public Object answer(    InvocationOnMock invocation) throws Throwable {
      CacheTopology topology=(CacheTopology)invocation.getArguments()[1];
      if (topology.getTopologyId() != currentTopologyId) {
        checkPoint.trigger("pre_topology_" + topology.getTopologyId() + "_on_"+ manager.getAddress());
        checkPoint.await("allow_topology_" + topology.getTopologyId() + "_on_"+ manager.getAddress(),10,TimeUnit.SECONDS);
      }
      return invocation.callRealMethod();
    }
  }
).when(spyLtm).handleTopologyUpdate(eq(CacheContainer.DEFAULT_CACHE_NAME),any(CacheTopology.class),any(AvailabilityMode.class),anyInt(),any(Address.class));
  TestingUtil.extractGlobalComponentRegistry(manager).registerComponent(spyLtm,LocalTopologyManager.class);
}
