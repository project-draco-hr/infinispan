{
  final Log localLog=getLog();
  int newTopologyId=transport.readVInt();
  topologyId.set(newTopologyId);
  int numKeyOwners=transport.readUnsignedShort();
  short hashFunctionVersion=transport.readByte();
  int hashSpace=transport.readVInt();
  int clusterSize=transport.readVInt();
  Map<SocketAddress,Set<Integer>> servers2Hash=computeNewHashes(transport,localLog,newTopologyId,numKeyOwners,hashFunctionVersion,hashSpace,clusterSize);
  Set<SocketAddress> socketAddresses=servers2Hash.keySet();
  if (localLog.isInfoEnabled()) {
    localLog.newTopology(transport.getRemoteSocketAddress(),newTopologyId,socketAddresses.size(),socketAddresses);
  }
  transport.getTransportFactory().updateServers(socketAddresses,cacheName);
  if (hashFunctionVersion == 0) {
    localLog.trace("Not using a consistent hash function (hash function version == 0).");
  }
 else {
    transport.getTransportFactory().updateHashFunction(servers2Hash,numKeyOwners,hashFunctionVersion,hashSpace,cacheName);
  }
}
