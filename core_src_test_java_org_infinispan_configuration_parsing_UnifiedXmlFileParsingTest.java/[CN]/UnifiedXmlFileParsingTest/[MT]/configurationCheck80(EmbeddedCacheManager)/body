{
  configurationCheck70(cm);
  Configuration c=cm.getDefaultCacheConfiguration();
  assertFalse(c.eviction().type() == EvictionType.MEMORY);
  c=cm.getCacheConfiguration("invalid");
  assertTrue(c.eviction().type() == EvictionType.MEMORY);
  DefaultThreadFactory threadFactory;
  BlockingThreadPoolExecutorFactory threadPool;
  threadFactory=cm.getCacheManagerConfiguration().asyncThreadPool().threadFactory();
  assertEquals("infinispan",threadFactory.threadGroup().getName());
  assertEquals("%G %i",threadFactory.threadNamePattern());
  assertEquals(5,threadFactory.initialPriority());
  threadPool=cm.getCacheManagerConfiguration().asyncThreadPool().threadPoolFactory();
  assertEquals(TestCacheManagerFactory.ASYNC_EXEC_MAX_THREADS,threadPool.coreThreads());
  assertEquals(TestCacheManagerFactory.ASYNC_EXEC_MAX_THREADS,threadPool.maxThreads());
  assertEquals(TestCacheManagerFactory.ASYNC_EXEC_QUEUE_SIZE,threadPool.queueLength());
  assertEquals(TestCacheManagerFactory.KEEP_ALIVE,threadPool.keepAlive());
  threadFactory=cm.getCacheManagerConfiguration().stateTransferThreadPool().threadFactory();
  assertEquals("infinispan",threadFactory.threadGroup().getName());
  assertEquals("%G %i",threadFactory.threadNamePattern());
  assertEquals(5,threadFactory.initialPriority());
  threadPool=cm.getCacheManagerConfiguration().stateTransferThreadPool().threadPoolFactory();
  assertEquals(TestCacheManagerFactory.STATE_TRANSFER_EXEC_MAX_THREADS,threadPool.coreThreads());
  assertEquals(TestCacheManagerFactory.STATE_TRANSFER_EXEC_MAX_THREADS,threadPool.maxThreads());
  assertEquals(TestCacheManagerFactory.STATE_TRANSFER_EXEC_QUEUE_SIZE,threadPool.queueLength());
  assertEquals(TestCacheManagerFactory.KEEP_ALIVE,threadPool.keepAlive());
  assertTemplateConfiguration(cm,"local-template");
  assertTemplateConfiguration(cm,"invalidation-template");
  assertTemplateConfiguration(cm,"repl-template");
  assertTemplateConfiguration(cm,"dist-template");
  assertCacheConfiguration(cm,"local-instance");
  assertCacheConfiguration(cm,"invalidation-instance");
  assertCacheConfiguration(cm,"repl-instance");
  assertCacheConfiguration(cm,"dist-instance");
  Configuration localTemplate=cm.getCacheConfiguration("local-template");
  Configuration localConfiguration=cm.getCacheConfiguration("local-instance");
  assertEquals(10000,localTemplate.expiration().wakeUpInterval());
  assertEquals(11000,localConfiguration.expiration().wakeUpInterval());
  assertEquals(10,localTemplate.expiration().lifespan());
  assertEquals(10,localConfiguration.expiration().lifespan());
  Configuration replTemplate=cm.getCacheConfiguration("repl-template");
  Configuration replConfiguration=cm.getCacheConfiguration("repl-instance");
  assertEquals(31000,replTemplate.locking().lockAcquisitionTimeout());
  assertEquals(32000,replConfiguration.locking().lockAcquisitionTimeout());
  assertEquals(3000,replTemplate.locking().concurrencyLevel());
  assertEquals(3000,replConfiguration.locking().concurrencyLevel());
}
