{
  SearchManager search=Search.getSearchManager(cache);
  Analyzer analyzer=search.getAnalyzer("standard_analyzer");
  String text="This is just FOOBAR's";
  assertEquals(asList("This","is","just","FOOBAR's"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("html_standard_analyzer");
  text="This is <b>foo</b><i>bar's</i>";
  assertEquals(asList("This","is","foobar's"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("html_whitespace_analyzer");
  text="This is <b>foo</b><i>bar's</i>";
  assertEquals(asList("This","is","foobar's"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("length_analyzer");
  text="ab abc abcd abcde abcdef";
  assertEquals(asList("abc","abcd","abcde"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("length_analyzer");
  text="ab abc abcd abcde abcdef";
  assertEquals(asList("abc","abcd","abcde"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("porter_analyzer");
  text="bikes bikes biking";
  assertEquals(asList("bike","bike","bike"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("word_analyzer");
  text="CamelCase";
  assertEquals(asList("Camel","Case"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("synonym_analyzer");
  text="ipod cosmos";
  assertEquals(asList("ipod","i-pod","cosmos","universe"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("shingle_analyzer");
  text="please divide this sentence into shingles";
  assertEquals(asList("please","please divide","divide","divide this","this","this sentence","sentence","sentence into","into","into shingles","shingles"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("pattern_analyzer");
  text="foo,bar";
  assertEquals(asList("foo","bar"),terms(analyzer,"name",text));
  analyzer=search.getAnalyzer("mapping_char_analyzer");
  text="CORA\u00C7\u00C3O DE MEL\u00C3O";
  assertEquals(asList("CORACAO","DE","MELAO"),terms(analyzer,"name",text));
}
