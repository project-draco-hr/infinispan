{
  try {
    Unmarshaller u=getJAXBContext().createUnmarshaller();
    NamespaceFilter nf=new NamespaceFilter();
    XMLReader reader=XMLReaderFactory.createXMLReader();
    nf.setParent(reader);
    if (schema != null) {
      SchemaFactory factory=SchemaFactory.newInstance("http://www.w3.org/2001/XMLSchema");
      u.setSchema(factory.newSchema(new StreamSource(schema)));
      u.setEventHandler(new ValidationEventHandler(){
        @Override public boolean handleEvent(        ValidationEvent event){
          int severity=event.getSeverity();
          return (severity != ValidationEvent.FATAL_ERROR && severity != ValidationEvent.ERROR);
        }
      }
);
    }
    SAXSource source;
    if (skipTokenReplacement()) {
      source=new SAXSource(nf,new InputSource(config));
    }
 else {
      source=replaceProperties(config,nf);
    }
    u.setListener(new Unmarshaller.Listener(){
      @Override public void beforeUnmarshal(      Object target,      Object parent){
        if (target instanceof JAXBUnmarshallable) {
          ((JAXBUnmarshallable)target).willUnmarshall(parent);
        }
      }
    }
);
    InfinispanConfiguration ic=(InfinispanConfiguration)u.unmarshal(source);
    return ic;
  }
 catch (  CacheConfigurationException cex) {
    throw cex;
  }
catch (  NullPointerException npe) {
    throw npe;
  }
catch (  Exception e) {
    IOException ioe=new IOException(e.getLocalizedMessage());
    ioe.initCause(e);
    throw ioe;
  }
}
