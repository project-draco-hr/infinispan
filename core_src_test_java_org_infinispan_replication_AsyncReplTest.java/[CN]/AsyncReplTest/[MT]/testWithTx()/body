{
  String key="key";
  replListener(cache2).expect(PutKeyValueCommand.class);
  cache1.put(key,"value1");
  replListener(cache2).waitForRpc();
  assertNotLocked(cache1,key);
  assertEquals("value1",cache1.get(key));
  assertEquals("value1",cache2.get(key));
  TransactionManager mgr=TestingUtil.getTransactionManager(cache1);
  mgr.begin();
  replListener(cache2).expectWithTx(PutKeyValueCommand.class);
  cache1.put(key,"value2");
  assertEquals("value2",cache1.get(key));
  assertEquals("value1",cache2.get(key));
  mgr.commit();
  replListener(cache2).waitForRpc();
  assertNotLocked(cache1,key);
  assertEquals("value2",cache1.get(key));
  assertEquals("value2",cache2.get(key));
  mgr.begin();
  cache1.put(key,"value3");
  assertEquals("value3",cache1.get(key));
  assertEquals("value2",cache2.get(key));
  mgr.rollback();
  assertEquals("value2",cache1.get(key));
  assertEquals("value2",cache2.get(key));
  assertNotLocked(cache1,key);
}
