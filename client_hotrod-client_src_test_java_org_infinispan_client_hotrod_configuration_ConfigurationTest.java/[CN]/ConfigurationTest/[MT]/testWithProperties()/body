{
  ConfigurationBuilder builder=new ConfigurationBuilder();
  Properties p=new Properties();
  p.setProperty(SERVER_LIST,"host1:11222;host2:11222");
  p.setProperty(ASYNC_EXECUTOR_FACTORY,"org.infinispan.client.hotrod.SomeAsyncExecutorFactory");
  p.setProperty(REQUEST_BALANCING_STRATEGY,"org.infinispan.client.hotrod.SomeRequestBalancingStrategy");
  p.setProperty(TRANSPORT_FACTORY,"org.infinispan.client.hotrod.SomeTransportfactory");
  p.setProperty(HASH_FUNCTION_PREFIX + "." + 2,"org.infinispan.client.hotrod.SomeCustomConsistentHashV2");
  p.setProperty("maxActive","100");
  p.setProperty("maxTotal","150");
  p.setProperty("maxWait","1000");
  p.setProperty("maxIdle","20");
  p.setProperty("minIdle","10");
  p.setProperty("exhaustedAction","1");
  p.setProperty("numTestsPerEvictionRun","5");
  p.setProperty("timeBetweenEvictionRunsMillis","15000");
  p.setProperty("minEvictableIdleTimeMillis","12000");
  p.setProperty("testOnBorrow","true");
  p.setProperty("testOnReturn","true");
  p.setProperty("testWhileIdle","false");
  p.setProperty(CONNECT_TIMEOUT,"100");
  p.setProperty(SO_TIMEOUT,"100");
  p.setProperty(TCP_NO_DELAY,"false");
  p.setProperty(TCP_KEEP_ALIVE,"true");
  p.setProperty(KEY_SIZE_ESTIMATE,"128");
  p.setProperty(VALUE_SIZE_ESTIMATE,"1024");
  p.setProperty(MAX_RETRIES,"0");
  p.setProperty(USE_SSL,"true");
  p.setProperty(KEY_STORE_FILE_NAME,"my-key-store.file");
  p.setProperty(KEY_STORE_PASSWORD,"my-key-store.password");
  p.setProperty(KEY_STORE_CERTIFICATE_PASSWORD,"my-key-store-certificate.password");
  p.setProperty(TRUST_STORE_FILE_NAME,"my-trust-store.file");
  p.setProperty(TRUST_STORE_PASSWORD,"my-trust-store.password");
  p.setProperty(USE_AUTH,"true");
  p.setProperty(SASL_MECHANISM,"my-sasl-mechanism");
  p.put(AUTH_CALLBACK_HANDLER,callbackHandler);
  p.setProperty(AUTH_SERVER_NAME,"my-server-name");
  p.put(AUTH_CLIENT_SUBJECT,clientSubject);
  p.setProperty(SASL_PROPERTIES_PREFIX + ".A","1");
  p.setProperty(SASL_PROPERTIES_PREFIX + ".B","2");
  p.setProperty(SASL_PROPERTIES_PREFIX + ".C","3");
  Configuration configuration=builder.withProperties(p).build();
  validateConfiguration(configuration);
  ConfigurationBuilder newBuilder=new ConfigurationBuilder();
  newBuilder.read(configuration);
  Configuration newConfiguration=newBuilder.build();
  validateConfiguration(newConfiguration);
}
