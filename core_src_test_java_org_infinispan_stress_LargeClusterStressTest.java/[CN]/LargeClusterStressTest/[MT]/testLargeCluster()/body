{
  Configuration distConfig=getDefaultClusteredCacheConfig(CacheMode.DIST_SYNC,false).clustering().stateTransfer().awaitInitialTransfer(false).build();
  Configuration replConfig=getDefaultClusteredCacheConfig(CacheMode.REPL_SYNC,false).clustering().stateTransfer().awaitInitialTransfer(false).build();
  for (int i=0; i < NUM_NODES; i++) {
    GlobalConfigurationBuilder gcb=new GlobalConfigurationBuilder();
    gcb.globalJmxStatistics().allowDuplicateDomains(true);
    gcb.transport().defaultTransport().nodeName(TestResourceTracker.getNameForIndex(i));
    BlockingThreadPoolExecutorFactory remoteExecutorFactory=new BlockingThreadPoolExecutorFactory(10,1,0,60000);
    gcb.transport().remoteCommandThreadPool().threadPoolFactory(remoteExecutorFactory);
    EmbeddedCacheManager cm=new DefaultCacheManager(gcb.build());
    registerCacheManager(cm);
    for (int j=0; j < NUM_CACHES; j++) {
      if (j % 2 == 0) {
        cm.defineConfiguration("replcache" + j,replConfig);
        Cache<Object,Object> cache=cm.getCache("replcache" + j);
        cache.put(cm.getAddress(),"bla");
      }
 else {
        cm.defineConfiguration("distcache" + j,distConfig);
        Cache<Object,Object> cache=cm.getCache("distcache" + j);
        cache.put(cm.getAddress(),"bla");
      }
    }
    log.infof("Started cache manager %s",cm.getAddress());
    TestingUtil.blockForMemberToFail(30000,cacheManagers.toArray(new EmbeddedCacheManager[0]));
  }
  for (int j=0; j < NUM_CACHES; j++) {
    waitForClusterToForm("replcache" + j);
    waitForClusterToForm("distcache" + j);
  }
  TestingUtil.extractGlobalComponent(manager(0),LocalTopologyManager.class).setRebalancingEnabled(false);
}
