{
  ConfigurationBuilder configuration=getDefaultClusteredCacheConfig(cacheMode,transactional);
  configuration.clustering().stateTransfer().fetchInMemoryState(performRehashing);
  if (lockingMode != null) {
    configuration.transaction().lockingMode(lockingMode);
  }
  configuration.clustering().hash().numOwners(numOwners);
  if (!testRetVals) {
    configuration.unsafe().unreliableReturnValues(true);
    configuration.locking().isolationLevel(IsolationLevel.REPEATABLE_READ);
  }
  if (transactional) {
    configuration.invocationBatching().enable();
    if (onePhaseCommitOptimization) {
      configuration.transaction().use1PcForAutoCommitTransactions(true);
    }
  }
  if (cacheMode.isSynchronous())   configuration.clustering().remoteTimeout(60,TimeUnit.SECONDS);
  configuration.locking().lockAcquisitionTimeout(lockTimeout,TimeUnit.SECONDS);
  configuration.clustering().l1().enabled(l1CacheEnabled);
  if (groupers) {
    configuration.clustering().hash().groups().enabled(true);
    configuration.clustering().hash().groups().withGroupers(Collections.singletonList(new KXGrouper()));
  }
  if (l1CacheEnabled)   configuration.clustering().l1().invalidationThreshold(l1Threshold);
  return configuration;
}
