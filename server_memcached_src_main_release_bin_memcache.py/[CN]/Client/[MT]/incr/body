def incr(self, key, delta=1):
    '\n        Sends a command to the server to atomically increment the value\n        for C{key} by C{delta}, or by 1 if C{delta} is unspecified.\n        Returns None if C{key} doesn\'t exist on server, otherwise it\n        returns the new value after incrementing.\n\n        Note that the value for C{key} must already exist in the memcache,\n        and it must be the string representation of an integer.\n\n        >>> mc.set("counter", "20")  # returns 1, indicating success\n        1\n        >>> mc.incr("counter")\n        21\n        >>> mc.incr("counter")\n        22\n\n        Overflow on server is not checked.  Be aware of values approaching\n        2**32.  See L{decr}.\n\n        @param delta: Integer amount to increment by (should be zero or greater).\n        @return: New value after incrementing.\n        @rtype: int\n        '
    return self._incrdecr('incr', key, delta)
