{
  final Class<?> propertyType=getPropertyType(entityType,propertyPath);
  if (Date.class.isAssignableFrom(propertyType)) {
    try {
      return dateFormat.parse(value);
    }
 catch (    ParseException e) {
      throw new IllegalArgumentException(e);
    }
  }
  if (Enum.class.isAssignableFrom(propertyType)) {
    return Enum.valueOf((Class<Enum>)propertyType,value);
  }
  if (propertyType == String.class) {
    return value;
  }
  if (propertyType == Character.class || propertyType == char.class) {
    return value.charAt(0);
  }
  if (propertyType == Double.class || propertyType == double.class) {
    return Double.valueOf(value);
  }
  if (propertyType == Float.class || propertyType == float.class) {
    return Float.valueOf(value);
  }
  if (propertyType == Long.class || propertyType == long.class) {
    return Long.valueOf(value);
  }
  if (propertyType == Integer.class || propertyType == int.class) {
    return Integer.valueOf(value);
  }
  if (propertyType == Short.class || propertyType == short.class) {
    return Short.valueOf(value);
  }
  if (propertyType == Byte.class || propertyType == byte.class) {
    return Byte.valueOf(value);
  }
  if (propertyType == Boolean.class || propertyType == boolean.class) {
    return Boolean.valueOf(value);
  }
  return value;
}
