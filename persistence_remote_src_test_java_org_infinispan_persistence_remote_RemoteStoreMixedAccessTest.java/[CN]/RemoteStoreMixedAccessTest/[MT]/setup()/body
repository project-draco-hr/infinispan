{
  ConfigurationBuilder serverBuilder=TestCacheManagerFactory.getDefaultCacheConfiguration(false);
  serverBuilder.eviction().maxEntries(100).strategy(EvictionStrategy.UNORDERED).expiration().wakeUpInterval(10L);
  serverCacheManager=TestCacheManagerFactory.createCacheManager(hotRodCacheConfiguration(serverBuilder));
  serverCache=serverCacheManager.getCache();
  hrServer=HotRodClientTestingUtil.startHotRodServer(serverCacheManager);
  ConfigurationBuilder clientBuilder=TestCacheManagerFactory.getDefaultCacheConfiguration(false);
  clientBuilder.persistence().addStore(RemoteStoreConfigurationBuilder.class).rawValues(true).addServer().host(hrServer.getHost()).port(hrServer.getPort());
  clientCacheManager=TestCacheManagerFactory.createCacheManager(clientBuilder);
  clientCache=clientCacheManager.getCache();
  org.infinispan.client.hotrod.configuration.ConfigurationBuilder rcmBuilder=new org.infinispan.client.hotrod.configuration.ConfigurationBuilder();
  rcmBuilder.addServer().host(hrServer.getHost()).port(hrServer.getPort());
  remoteCacheManager=new RemoteCacheManager(rcmBuilder.build());
  remoteCacheManager.start();
  remoteCache=remoteCacheManager.getCache();
}
