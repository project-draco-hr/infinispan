{
  ExposedByteArrayOutputStream baos=new ExposedByteArrayOutputStream(estimatedSize);
  ObjectOutput out=startObjectOutput(baos,false,estimatedSize);
  try {
    defaultMarshaller.objectToObjectStream(obj,out);
  }
 catch (  java.io.NotSerializableException nse) {
    if (log.isDebugEnabled())     log.debug("Object is not serializable",nse);
    throw new NotSerializableException(nse.getMessage(),nse.getCause());
  }
catch (  IOException ioe) {
    if (ioe.getCause() instanceof InterruptedException) {
      if (log.isTraceEnabled())       log.trace("Interrupted exception while marshalling",ioe.getCause());
      throw (InterruptedException)ioe.getCause();
    }
 else {
      log.errorMarshallingObject(ioe);
      throw ioe;
    }
  }
 finally {
    finishObjectOutput(out);
  }
  return new ByteBuffer(baos.getRawBuffer(),0,baos.size());
}
