{
  int keyHashCode=mmh.hash(key);
  if (keyHashCode == Integer.MIN_VALUE)   keyHashCode+=1;
  int hash=Math.abs(keyHashCode);
  SortedMap<Integer,InetSocketAddress> candidates=positions.tailMap(hash % hashSpace);
  if (log.isTraceEnabled()) {
    log.tracef("Found possible candidates: %s",candidates);
  }
  if (candidates.isEmpty()) {
    InetSocketAddress socketAddress=positions.get(positions.firstKey());
    if (log.isTraceEnabled()) {
      log.tracef("Over the wheel, returning first member: %s",socketAddress);
    }
    return socketAddress;
  }
 else {
    InetSocketAddress socketAddress=candidates.get(candidates.firstKey());
    if (log.isTraceEnabled()) {
      log.tracef("Found candidate: %s",socketAddress);
    }
    return socketAddress;
  }
}
