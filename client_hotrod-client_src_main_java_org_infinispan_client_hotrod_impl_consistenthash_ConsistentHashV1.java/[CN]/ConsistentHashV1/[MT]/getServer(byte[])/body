{
  int keyHashCode=hash.hash(key);
  if (keyHashCode == Integer.MIN_VALUE)   keyHashCode+=1;
  int hash=Math.abs(keyHashCode);
  SortedMap<Integer,SocketAddress> candidates=positions.tailMap(hash % hashSpace);
  if (log.isTraceEnabled()) {
    log.tracef("Found possible candidates: %s",candidates);
  }
  int index=getIndex();
  if (candidates.size() <= index) {
    int newIndex=index - candidates.size();
    SocketAddress socketAddress=getItemAtPosition(newIndex,positions);
    if (log.isTraceEnabled()) {
      log.tracef("Over the wheel, returning member: %s",socketAddress);
    }
    return socketAddress;
  }
 else {
    SocketAddress socketAddress=getItemAtPosition(index,candidates);
    if (log.isTraceEnabled()) {
      log.tracef("Found candidate: %s",socketAddress);
    }
    return socketAddress;
  }
}
