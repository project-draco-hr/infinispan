{
  for (  Address leaver : leavers) {
    List<Address> owners=oldCH.locate(ice.getKey(),replCount);
    int leaverIndex=owners.indexOf(leaver);
    if (leaverIndex > -1) {
      int numOwners=owners.size();
      int selfIndex=owners.indexOf(self);
      boolean isLeaverLast=leaverIndex == numOwners - 1;
      if ((isLeaverLast && selfIndex == numOwners - 2) || (!isLeaverLast && selfIndex == leaverIndex + 1)) {
        List<Address> newOwners=newCH.locate(ice.getKey(),replCount);
        newOwners.removeAll(owners);
        if (!newOwners.isEmpty()) {
          for (          Address no : newOwners) {
            Map<Object,InternalCacheValue> s=state.get(no);
            if (s == null) {
              s=new HashMap<Object,InternalCacheValue>();
              state.put(no,s);
            }
            s.put(ice.getKey(),ice.toInternalCacheValue());
          }
        }
      }
    }
  }
  keysHandled.add(ice.getKey());
}
