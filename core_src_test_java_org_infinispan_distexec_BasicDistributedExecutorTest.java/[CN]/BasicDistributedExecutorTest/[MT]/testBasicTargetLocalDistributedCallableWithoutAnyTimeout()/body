{
  ConfigurationBuilder config=TestCacheManagerFactory.getDefaultCacheConfiguration(false);
  config.clustering().cacheMode(CacheMode.REPL_SYNC).remoteTimeout(0L);
  EmbeddedCacheManager cacheManager=TestCacheManagerFactory.createClusteredCacheManager(config);
  EmbeddedCacheManager cacheManager1=TestCacheManagerFactory.createClusteredCacheManager(config);
  Cache<Object,Object> cache1=cacheManager.getCache();
  Cache<Object,Object> cache2=cacheManager1.getCache();
  DistributedExecutorService des=null;
  try {
    des=new DefaultExecutorService(cache1);
    Address target=cache1.getAdvancedCache().getRpcManager().getAddress();
    DistributedTaskBuilder builder=des.createDistributedTaskBuilder(new DistributedExecutorTest.SleepingSimpleCallable());
    Future<Integer> future=des.submit(target,builder.build());
    AssertJUnit.assertEquals((Integer)1,future.get());
  }
  finally {
    des.shutdown();
    TestingUtil.killCacheManagers(cacheManager,cacheManager1);
  }
}
