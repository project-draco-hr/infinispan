{
  final Future f=asyncExecutorService.submit(c);
  return new Future<X>(){
    public boolean cancel(    boolean mayInterruptIfRunning){
      return f.cancel(mayInterruptIfRunning);
    }
    public boolean isCancelled(){
      return f.isCancelled();
    }
    public boolean isDone(){
      return f.isDone();
    }
    @SuppressWarnings("unchecked") public X get() throws InterruptedException, ExecutionException {
      f.get();
      return (X)returnValue;
    }
    @SuppressWarnings("unchecked") public X get(    long timeout,    TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
      f.get(timeout,unit);
      return (X)returnValue;
    }
  }
;
}
