{
  Cache c1=cache(0,cacheName());
  Cache c2=cache(1,cacheName());
  FileLookup fileLookup=FileLookupFactory.newInstance();
  InputStream is=fileLookup.lookupFile("mapreduce/macbeth.txt",getClass().getClassLoader());
  BufferedReader br=new BufferedReader(new InputStreamReader(is));
  String line=null;
  int lineCount=0;
  while ((line=br.readLine()) != null) {
    if (Math.random() > 0.5) {
      c1.put(String.valueOf(lineCount),line);
    }
 else {
      c2.put(String.valueOf(lineCount),line);
    }
    lineCount++;
  }
  MapReduceTask<String,String,String,Integer> task=createMapReduceTask(c1);
  task.mappedWith(mapper).reducedWith(reducer);
  if (useCombiner)   task.combinedWith(reducer);
  if (keys != null && keys.length > 0) {
    task.onKeys(keys);
  }
  return task;
}
