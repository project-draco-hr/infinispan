{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    String attrName=reader.getAttributeLocalName(i);
    Attribute attribute=Attribute.forName(attrName);
switch (attribute) {
case OPEN_FILES_LIMIT:
      builder.openFilesLimit(Integer.parseInt(value));
    break;
case COMPACTION_THRESHOLD:
  builder.compactionThreshold(Double.parseDouble(value));
break;
default :
Parser70.parseStoreAttribute(reader,i,builder);
break;
}
}
while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
Element element=Element.forName(reader.getLocalName());
switch (element) {
case DATA:
{
this.parseData(reader,builder);
break;
}
case INDEX:
{
this.parseIndex(reader,builder);
break;
}
default :
{
Parser70.parseStoreElement(reader,builder);
}
}
}
}
