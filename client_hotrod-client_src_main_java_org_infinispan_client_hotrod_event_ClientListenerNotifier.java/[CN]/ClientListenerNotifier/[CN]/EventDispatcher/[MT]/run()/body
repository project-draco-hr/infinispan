{
  while (true) {
    ClientEvent clientEvent=null;
    try {
      clientEvent=codec.readEvent(transport,op.listenerId,marshaller);
      invokeClientEvent(clientEvent);
      clientEvent=null;
    }
 catch (    TransportException e) {
      if (e.getCause() instanceof ClosedChannelException) {
        log.debug("Channel closed, exiting event reader thread");
        return;
      }
 else       if (clientEvent != null) {
        log.unexpectedErrorConsumingEvent(clientEvent,e);
      }
 else {
        log.unrecoverableErrorReadingEvent(e,transport.getRemoteSocketAddress());
        return;
      }
    }
catch (    CancelledKeyException e) {
      log.debug("Key cancelled, most likely channel closed, exiting event reader thread");
      return;
    }
catch (    Throwable t) {
      if (clientEvent != null)       log.unexpectedErrorConsumingEvent(clientEvent,t);
 else       log.unableToReadEventFromServer(t,transport.getRemoteSocketAddress());
    }
  }
}
