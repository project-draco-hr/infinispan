{
  final String groupName=command.getGroupName();
  final boolean isOwner=groupManager.isOwner(groupName);
  updateTopologyId(command);
  final int commandTopologyId=command.getTopologyId();
  if (ctx.isOriginLocal()) {
    Object localResult;
    try {
      localResult=ctx.forkInvocationSync(command);
      if (isOwner && currentTopologyId() != commandTopologyId) {
        return retryVisitGetKeysInGroupCommand(ctx,command,commandTopologyId);
      }
    }
 catch (    CacheException e) {
      Throwable ce=e;
      while (ce instanceof RemoteException) {
        ce=ce.getCause();
      }
      if (!(ce instanceof OutdatedTopologyException) && !(ce instanceof SuspectException))       throw e;
      return retryVisitGetKeysInGroupCommand(ctx,command,commandTopologyId);
    }
    return ctx.shortCircuit(localResult);
  }
 else {
    Object result=ctx.forkInvocationSync(command);
    if (isOwner && currentTopologyId() != commandTopologyId) {
      throw new OutdatedTopologyException("Cache topology changed while the command was executing: expected " + commandTopologyId + ", got "+ currentTopologyId());
    }
    return ctx.shortCircuit(result);
  }
}
