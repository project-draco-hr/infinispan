{
  if (!dch1.getHashFunction().equals(dch2.getHashFunction())) {
    throw new IllegalArgumentException("The consistent hash objects must have the same hash function");
  }
  if (dch1.getNumSegments() != dch2.getNumSegments()) {
    throw new IllegalArgumentException("The consistent hash objects must have the same number of segments");
  }
  if (dch1.getNumOwners() != dch2.getNumOwners()) {
    throw new IllegalArgumentException("The consistent hash objects must have the same number of owners");
  }
  List<Address> members=new ArrayList<Address>(dch1.getMembers());
  List<Address>[] segmentOwners=extractSegmentOwners(dch1);
  mergeLists(members,dch2.getMembers());
  for (int i=0; i < segmentOwners.length; i++) {
    mergeLists(segmentOwners[i],dch2.locateOwnersForSegment(i));
  }
  return new DefaultConsistentHash(dch1.getHashFunction(),dch1.getNumSegments(),dch1.getNumOwners(),members,segmentOwners);
}
