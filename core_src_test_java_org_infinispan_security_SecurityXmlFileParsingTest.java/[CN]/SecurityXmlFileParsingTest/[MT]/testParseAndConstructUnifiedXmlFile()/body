{
  Subject.doAs(ADMIN,new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromXml("configs/security.xml",true)){
        @Override public void call(){
          GlobalConfiguration g=cm.getCacheManagerConfiguration();
          assertTrue(g.security().authorization().enabled());
          assertEquals(IdentityRoleMapper.class,g.security().authorization().principalRoleMapper().getClass());
          Map<String,Role> globalRoles=g.security().authorization().roles();
          assertTrue(globalRoles.containsKey("supervisor"));
          assertTrue(globalRoles.get("supervisor").getPermissions().containsAll(Arrays.asList(AuthorizationPermission.READ,AuthorizationPermission.WRITE,AuthorizationPermission.EXEC)));
          Configuration c=cm.getCache("secured").getCacheConfiguration();
          assertTrue(c.security().authorization().enabled());
          c.security().authorization().roles().containsAll(Arrays.asList("admin","reader","writer"));
        }
      }
);
      return null;
    }
  }
);
}
