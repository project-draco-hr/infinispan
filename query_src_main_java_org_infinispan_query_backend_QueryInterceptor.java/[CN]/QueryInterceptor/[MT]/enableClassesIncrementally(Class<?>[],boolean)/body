{
  ArrayList<Class<?>> toAdd=null;
  for (  Class<?> type : classes) {
    if (!knownClasses.containsKey(type)) {
      if (toAdd == null)       toAdd=new ArrayList<Class<?>>(classes.length);
      toAdd.add(type);
    }
  }
  if (toAdd == null) {
    return;
  }
  if (locked) {
    Set<Class<?>> existingClasses=knownClasses.keySet();
    int index=existingClasses.size();
    Class[] all=existingClasses.toArray(new Class[existingClasses.size() + toAdd.size()]);
    for (    Class<?> toAddClass : toAdd) {
      all[index++]=toAddClass;
    }
    searchFactory.addClasses(all);
    for (    Class<?> type : toAdd) {
      if (searchFactory.getIndexBindingForEntity(type) != null) {
        knownClasses.put(type,Boolean.TRUE);
      }
 else {
        knownClasses.put(type,Boolean.FALSE);
      }
    }
  }
 else {
    mutating.lock();
    try {
      enableClassesIncrementally(classes,true);
    }
  finally {
      mutating.unlock();
    }
  }
}
