{
  String cacheName=cmd.getCacheName();
  ComponentRegistry cr=gcr.getNamedComponentRegistry(cacheName);
  if (cr == null) {
    if (embeddedCacheManager.getGlobalConfiguration().isStrictPeerToPeer()) {
      if (isDefined(cacheName)) {
        log.info("Will try and wait for the cache to start");
        long giveupTime=System.currentTimeMillis() + 30000;
        while (cr == null && System.currentTimeMillis() < giveupTime) {
          Thread.sleep(100);
          cr=gcr.getNamedComponentRegistry(cacheName);
        }
      }
 else {
        log.info("Cache %s is not defined.  No point in waiting.",cacheName);
      }
    }
    if (cr == null) {
      if (log.isInfoEnabled())       log.info("Cache named %s does not exist on this cache manager!",cacheName);
      return new ExceptionResponse(new NamedCacheNotFoundException(cacheName));
    }
  }
  Configuration localConfig=cr.getComponent(Configuration.class);
  if (!cr.getStatus().allowInvocations()) {
    long giveupTime=System.currentTimeMillis() + localConfig.getStateRetrievalTimeout();
    while (cr.getStatus().startingUp() && System.currentTimeMillis() < giveupTime)     Thread.sleep(100);
    if (!cr.getStatus().allowInvocations()) {
      log.warn("Cache named [%s] exists but isn't in a state to handle invocations.  Its state is %s.",cacheName,cr.getStatus());
      return RequestIgnoredResponse.INSTANCE;
    }
  }
  CommandsFactory commandsFactory=cr.getLocalComponent(CommandsFactory.class);
  commandsFactory.initializeReplicableCommand(cmd,true);
  try {
    log.trace("Calling perform() on %s",cmd);
    Object retval=cmd.perform(null);
    return cr.getComponent(ResponseGenerator.class).getResponse(cmd,retval);
  }
 catch (  Exception e) {
    return new ExceptionResponse(e);
  }
}
