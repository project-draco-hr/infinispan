{
  StorageReply reply;
  try {
    if (params.expiry == 0) {
      reply=put(params.key,params.flags,data);
    }
 else {
      if (params.expiry > 60 * 60 * 24* 30) {
        long future=TimeUnit.SECONDS.toMillis(params.expiry);
        long expiry=future - System.currentTimeMillis();
        if (expiry > 0) {
          reply=put(params.key,params.flags,data,expiry);
        }
 else {
          StringBuilder sb=new StringBuilder();
          sb.append("Given expiry is bigger than 30 days, hence is treated as Unix time, ").append("but this time is in the past: ").append(future).append(", date: ").append(new Date(future));
          throw new CacheException(sb.toString());
        }
      }
 else {
        long expiry=TimeUnit.SECONDS.toMillis(params.expiry);
        reply=put(params.key,params.flags,data,expiry);
      }
    }
  }
 catch (  Exception e) {
    log.error("Unexpected exception performing command",e);
    reply=StorageReply.NOT_STORED;
  }
  ch.write(wrappedBuffer(wrappedBuffer(reply.toString().getBytes()),wrappedBuffer(CRLF)));
  return null;
}
