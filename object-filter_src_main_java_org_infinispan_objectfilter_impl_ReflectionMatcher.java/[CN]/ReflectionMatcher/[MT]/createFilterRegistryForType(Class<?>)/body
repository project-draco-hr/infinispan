{
  return new FilterRegistry<String>(new BETreeMaker.AttributePathTranslator<String>(){
    @Override public List<String> translatePath(    List<String> path){
      return path;
    }
    @Override public boolean isRepeated(    List<String> path){
      ReflectionHelper.PropertyAccessor a=ReflectionHelper.getAccessor(clazz,path.get(0));
      if (a.isMultiple()) {
        return true;
      }
      for (int i=1; i < path.size(); i++) {
        a=a.getAccessor(path.get(i));
        if (a.isMultiple()) {
          return true;
        }
      }
      return false;
    }
  }
,clazz.getCanonicalName());
}
