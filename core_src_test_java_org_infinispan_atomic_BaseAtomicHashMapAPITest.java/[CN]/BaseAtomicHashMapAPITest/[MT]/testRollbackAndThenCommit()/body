{
  final Cache<String,Object> cache1=cache(0,"atomic");
  final Cache<String,Object> cache2=cache(1,"atomic");
  assertSize(cache1,0);
  assertSize(cache2,0);
  final Map<String,String> map1=createAtomicMap(cache1,"testRollbackAndThenCommit",true);
  tm(0,"atomic").begin();
  map1.put("k1","v");
  map1.put("k2","v2");
  tm(0,"atomic").rollback();
  Map<Object,Object> expectedMap=Collections.emptyMap();
  Map<Object,Object> map2=createAtomicMap(cache2,"testRollbackAndThenCommit",true);
  assertMap(expectedMap,map2);
  assertMap(expectedMap,map1);
  tm(0,"atomic").begin();
  map1.put("k3","v3");
  map1.put("k4","v4");
  tm(0,"atomic").commit();
  expectedMap=createMap("k3","v3","k4","v4");
  assertMap(expectedMap,map2);
  assertMap(expectedMap,map1);
}
