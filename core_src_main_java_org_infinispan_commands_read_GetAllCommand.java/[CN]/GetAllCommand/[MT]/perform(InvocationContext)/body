{
  Map<Object,Object> map=createMap();
  for (  Object key : keys) {
    CacheEntry entry=ctx.lookupEntry(key);
    if (entry == null) {
      if (trace) {
        log.tracef("Entry for key %s not found",key);
      }
      if (ch == null || ch.isKeyLocalToNode(localAddress,key)) {
        map.put(key,null);
      }
      continue;
    }
    if (entry.isNull()) {
      if (trace) {
        log.tracef("Entry for key %s is null in current context",key);
      }
      map.put(key,null);
      continue;
    }
    if (entry.isRemoved()) {
      if (trace) {
        log.tracef("Entry for key %s has been deleted and is of type %s",key,entry.getClass().getSimpleName());
      }
      map.put(key,null);
      continue;
    }
    if (returnEntries) {
      CacheEntry copy;
      if (ctx.isOriginLocal()) {
        copy=entryFactory.copy(entry);
      }
 else {
        copy=entry;
      }
      if (trace) {
        log.tracef("Found entry %s -> %s",key,entry);
        log.tracef("Returning copied entry %s",copy);
      }
      map.put(key,copy);
    }
 else {
      Object value=entry.getValue();
      if (trace) {
        log.tracef("Found %s -> %s",key,toStr(value));
      }
      map.put(key,value);
    }
  }
  return map;
}
