{
  addClusterEnabledCacheManager(getGlobalConfigurationBuilder("r1"),getConfigurationBuilder(awaitInitialTransfer));
  addClusterEnabledCacheManager(getGlobalConfigurationBuilder("r1"),getConfigurationBuilder(awaitInitialTransfer));
  waitForClusterToForm();
  MBeanServer mBeanServer=PerThreadMBeanServerLookup.getThreadMBeanServer();
  String domain0=manager(1).getCacheManagerConfiguration().globalJmxStatistics().domain();
  ObjectName ltmName0=TestingUtil.getCacheManagerObjectName(domain0,"DefaultCacheManager","LocalTopologyManager");
  String domain1=manager(1).getCacheManagerConfiguration().globalJmxStatistics().domain();
  ObjectName ltmName1=TestingUtil.getCacheManagerObjectName(domain1,"DefaultCacheManager","LocalTopologyManager");
  StateTransferManager stm0=TestingUtil.extractComponent(cache(0),StateTransferManager.class);
  assertEquals(Arrays.asList(address(0),address(1)),stm0.getCacheTopology().getCurrentCH().getMembers());
  assertNull(stm0.getCacheTopology().getPendingCH());
  assertTrue(mBeanServer.isRegistered(ltmName0));
  assertTrue((Boolean)mBeanServer.getAttribute(ltmName0,REBALANCING_ENABLED));
  mBeanServer.setAttribute(ltmName0,new Attribute(REBALANCING_ENABLED,false));
  assertFalse((Boolean)mBeanServer.getAttribute(ltmName0,REBALANCING_ENABLED));
  log.debugf("Starting 2 new nodes");
  addClusterEnabledCacheManager(getGlobalConfigurationBuilder("r2"),getConfigurationBuilder(awaitInitialTransfer));
  addClusterEnabledCacheManager(getGlobalConfigurationBuilder("r2"),getConfigurationBuilder(awaitInitialTransfer));
  cache(2);
  cache(3);
  ClusterTopologyManager ctm2=TestingUtil.extractGlobalComponent(manager(2),ClusterTopologyManager.class);
  assertFalse(ctm2.isRebalancingEnabled());
  ClusterTopologyManager ctm3=TestingUtil.extractGlobalComponent(manager(3),ClusterTopologyManager.class);
  assertFalse(ctm3.isRebalancingEnabled());
  assertEquals(RebalancingStatus.SUSPENDED.toString(),stm0.getRebalancingStatus());
  Thread.sleep(1000);
  assertFalse((Boolean)mBeanServer.getAttribute(ltmName1,REBALANCING_ENABLED));
  assertNull(stm0.getCacheTopology().getPendingCH());
  assertEquals(Arrays.asList(address(0),address(1)),stm0.getCacheTopology().getCurrentCH().getMembers());
  log.debugf("Rebalancing with nodes %s %s %s %s",address(0),address(1),address(2),address(3));
  mBeanServer.setAttribute(ltmName0,new Attribute(REBALANCING_ENABLED,true));
  assertTrue((Boolean)mBeanServer.getAttribute(ltmName0,REBALANCING_ENABLED));
  mBeanServer.setAttribute(ltmName0,new Attribute(REBALANCING_ENABLED,true));
  TestingUtil.waitForRehashToComplete(cache(0),cache(1),cache(2),cache(3));
  assertNull(stm0.getCacheTopology().getPendingCH());
  assertEquals(RebalancingStatus.COMPLETE.toString(),stm0.getRebalancingStatus());
  ConsistentHash ch=stm0.getCacheTopology().getCurrentCH();
  assertEquals(Arrays.asList(address(0),address(1),address(2),address(3)),ch.getMembers());
  for (int i=0; i < ch.getNumSegments(); i++) {
    assertEquals(2,ch.locateOwnersForSegment(i).size());
  }
  mBeanServer.setAttribute(ltmName1,new Attribute(REBALANCING_ENABLED,false));
  assertFalse((Boolean)mBeanServer.getAttribute(ltmName0,REBALANCING_ENABLED));
  assertFalse((Boolean)mBeanServer.getAttribute(ltmName1,REBALANCING_ENABLED));
  mBeanServer.setAttribute(ltmName1,new Attribute(REBALANCING_ENABLED,false));
  log.debugf("Stopping nodes %s %s",address(0),address(1));
  killCacheManagers(manager(0),manager(1));
  Thread.sleep(1000);
  StateTransferManager stm2=TestingUtil.extractComponent(cache(2),StateTransferManager.class);
  assertNull(stm2.getCacheTopology().getPendingCH());
  ch=stm2.getCacheTopology().getCurrentCH();
  assertEquals(Arrays.asList(address(2),address(3)),ch.getMembers());
  for (int i=0; i < ch.getNumSegments(); i++) {
    assertEquals(1,ch.locateOwnersForSegment(i).size());
  }
  assertEquals(RebalancingStatus.SUSPENDED.toString(),stm2.getRebalancingStatus());
  log.debugf("Rebalancing with nodes %s %s",address(2),address(3));
  String domain2=manager(2).getCacheManagerConfiguration().globalJmxStatistics().domain();
  ObjectName ltmName2=TestingUtil.getCacheManagerObjectName(domain2,"DefaultCacheManager","LocalTopologyManager");
  String domain3=manager(2).getCacheManagerConfiguration().globalJmxStatistics().domain();
  ObjectName ltmName3=TestingUtil.getCacheManagerObjectName(domain3,"DefaultCacheManager","LocalTopologyManager");
  mBeanServer.setAttribute(ltmName2,new Attribute(REBALANCING_ENABLED,true));
  assertTrue((Boolean)mBeanServer.getAttribute(ltmName2,REBALANCING_ENABLED));
  assertTrue((Boolean)mBeanServer.getAttribute(ltmName3,REBALANCING_ENABLED));
  TestingUtil.waitForRehashToComplete(cache(2),cache(3));
  assertEquals(RebalancingStatus.COMPLETE.toString(),stm2.getRebalancingStatus());
  assertNull(stm2.getCacheTopology().getPendingCH());
  ch=stm2.getCacheTopology().getCurrentCH();
  assertEquals(Arrays.asList(address(2),address(3)),ch.getMembers());
  for (int i=0; i < ch.getNumSegments(); i++) {
    assertEquals(2,ch.locateOwnersForSegment(i).size());
  }
}
