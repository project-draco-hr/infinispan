{
  if (newMembers.equals(baseCH.getMembers()))   return baseCH;
  int numSegments=baseCH.getNumSegments();
  int numOwners=baseCH.getNumOwners();
  HashSet<Address> leavers=new HashSet<Address>(baseCH.getMembers());
  leavers.removeAll(newMembers);
  DefaultConsistentHash rebalancedCH=create(baseCH.getHashFunction(),numOwners,numSegments,newMembers);
  List<Address>[] newSegmentOwners=new List[numSegments];
  for (int i=0; i < numSegments; i++) {
    List<Address> owners=new ArrayList<Address>(baseCH.locateOwnersForSegment(i));
    owners.removeAll(leavers);
    if (!owners.isEmpty()) {
      newSegmentOwners[i]=owners;
    }
 else {
      newSegmentOwners[i]=rebalancedCH.locateOwnersForSegment(i);
    }
  }
  return new DefaultConsistentHash(baseCH.getHashFunction(),numSegments,numOwners,newMembers,newSegmentOwners);
}
