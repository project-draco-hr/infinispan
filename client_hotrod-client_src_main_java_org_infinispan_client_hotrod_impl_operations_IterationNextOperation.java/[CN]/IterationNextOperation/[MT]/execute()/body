{
  HeaderParams params=writeHeader(transport,ITERATION_NEXT_REQUEST);
  transport.writeString(iterationId);
  transport.flush();
  short status=readHeaderAndValidate(transport,params);
  byte[] finishedSegments=transport.readArray();
  int entriesSize=transport.readVInt();
  Map.Entry<byte[],Object[]>[] entries=new Map.Entry[entriesSize];
  if (entriesSize > 0) {
    int projectionsSize=transport.readVInt();
    for (int i=0; i < entriesSize; i++) {
      byte[] key=transport.readArray();
      Object[] projections=new Object[projectionsSize];
      for (int j=0; j < projectionsSize; j++) {
        projections[j]=transport.readArray();
      }
      entries[i]=new SimpleEntry<>(key,projections);
    }
  }
  return new IterationNextResponse(status,finishedSegments,entries);
}
