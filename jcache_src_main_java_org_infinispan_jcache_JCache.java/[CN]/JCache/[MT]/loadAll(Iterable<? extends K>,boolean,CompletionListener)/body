{
  checkStarted();
  if (keys == null)   throw new NullPointerException("Keys is null");
  if (cacheLoader == null)   return;
  List<K> keysToLoad=new ArrayList<K>();
  for (  K key : keys) {
    if (key == null) {
      setListenerException(listener,new NullPointerException("Key cannot be null"));
      return;
    }
    if (!skipCacheLoadCache.containsKey(key))     keysToLoad.add(key);
  }
  try {
    Map<? super K,? super V> loaded=cacheLoader.loadAll(keysToLoad);
    NotifyingFuture<Void> future=cache.putAllAsync((Map<? extends K,? extends V>)loaded);
    future.get();
    listener.onCompletion();
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
    listener.onException(e);
  }
catch (  ExecutionException e) {
    setListenerException(listener,e.getCause());
  }
catch (  Throwable t) {
    setListenerException(listener,t);
  }
}
