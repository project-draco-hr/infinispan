{
  Transport transport=getTransport(key,true);
  int retryCount=0;
  do {
    try {
      short status=sendKeyOperation(key,transport,GET_WITH_VERSION,flags,GET_WITH_VERSION_RESPONSE);
      if (status == KEY_DOES_NOT_EXIST_STATUS) {
        return null;
      }
      if (status == NO_ERROR_STATUS) {
        long version=transport.readLong();
        if (log.isTraceEnabled()) {
          log.trace("Received version: " + version);
        }
        byte[] value=transport.readArray();
        return new BinaryVersionedValue(version,value);
      }
    }
 catch (    TransportException te) {
      logErrorAndThrowExceptionIfNeeded(retryCount,te);
    }
 finally {
      releaseTransport(transport);
    }
    if (shouldRetry(retryCount)) {
      transport=getTransport(key,false);
    }
    retryCount++;
  }
 while (shouldRetry(retryCount));
  throw new IllegalStateException("We should not reach here!");
}
