{
  StringBuilder sb=new StringBuilder();
  sb.append("<h2>Infinispan configuration options</h2><br/>");
  sb.append("<UL>");
  List<Class<?>> configBeans;
  try {
    configBeans=getConfigBeans();
    TreeNode root=tree(configBeans);
    sb.append("<div class=\"" + "source" + "\"><pre>");
    sb.append(root.pp(""));
    sb.append("</pre></div>");
    for (    Class<?> clazz : configBeans) {
      ConfigurationElement ces[]=null;
      ConfigurationElements configurationElements=clazz.getAnnotation(ConfigurationElements.class);
      ConfigurationElement configurationElement=clazz.getAnnotation(ConfigurationElement.class);
      if (configurationElement != null && configurationElements == null) {
        ces=new ConfigurationElement[]{configurationElement};
      }
      if (configurationElements != null && configurationElement == null) {
        ces=configurationElements.elements();
      }
      if (ces != null) {
        for (        ConfigurationElement ce : ces) {
          boolean createdAttributes=false;
          boolean createdProperties=false;
          sb.append("\n<a name=\"").append("ce_" + ce.parent() + "_"+ ce.name()+ "\">"+ "</a>");
          sb.append("<div class=\"section\"><h3><a name=\"" + ce.name() + "\"></a>"+ ce.name()+ "</h3>");
          sb.append("\n<p>");
          if (ce.description().length() > 0) {
            sb.append(ce.description());
          }
 else {
            sb.append("todo");
          }
          TreeNode n=findNode(root,ce.name(),ce.parent());
          sb.append(" Parent element is " + "<a href=\"").append("#ce_" + n.parent.parent.name + "_"+ n.parent.name+ "\">"+ "&lt;"+ ce.parent()+ "&gt;"+ "</a>.");
          if (n != null && !n.children.isEmpty()) {
            sb.append(" Child elements are ");
            int childCount=n.children.size();
            int count=1;
            for (            TreeNode tn : n.children) {
              sb.append("<a href=\"").append("#ce_" + tn.parent.name + "_"+ tn.name+ "\">"+ "&lt;"+ tn.name+ "&gt;"+ "</a>");
              if (count < childCount) {
                sb.append(",");
              }
 else {
                sb.append(".");
              }
              count++;
            }
            sb.append("\n");
          }
          sb.append("</p>");
          for (          Method m : clazz.getMethods()) {
            ConfigurationAttribute a=m.getAnnotation(ConfigurationAttribute.class);
            boolean childElement=a != null && a.containingElement().equals(ce.name());
            if (childElement && !createdAttributes) {
              sb.append("<table class=\"bodyTable\"> ");
              sb.append("<tr class=\"a\"><th>Attribute</th><th>Type</th><th>Default</th><th>Description</th></tr>\n");
              createdAttributes=true;
            }
            if (childElement) {
              sb.append("<tr class=\"b\">");
              sb.append("<td>").append("<code>" + a.name() + "</code>").append("</td>\n");
              if (a.allowedValues().length() > 0) {
                sb.append("<td>").append("<code>" + a.allowedValues() + "</code>").append("</td>\n");
              }
 else               if (isSetterMethod(m)) {
                sb.append("<td>").append("<code>" + m.getParameterTypes()[0].getSimpleName() + "</code>").append("</td>\n");
              }
              if (a.defaultValue().length() > 0) {
                sb.append("<td>").append(a.defaultValue()).append("</td>\n");
              }
 else {
                try {
                  Object matchingFieldValue=matchingFieldValue(m);
                  sb.append("<td>").append(matchingFieldValue).append("</td>\n");
                }
 catch (                Exception e) {
                  sb.append("<td>").append("N/A").append("</td>\n");
                }
              }
              if (a.description().length() > 0)               sb.append("<td>").append(a.description()).append("</td>\n");
 else               sb.append("<td>").append("todo").append("</td>\n");
              sb.append("</tr>\n");
            }
          }
          if (createdAttributes) {
            sb.append("</table></div>");
          }
          for (          Method m : clazz.getMethods()) {
            ConfigurationProperty[] cprops=null;
            ConfigurationProperties cp=m.getAnnotation(ConfigurationProperties.class);
            ConfigurationProperty p=null;
            if (cp != null) {
              cprops=cp.elements();
            }
 else {
              p=m.getAnnotation(ConfigurationProperty.class);
              if (p != null) {
                cprops=new ConfigurationProperty[]{p};
              }
            }
            if (cprops != null) {
              for (              ConfigurationProperty c : cprops) {
                boolean child=c.parentElement().equals(ce.name());
                if (child && !createdProperties) {
                  sb.append("\n<table class=\"bodyTable\"> ");
                  sb.append("<tr class=\"a\"><th>Property</th><th>Description</th></tr>\n");
                  createdProperties=true;
                }
                if (child) {
                  sb.append("<tr class=\"b\">");
                  sb.append("<td>").append(c.name()).append("</td>\n");
                  if (c.description().length() > 0)                   sb.append("<td>").append(c.description()).append("</td>\n");
 else                   sb.append("<td>").append("todo").append("</td>\n");
                  sb.append("</tr>\n");
                }
              }
            }
          }
          if (createdProperties) {
            sb.append("</table></div>");
          }
        }
      }
    }
  }
 catch (  Exception e) {
  }
  return sb.toString();
}
