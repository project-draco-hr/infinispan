{
  try {
    for (    InternalCacheEntry ice : dataContainer) {
      Object key=ice.getKey();
      int segmentId=readCh.getSegment(key);
      if (segments.contains(segmentId)) {
        sendEntry(ice,segmentId);
      }
    }
    AdvancedCacheLoader stProvider=persistenceManager.getStateTransferProvider();
    if (stProvider != null) {
      try {
        CollectionKeyFilter filter=new CollectionKeyFilter(new ReadOnlyDataContainerBackedKeySet(dataContainer));
        AdvancedCacheLoader.CacheLoaderTask task=new AdvancedCacheLoader.CacheLoaderTask(){
          @Override public void processEntry(          MarshalledEntry me,          AdvancedCacheLoader.TaskContext taskContext) throws InterruptedException {
            int segmentId=readCh.getSegment(me.getKey());
            if (segments.contains(segmentId)) {
              try {
                InternalCacheEntry icv=entryFactory.create(me.getKey(),me.getValue(),me.getMetadata());
                sendEntry(icv,segmentId);
              }
 catch (              CacheException e) {
                log.failedLoadingValueFromCacheStore(me.getKey(),e);
              }
            }
          }
        }
;
        stProvider.process(filter,task,new WithinThreadExecutor(),true,true);
      }
 catch (      CacheException e) {
        log.failedLoadingKeysFromCacheStore(e);
      }
    }
    sendEntries(true);
  }
 catch (  Throwable t) {
    if (!runnableFuture.isCancelled()) {
      log.error("Failed to execute outbound transfer",t);
    }
  }
  if (trace) {
    log.tracef("Outbound transfer of segments %s of cache %s to node %s is complete",segments,cacheName,destination);
  }
}
