{
  Cache<Integer,String> cache=cc.getCache();
  Set<Integer> keys;
  Map dataIn=new HashMap();
  dataIn.put(1,v(m,1));
  dataIn.put(2,v(m,2));
  final long startTime=now();
  final long lifespan=EXPIRATION_TIMEOUT;
  cache.putAll(dataIn,lifespan,TimeUnit.MILLISECONDS);
  cache.getAdvancedCache().getTransactionManager().begin();
  try {
    Map txDataIn=new HashMap();
    txDataIn.put(3,v(m,3));
    Map allEntriesIn=new HashMap(dataIn);
    allEntriesIn.putAll(txDataIn);
    cache.putAll(txDataIn);
    while (true) {
      keys=new HashSet<>(cache.keySet());
      if (moreThanDurationElapsed(startTime,lifespan))       break;
      assertEquals(allEntriesIn.keySet(),keys);
      Thread.sleep(100);
    }
    while (!moreThanDurationElapsed(startTime,lifespan + EVICTION_CHECK_TIMEOUT)) {
      keys=cache.keySet();
      if (keys.size() == 1)       break;
    }
  }
  finally {
    cache.getAdvancedCache().getTransactionManager().commit();
  }
  assertEquals(1,keys.size());
}
