{
  Cache<Integer,String> cache=cm.getCache();
  Collection<String> values;
  Map<Integer,String> dataIn=new HashMap<>();
  dataIn.put(1,v(m,1));
  dataIn.put(2,v(m,2));
  Collection<String> valuesIn=new ArrayList<>(dataIn.values());
  final long startTime=now();
  final long lifespan=EXPIRATION_TIMEOUT;
  cache.putAll(dataIn,lifespan,TimeUnit.MILLISECONDS);
  while (true) {
    values=new ArrayList<>(cache.values());
    if (moreThanDurationElapsed(startTime,lifespan))     break;
    assertEquals(valuesIn,values);
    Thread.sleep(100);
  }
  while (!moreThanDurationElapsed(startTime,lifespan + EVICTION_CHECK_TIMEOUT)) {
    values=cache.values();
    if (values.size() == 0)     break;
  }
  assertEquals(0,values.size());
}
