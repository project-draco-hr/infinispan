{
  Object returnValue=ctx.forkInvocationSync(command);
  if (!isStoreEnabled(command) || ctx.isInTxScope())   return ctx.shortCircuit(returnValue);
  Param<PersistenceMode> persistMode=command.getParams().get(PersistenceMode.ID);
switch (persistMode.get()) {
case PERSIST:
    Map<Object,Object> map=command.getEntries();
  int storedCount=0;
for (Object key : map.keySet()) {
  CacheEntry entry=ctx.lookupEntry(key);
  if (entry != null) {
    if (entry.isRemoved()) {
      boolean resp=persistenceManager.deleteFromAllStores(key,BOTH);
      if (trace)       getLog().tracef("Removed entry under key %s and got response %s from CacheStore",key,resp);
    }
 else     if (entry.isChanged() && isProperWriter(ctx,command,key)) {
      storeEntry(ctx,key,command);
      storedCount++;
    }
  }
}
if (getStatisticsEnabled()) cacheStores.getAndAdd(storedCount);
case SKIP:
log.trace("Skipping cache store since persistence mode parameter is SKIP");
}
return ctx.shortCircuit(returnValue);
}
