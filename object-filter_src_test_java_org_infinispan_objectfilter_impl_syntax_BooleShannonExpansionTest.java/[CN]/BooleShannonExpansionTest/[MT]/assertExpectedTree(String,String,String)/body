{
  FilterParsingResult<Class<?>> parsingResult=parser.parse(jpaQuery);
  BooleanExpr expr=booleanFilterNormalizer.normalize(parsingResult.getWhereClause());
  BooleShannonExpansion booleShannonExpansion=new BooleShannonExpansion(3,new BooleShannonExpansion.IndexedFieldProvider(){
    @Override public boolean isIndexed(    String[] propertyPath){
      String last=propertyPath[propertyPath.length - 1];
      return !"number".equals(last) && !"license".equals(last);
    }
    @Override public boolean isStored(    String[] propertyPath){
      return isIndexed(propertyPath);
    }
  }
);
  expr=booleShannonExpansion.expand(expr);
  if (expectedExprStr != null) {
    assertEquals(expectedExprStr,expr.toString());
  }
  if (expectedJpa != null) {
    String jpaOut=JPATreePrinter.printTree(parsingResult.getTargetEntityName(),null,expr,parsingResult.getSortFields());
    assertEquals(expectedJpa,jpaOut);
  }
}
