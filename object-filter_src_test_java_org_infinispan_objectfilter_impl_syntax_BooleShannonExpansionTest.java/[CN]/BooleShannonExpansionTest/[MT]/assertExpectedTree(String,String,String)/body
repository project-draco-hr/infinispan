{
  FilterParsingResult<Class<?>> parsingResult=queryParser.parseQuery(jpaQuery,FilterProcessingChain.build(entityNamesResolver,propertyHelper,null));
  BooleanExpr expr=booleanFilterNormalizer.normalize(parsingResult.getWhereClause());
  BooleShannonExpansion booleShannonExpansion=new BooleShannonExpansion(3,new BooleShannonExpansion.IndexedFieldProvider(){
    @Override public boolean isIndexed(    List<String> propertyPath){
      String last=propertyPath.get(propertyPath.size() - 1);
      return !last.equals("number") && !last.equals("license");
    }
    @Override public boolean isStored(    List<String> propertyPath){
      return isIndexed(propertyPath);
    }
  }
);
  expr=booleShannonExpansion.expand(expr);
  String jpaOut=JPATreePrinter.printTree(parsingResult.getTargetEntityName(),null,expr,parsingResult.getSortFields());
  assertEquals(expectedExprStr,expr.toString());
  assertEquals(expectedJpa,jpaOut);
}
