{
  moveCacheToState(ComponentStatus.INITIALIZING);
  asyncExecutor.execute(new Runnable(){
    public void run(){
      try {
        URL resource=getClass().getClassLoader().getResource(cacheConfigFile);
        if (resource == null)         resource=new URL(cacheConfigFile);
        if (cache == null) {
          cache=new DefaultCacheManager(resource.openStream()).getCache();
        }
 else {
          cache.start();
        }
        configFileName.setText(resource.toString());
        configFileName.repaint();
        try {
          configFileContents.setText(readContents(resource.openStream()));
          configFileContents.setEditable(false);
        }
 catch (        Exception e) {
          log.warn("Unable to open config file [" + cacheConfigFile + "] for display",e);
        }
        configFileContents.repaint();
        CacheListener cl=new CacheListener();
        cache.addListener(cl);
        EmbeddedCacheManager cacheManager=(EmbeddedCacheManager)cache.getCacheManager();
        cacheManager.addListener(cl);
        updateClusterTable(cacheManager.getMembers());
        lifespanSpinner.setValue(cache.getConfiguration().getExpirationLifespan());
        maxIdleSpinner.setValue(cache.getConfiguration().getExpirationMaxIdle());
        cacheContentsSizeLabel.setText("Cache contains " + cache.size() + " entries");
        moveCacheToState(ComponentStatus.RUNNING);
      }
 catch (      Exception e) {
        log.error("Unable to start cache!",e);
        throw new RuntimeException(e);
      }
    }
  }
);
}
