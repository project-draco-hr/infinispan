{
  ObjectName name=getQueryStatsObjectName(JMX_DOMAIN,TEST_CACHE_NAME);
  System.out.println(server.getAttribute(name,"StatisticsEnabled"));
  server.setAttribute(name,new Attribute("StatisticsEnabled",true));
  remoteCache.put(1,createUser(1));
  remoteCache.put(2,createUser(2));
  QueryFactory qf=Search.getQueryFactory(remoteCache);
  Query query=qf.from(User.class).having("addresses.postCode").eq("1231").toBuilder().build();
  List<User> list=query.list();
  assertNotNull(list);
  assertEquals(1,list.size());
  assertEquals(User.class,list.get(0).getClass());
  assertEquals("Tom1",list.get(0).getName());
  assertEquals(2,server.invoke(name,"getNumberOfIndexedEntities",new Object[]{ProtobufValueWrapper.class.getCanonicalName()},new String[]{String.class.getCanonicalName()}));
  Set<String> classNames=(Set<String>)server.getAttribute(name,"IndexedClassNames");
  assertEquals(1,classNames.size());
  assertTrue("The set should contain the ProtobufValueWrapper class name.",classNames.contains(ProtobufValueWrapper.class.getCanonicalName()));
  assertTrue("The query execution total time should be > 0.",(Long)server.getAttribute(name,"SearchQueryTotalTime") > 0);
  assertEquals((long)1,server.getAttribute(name,"SearchQueryExecutionCount"));
}
