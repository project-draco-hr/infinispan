{
  InputStream schemaInputStream=InfinispanConfiguration.findSchemaInputStream();
  try {
    ConfigurationBuilderHolder holder=new Parser(Thread.currentThread().getContextClassLoader()).parse(configurationStream);
    globalConfiguration=new LegacyGlobalConfigurationAdaptor().adapt(holder.getGlobalConfigurationBuilder().build());
    globalConfiguration.accept(configurationValidator);
    defaultConfiguration=new LegacyConfigurationAdaptor().adapt(holder.getDefaultConfigurationBuilder().build());
    for (    Entry<String,ConfigurationBuilder> entry : holder.getNamedConfigurationBuilders().entrySet()) {
      org.infinispan.configuration.cache.Configuration c=entry.getValue().build();
      Configuration legacy=new LegacyConfigurationAdaptor().adapt(c);
      configurationOverrides.put(entry.getKey(),legacy);
    }
    globalComponentRegistry=new GlobalComponentRegistry(globalConfiguration,this,caches.keySet());
    cacheCreateLock=new ReentrantLock();
  }
 catch (  ConfigurationException ce) {
    throw ce;
  }
catch (  RuntimeException re) {
    throw new ConfigurationException(re);
  }
 finally {
    Util.close(schemaInputStream);
  }
  if (start)   start();
}
