{
  final Cache cache1=cache(0,"concurrentMarshaller");
  int nbWriters=10;
  final CyclicBarrier barrier=new CyclicBarrier(nbWriters + 1);
  List<Future<Void>> futures=new ArrayList<Future<Void>>(nbWriters);
  for (int i=0; i < nbWriters; i++) {
    log.debug("Schedule execution");
    Future<Void> future=fork(new CacheUpdater(barrier,cache1));
    futures.add(future);
  }
  barrier.await();
  barrier.await();
  log.debug("Threads finished, shutdown executor and check for exceptions");
  for (  Future<Void> future : futures)   future.get();
}
