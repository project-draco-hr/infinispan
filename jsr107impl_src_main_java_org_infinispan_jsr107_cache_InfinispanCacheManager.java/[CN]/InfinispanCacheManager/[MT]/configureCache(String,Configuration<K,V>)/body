{
  checkStartedStatus();
  if (cacheName == null || cacheName.length() == 0) {
    throw new NullPointerException("cacheName specified is invalid " + cacheName);
  }
  if (c == null) {
    throw new NullPointerException("configuration specified is invalid " + c);
  }
  boolean noIsolationWithTx=c.getTransactionIsolationLevel() == IsolationLevel.NONE && c.getTransactionMode() != Mode.NONE;
  boolean isolationWithNoTx=c.getTransactionIsolationLevel() != IsolationLevel.NONE && c.getTransactionMode() == Mode.NONE;
  if (noIsolationWithTx || isolationWithNoTx) {
    throw new IllegalArgumentException("Incompatible IsolationLevel " + c.getTransactionIsolationLevel() + " and tx mode "+ c.getTransactionMode());
  }
synchronized (caches) {
    Cache<?,?> cache=caches.get(cacheName);
    if (cache == null) {
      ConfigurationAdapter<K,V> adapter=new ConfigurationAdapter<K,V>(c,classLoader);
      org.infinispan.configuration.cache.Configuration ic=adapter.build();
      cmDelegate.defineConfiguration(cacheName,ic);
      org.infinispan.Cache<K,V> delegateCache=cmDelegate.getCache(cacheName);
      cache=new InfinispanCache<K,V>(delegateCache,this,classLoader,c);
      cache.start();
      caches.put(cache.getName(),cache);
    }
 else {
      if (!cache.getConfiguration().equals(c)) {
        throw new CacheException("Cache " + cacheName + " already registered with configuration "+ cache.getConfiguration()+ ", and can not be registered again with a new given configuration "+ c);
      }
    }
    return (Cache<K,V>)cache;
  }
}
