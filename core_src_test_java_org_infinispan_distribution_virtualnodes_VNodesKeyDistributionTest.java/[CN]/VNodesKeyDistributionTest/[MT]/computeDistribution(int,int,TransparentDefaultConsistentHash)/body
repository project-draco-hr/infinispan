{
  long[] distribution=new long[numNodes];
  int[] hashPositions=ch.getHashPositions();
  for (int i=0; i < hashPositions.length; i++) {
    int hashPosition=hashPositions[i];
    int previousHashPosition=i > 0 ? hashPositions[i - 1] : hashPositions[hashPositions.length - 1];
    List<Address> owners=ch.locateHash(hashPosition,numOwners);
    for (    Address a : owners) {
      IndexedJGroupsAddress ma=(IndexedJGroupsAddress)a;
      distribution[ma.nodeIndex]+=hashPosition > previousHashPosition ? hashPosition - previousHashPosition : Integer.MAX_VALUE + hashPosition - previousHashPosition;
    }
  }
  return distribution;
}
