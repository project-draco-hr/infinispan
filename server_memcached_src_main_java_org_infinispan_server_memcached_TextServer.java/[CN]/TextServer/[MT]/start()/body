{
  InterceptorChain chain=TextProtocolInterceptorChainFactory.getInstance(cache).buildInterceptorChain();
  NettyMemcachedDecoder decoder=new NettyMemcachedDecoder(cache,chain,scheduler);
  TextCommandHandler commandHandler=new TextCommandHandler(cache,chain);
  ThreadFactory tf=new MemcachedThreadFactory(cache,ExecutorType.MASTER);
  if (masterThreads == 0) {
    log.debug("Configured unlimited threads for master thread pool");
    masterExecutor=Executors.newCachedThreadPool(tf);
  }
 else {
    log.debug("Configured {0} threads for master thread pool",masterThreads);
    masterExecutor=Executors.newFixedThreadPool(masterThreads,tf);
  }
  tf=new MemcachedThreadFactory(cache,ExecutorType.WORKER);
  if (workerThreads == 0) {
    log.debug("Configured unlimited threads for worker thread pool");
    workerExecutor=Executors.newCachedThreadPool(tf);
  }
 else {
    log.debug("Configured {0} threads for worker thread pool",workerThreads);
    workerExecutor=Executors.newFixedThreadPool(workerThreads,tf);
  }
  bootstrap=new NettyServerBootstrap(commandHandler,decoder,new InetSocketAddress(host,port),masterExecutor,workerExecutor,workerThreads);
  bootstrap.start();
  log.info("Started Memcached text server bound to {0}:{1}",host,port);
}
