{
  AdvancedCache cache=mock(AdvancedCache.class);
  Configuration config=new ConfigurationBuilder().dataContainer().keyEquivalence(AnyEquivalence.getInstance()).valueEquivalence(AnyEquivalence.getInstance()).build();
  GlobalConfiguration gc=new GlobalConfigurationBuilder().build();
  Set<String> cachesSet=new HashSet<String>();
  EmbeddedCacheManager cm=mock(EmbeddedCacheManager.class);
  GlobalComponentRegistry gcr=new GlobalComponentRegistry(gc,cm,cachesSet);
  ComponentRegistry registry=new ComponentRegistry("cache",config,cache,gcr,BaseStoreTest.class.getClassLoader());
  when(cache.getName()).thenReturn(name);
  when(cache.getAdvancedCache()).thenReturn(cache);
  when(cache.getComponentRegistry()).thenReturn(registry);
  when(cache.getStatus()).thenReturn(ComponentStatus.RUNNING);
  when(cache.getCacheConfiguration()).thenReturn(config);
  return cache;
}
