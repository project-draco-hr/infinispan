{
  assertIsEmpty();
  long lifespan=1000;
  long idle=1000;
  InternalCacheEntry se1=internalCacheEntry("k1","v1",lifespan);
  InternalCacheEntry se2=internalCacheEntry("k2","v2",-1);
  InternalCacheEntry se3=internalCacheEntry("k3","v3",-1,idle);
  InternalCacheEntry se4=internalCacheEntry("k4","v4",lifespan,idle);
  assertExpired(se1,false);
  assertExpired(se2,false);
  assertExpired(se3,false);
  assertExpired(se4,false);
  cl.write(marshalledEntry(se1));
  cl.write(marshalledEntry(se2));
  cl.write(marshalledEntry(se3));
  cl.write(marshalledEntry(se4));
  timeService.advance(lifespan + 1);
  assertExpired(se1,true);
  assertExpired(se2,false);
  assertExpired(se3,true);
  assertExpired(se4,true);
  cl.stop();
  cl.start();
  assertExpired(se1,true);
  assertNull(cl.load("k1"));
  assertContains("k1",false);
  assertExpired(se2,false);
  assertNotNull(cl.load("k2"));
  assertContains("k2",true);
  assertEquals("v2",unwrap(cl.load("k2").getValue()));
  assertExpired(se3,true);
  assertNull(cl.load("k3"));
  assertContains("k3",false);
  assertExpired(se4,true);
  assertNull(cl.load("k4"));
  assertContains("k4",false);
}
