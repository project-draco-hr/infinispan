{
  final int prime=31;
  int result=1;
  result=prime * result + Float.floatToIntBits(capacityFactor);
  result=prime * result + ((consistentHashFactory == null) ? 0 : consistentHashFactory.hashCode());
  result=prime * result + (distributed ? 1231 : 1237);
  result=prime * result + ((hashFunction == null) ? 0 : hashFunction.hashCode());
  result=prime * result + numOwners;
  result=prime * result + numSegments;
  result=prime * result + (int)(timeout ^ (timeout >>> 32));
  result=prime * result + (totalOrder ? 1231 : 1237);
  result=prime * result + ((persistentUUID == null) ? 0 : persistentUUID.hashCode());
  result=prime * result + ((persistentStateChecksum == null) ? 0 : persistentStateChecksum.hashCode());
  return result;
}
