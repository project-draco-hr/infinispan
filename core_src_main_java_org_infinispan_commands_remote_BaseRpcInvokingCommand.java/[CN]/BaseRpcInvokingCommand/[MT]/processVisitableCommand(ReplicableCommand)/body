{
  if (cacheCommand instanceof VisitableCommand) {
    VisitableCommand vc=(VisitableCommand)cacheCommand;
    final InvocationContext ctx=icf.createRemoteInvocationContextForCommand(vc,getOrigin());
    if (cacheCommand instanceof RemoteLockCommand) {
      ctx.setLockOwner(((RemoteLockCommand)cacheCommand).getKeyLockOwner());
    }
    if (vc.shouldInvoke(ctx)) {
      if (trace)       log.tracef("Invoking command %s, with originLocal flag set to %b",cacheCommand,ctx.isOriginLocal());
      return interceptorChain.invoke(ctx,vc);
    }
 else {
      if (trace)       log.tracef("Not invoking command %s since shouldInvoke() returned false with context %s",cacheCommand,ctx);
      return null;
    }
  }
 else {
    throw new RuntimeException("Do we still need to deal with non-visitable commands? (" + cacheCommand.getClass().getName() + ")");
  }
}
