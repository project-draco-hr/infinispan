{
  mc.set(KEY_A,"valA");
  mc.set(KEY_B,"valB");
  mc.set(KEY_C,"valC");
  assertEquals("valA",mc.get(KEY_A));
  assertEquals("valB",mc.get(KEY_B));
  assertEquals("valC",mc.get(KEY_C));
  mc.writeln("flush_all 1");
  mc.flush();
  assertEquals("OK",mc.readln());
  assertEquals("valA",mc.get(KEY_A));
  assertEquals("valB",mc.get(KEY_B));
  assertEquals("valC",mc.get(KEY_C));
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return mc.get(KEY_A) == null && mc.get(KEY_B) == null && mc.get(KEY_C) == null;
    }
  }
,20000,40);
}
