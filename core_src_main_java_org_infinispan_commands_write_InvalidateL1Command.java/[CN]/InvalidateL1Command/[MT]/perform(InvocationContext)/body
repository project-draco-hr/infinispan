{
  final boolean trace=log.isTraceEnabled();
  if (trace)   log.tracef("Preparing to invalidate keys %s",Arrays.asList(keys));
  for (  Object k : getKeys()) {
    InternalCacheEntry ice=dataContainer.get(k);
    if (ice != null) {
      DataLocality locality=dm.getLocality(k);
      if (!locality.isLocal()) {
        if (forRehash && config.clustering().l1().onRehash()) {
          if (trace)           log.trace("Not removing, instead entry will be stored in L1");
          CacheEntry entry=ctx.lookupEntry(k);
          if (entry != null) {
            entry.setChanged(true);
          }
        }
 else {
          if (trace)           log.tracef("Invalidating key %s.",k);
          invalidate(ctx,k);
        }
      }
 else {
        log.tracef("Not invalidating key %s as it is local now",k);
      }
    }
  }
  return null;
}
