{
  MarshallerRegistration.registerMarshallers(SerializationContextHolder.getSerializationContext());
  MarshallerRegistration.registerMarshallers(ProtoStreamMarshaller.getSerializationContext());
  ConfigurationBuilder builder=hotRodCacheConfiguration();
  builder.transaction().indexing().enable().indexLocalOnly(false).addProperty("default.directory_provider",getLuceneDirectoryProvider()).addProperty("lucene_version","LUCENE_CURRENT");
  cacheManager=TestCacheManagerFactory.createCacheManager();
  cacheManager.defineConfiguration(TEST_CACHE_NAME,builder.build());
  cache=cacheManager.getCache(TEST_CACHE_NAME);
  hotRodServer=TestHelper.startHotRodServer(cacheManager);
  org.infinispan.client.hotrod.configuration.ConfigurationBuilder clientBuilder=new org.infinispan.client.hotrod.configuration.ConfigurationBuilder();
  clientBuilder.addServer().host("127.0.0.1").port(hotRodServer.getPort());
  clientBuilder.marshaller(new ProtoStreamMarshaller());
  remoteCacheManager=new RemoteCacheManager(clientBuilder.build());
  remoteCache=remoteCacheManager.getCache(TEST_CACHE_NAME);
  return cacheManager;
}
