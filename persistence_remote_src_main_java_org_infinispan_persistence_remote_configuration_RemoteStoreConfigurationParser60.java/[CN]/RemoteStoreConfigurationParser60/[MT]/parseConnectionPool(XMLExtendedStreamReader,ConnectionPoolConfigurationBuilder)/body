{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case EXHAUSTED_ACTION:
{
        builder.exhaustedAction(ExhaustedAction.valueOf(value));
        break;
      }
case MAX_ACTIVE:
{
      builder.maxActive(Integer.parseInt(value));
      break;
    }
case MAX_IDLE:
{
    builder.maxIdle(Integer.parseInt(value));
    break;
  }
case MAX_TOTAL:
{
  builder.maxTotal(Integer.parseInt(value));
  break;
}
case MIN_EVICTABLE_IDLE_TIME:
{
builder.minEvictableIdleTime(Long.parseLong(value));
break;
}
case MIN_IDLE:
{
builder.minIdle(Integer.parseInt(value));
break;
}
case TEST_WHILE_IDLE:
{
builder.testWhileIdle(Boolean.parseBoolean(value));
break;
}
case TIME_BETWEEN_EVICTION_RUNS:
{
builder.timeBetweenEvictionRuns(Long.parseLong(value));
break;
}
default :
{
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
ParseUtils.requireNoContent(reader);
}
