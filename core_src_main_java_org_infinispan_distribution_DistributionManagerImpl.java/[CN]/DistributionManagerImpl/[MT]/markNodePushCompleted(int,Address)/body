{
  if (!rpcManager.getTransport().isCoordinator())   throw new IllegalStateException("Only the coordinator should handle node push completed events");
  if (trace)   log.tracef("Coordinator: received push completed notification for %s, view id %s",node,viewId);
  if (viewId < lastViewId) {
    if (log.isTraceEnabled())     log.tracef("Coordinator: Ignoring old push completed confirmation for view %d, last view is %d",viewId,lastViewId);
    return;
  }
synchronized (pushConfirmationsLock) {
    if (viewId < lastViewIdFromPushConfirmation) {
      if (trace)       log.tracef("Coordinator: Ignoring old push completed confirmation for view %d, last confirmed view is %d",viewId,lastViewIdFromPushConfirmation);
      return;
    }
    if (viewId > lastViewIdFromPushConfirmation) {
      lastViewIdFromPushConfirmation=viewId;
    }
    pushConfirmations.put(node,viewId);
    if (trace)     log.tracef("Coordinator: updated push confirmations map %s",pushConfirmations);
    for (    Map.Entry<Address,Integer> pushNode : pushConfirmations.entrySet()) {
      if (pushNode.getValue() < viewId) {
        return;
      }
    }
    if (trace)     log.tracef("Coordinator: sending rehash completed notification for view %s",viewId);
    final RehashControlCommand cmd=cf.buildRehashControlCommand(RehashControlCommand.Type.REHASH_COMPLETED,self,viewId);
    rpcManager.broadcastRpcCommand(cmd,false);
    markRehashCompleted(viewId);
  }
}
