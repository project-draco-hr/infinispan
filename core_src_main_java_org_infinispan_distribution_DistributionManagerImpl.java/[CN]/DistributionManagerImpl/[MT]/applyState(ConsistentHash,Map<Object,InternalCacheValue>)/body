{
  log.trace("Apply state with " + state);
  for (  Map.Entry<Object,InternalCacheValue> e : state.entrySet()) {
    if (consistentHash.locate(e.getKey(),configuration.getNumOwners()).contains(self)) {
      InternalCacheValue v=e.getValue();
      PutKeyValueCommand put=cf.buildPutKeyValueCommand(e.getKey(),v.getValue(),v.getLifespan(),v.getMaxIdle());
      InvocationContext ctx=icc.createInvocationContext();
      ctx.setFlags(Flag.CACHE_MODE_LOCAL,Flag.SKIP_REMOTE_LOOKUP,Flag.SKIP_SHARED_CACHE_STORE);
      interceptorChain.invoke(ctx,put);
    }
  }
  boolean unlocked=false;
  try {
    drainLocalTransactionLog();
    unlocked=true;
  }
  finally {
    if (!unlocked)     transactionLogger.unlockAndDisable();
  }
}
