{
  SearchManagerImplementor manager=(SearchManagerImplementor)Search.getSearchManager(cache1);
  SearchManagerImplementor manager1=(SearchManagerImplementor)Search.getSearchManager(cache2);
  manager.registerKeyTransformer(CustomKey3.class,CustomKey3Transformer.class);
  manager1.registerKeyTransformer(CustomKey3.class,CustomKey3Transformer.class);
  prepareTestedObjects();
  TransactionManager transactionManager=cache1.getAdvancedCache().getTransactionManager();
  CustomKey3 customeKey1=new CustomKey3(key1);
  CustomKey3 customeKey2=new CustomKey3(key2);
  CustomKey3 customeKey3=new CustomKey3(key3);
  if (transactionsEnabled())   transactionManager.begin();
  cache1.put(customeKey1,person1);
  cache1.put(customeKey2,person2);
  cache1.put(customeKey3,person3);
  if (transactionsEnabled())   transactionManager.commit();
  queryParser=createQueryParser("blurb");
  Query luceneQuery=queryParser.parse("Eats");
  CacheQuery cacheQuery=manager.getQuery(luceneQuery);
  int counter=0;
  ResultIterator found=cacheQuery.iterator(new FetchOptions().fetchMode(FetchOptions.FetchMode.LAZY));
  try {
    while (found.hasNext()) {
      found.next();
      counter++;
    }
  }
  finally {
    found.close();
  }
  AssertJUnit.assertEquals(2,counter);
  StaticTestingErrorHandler.assertAllGood(cache1,cache2);
}
