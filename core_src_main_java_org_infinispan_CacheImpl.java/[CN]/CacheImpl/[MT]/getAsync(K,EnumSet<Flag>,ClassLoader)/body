{
  if (asyncSkipsThread(explicitFlags,key)) {
    return wrapInFuture(get(key,explicitFlags,explicitClassLoader));
  }
 else {
    final EnumSet<Flag> appliedFlags;
    if (explicitFlags == null) {
      appliedFlags=null;
    }
 else {
      appliedFlags=explicitFlags.clone();
      explicitFlags.clear();
    }
    final LegacyNotifyingFutureAdaptor<V> f=new LegacyNotifyingFutureAdaptor<V>();
    Callable<V> c=new Callable<V>(){
      @Override public V call() throws Exception {
        try {
          return get(key,appliedFlags,explicitClassLoader);
        }
  finally {
          f.notifyDone();
        }
      }
    }
;
    f.setActual(asyncExecutor.submit(c));
    return f;
  }
}
