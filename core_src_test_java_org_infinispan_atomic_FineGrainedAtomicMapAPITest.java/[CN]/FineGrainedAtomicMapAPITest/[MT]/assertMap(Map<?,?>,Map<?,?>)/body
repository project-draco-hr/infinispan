{
  assertEquals("Wrong map '" + atomicMap + "'.size()",expected.size(),atomicMap.size());
  assertEquals("Wrong map '" + atomicMap + "'.isEmpty()",expected.isEmpty(),atomicMap.isEmpty());
  assertEquals("Wrong map '" + atomicMap + "'.keySet().size()",expected.keySet().size(),atomicMap.keySet().size());
  assertEquals("Wrong map '" + atomicMap + "'.keySet().isEmpty()",expected.keySet().isEmpty(),atomicMap.keySet().isEmpty());
  assertEquals("Wrong map '" + atomicMap + "'.values().size()",expected.values().size(),atomicMap.values().size());
  assertEquals("Wrong map '" + atomicMap + "'.values().isEmpty()",expected.values().isEmpty(),atomicMap.values().isEmpty());
  assertEquals("Wrong map '" + atomicMap + "'.entrySet().size()",expected.entrySet().size(),atomicMap.entrySet().size());
  assertEquals("Wrong map '" + atomicMap + "'.entrySet().isEmpty()",expected.entrySet().isEmpty(),atomicMap.entrySet().isEmpty());
  assertTrue("Wrong map '" + atomicMap + "'.keySet() content.",atomicMap.keySet().containsAll(expected.keySet()));
  assertTrue("Wrong map '" + atomicMap + "'.values() content.",atomicMap.values().containsAll(expected.values()));
  external:   for (  Entry<?,?> expectedEntry : expected.entrySet()) {
    for (    Entry<?,?> entry : atomicMap.entrySet()) {
      if (expectedEntry.getKey().equals(entry.getKey()) && expectedEntry.getValue().equals(entry.getValue())) {
        continue external;
      }
    }
    fail("Wrong map '" + atomicMap + "'.entrySet() content. Entry<"+ expectedEntry+ "> not found!");
  }
  for (  Object key : expected.keySet()) {
    assertContainsKey(atomicMap,key);
  }
  for (  Object value : expected.values()) {
    assertContainsValue(atomicMap,value);
  }
  assertKeysValues(expected,atomicMap);
}
