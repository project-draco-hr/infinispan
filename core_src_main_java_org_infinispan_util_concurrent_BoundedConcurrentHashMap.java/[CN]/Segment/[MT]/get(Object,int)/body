{
  int c=count;
  if (c != 0) {
    V result=null;
    HashEntry<K,V> e=getFirst(hash);
    loop:     while (e != null) {
      if (e.hash == hash && key.equals(e.key)) {
        V v=e.value;
        if (v != null) {
          result=v;
          break loop;
        }
 else {
          result=readValueUnderLock(e);
          break loop;
        }
      }
      e=e.next;
    }
    if (result != null) {
      if (eviction.onEntryHit(e)) {
        Set<HashEntry<K,V>> evicted=attemptEviction(false);
        if (evicted != null) {
          for (          HashEntry<K,V> he : evicted) {
            evictionListener.onEntryEviction(he.key,he.value);
          }
        }
      }
    }
    return result;
  }
  return null;
}
