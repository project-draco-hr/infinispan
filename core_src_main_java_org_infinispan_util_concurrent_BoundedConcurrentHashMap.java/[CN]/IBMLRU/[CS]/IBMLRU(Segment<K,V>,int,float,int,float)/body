{
  super(capacity,lf);
  this.segment=s;
  this.trimDownSize=capacity;
  this.maxBatchQueueSize=maxBatchSize > MAX_BATCH_SIZE ? MAX_BATCH_SIZE : maxBatchSize;
  this.batchQueueSizeThreshold=batchThresholdFactor * this.maxBatchQueueSize;
  this.accessQueue=new ConcurrentLinkedQueue<LRUHashEntry<K,V>>();
  this.evicted=new HashSet<HashEntry<K,V>>();
  this.head=(LRUHashEntry<K,V>)createNewEntry(null,-1,null,null);
  this.head.previousEntry=this.head.nextEntry=this.head;
}
