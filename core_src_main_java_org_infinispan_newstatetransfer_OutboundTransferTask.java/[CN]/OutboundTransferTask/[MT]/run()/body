{
  try {
    for (    InternalCacheEntry ice : dataContainer) {
      if (isCancelled) {
        return;
      }
      Object key=ice.getKey();
      int segmentId=ch.getSegment(key);
      if (segments.contains(segmentId)) {
        sendEntry(ice,segmentId);
      }
    }
    if (isCancelled) {
      return;
    }
    if (cacheLoaderManager != null && cacheLoaderManager.isEnabled() && !cacheLoaderManager.isShared()) {
      CacheStore cacheStore=cacheLoaderManager.getCacheStore();
      try {
        Set<Object> storedKeys=cacheStore.loadAllKeys(new ReadOnlyDataContainerBackedKeySet(dataContainer));
        for (        Object key : storedKeys) {
          if (isCancelled) {
            return;
          }
          int segmentId=ch.getSegment(key);
          if (segments.contains(segmentId)) {
            try {
              InternalCacheEntry ice=cacheStore.load(key);
              if (ice != null) {
                sendEntry(ice,segmentId);
              }
            }
 catch (            CacheLoaderException e) {
              log.failedLoadingValueFromCacheStore(key);
            }
          }
        }
      }
 catch (      CacheLoaderException e) {
        e.printStackTrace();
      }
    }
 else {
      if (trace) {
        log.tracef("No cache store or the cache store is shared, no need to send any stored cache entries for segments %s",segments);
      }
    }
    for (    int segmentId : segments) {
      if (isCancelled) {
        return;
      }
      List<InternalCacheEntry> entries=entriesBySegment.get(segmentId);
      sendEntries(entries,segmentId);
      if (!entries.isEmpty()) {
        sendEntries(Collections.<InternalCacheEntry>emptyList(),segmentId);
      }
    }
  }
  finally {
    stateProvider.onTaskCompletion(this);
  }
}
