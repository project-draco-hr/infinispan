{
  if (loaderKey.equals(ModelKeys.CLUSTER_LOADER)) {
    final ClusterLoaderConfigurationBuilder builder=persistenceBuilder.addClusterLoader();
    if (loader.hasDefined(ModelKeys.REMOTE_TIMEOUT)) {
      builder.remoteCallTimeout(loader.require(ModelKeys.REMOTE_TIMEOUT).asLong());
    }
    return builder;
  }
 else   if (loaderKey.equals(ModelKeys.LOADER)) {
    String className=loader.require(ModelKeys.CLASS).asString();
    try {
      org.infinispan.loaders.CacheLoader loaderInstance=(org.infinispan.loaders.CacheLoader)newInstance(className);
      Adaptor52xStoreConfigurationBuilder scb=persistenceBuilder.addStore(Adaptor52xStoreConfigurationBuilder.class);
      scb.loader(loaderInstance);
      return scb;
    }
 catch (    Exception e) {
      throw InfinispanMessages.MESSAGES.invalidCacheLoader(e,className);
    }
  }
 else {
    throw new IllegalStateException();
  }
}
