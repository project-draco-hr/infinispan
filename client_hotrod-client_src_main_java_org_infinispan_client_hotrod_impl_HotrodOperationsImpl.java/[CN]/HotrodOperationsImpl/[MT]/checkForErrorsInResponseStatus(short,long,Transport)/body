{
  if (log.isTraceEnabled()) {
    log.trace("Received operation status: " + status);
  }
switch ((int)status) {
case INVALID_MAGIC_OR_MESSAGE_ID_STATUS:
case REQUEST_PARSING_ERROR_STATUS:
case UNKNOWN_COMMAND_STATUS:
case SERVER_ERROR_STATUS:
case UNKNOWN_VERSION_STATUS:
{
      String msgFromServer=transport.readString();
      if (log.isWarnEnabled()) {
        log.warn("Error status received from the server:" + msgFromServer + " for message id "+ messageId);
      }
      throw new HotRodClientException(msgFromServer,messageId,status);
    }
case COMMAND_TIMEOUT_STATUS:
{
    if (log.isTraceEnabled()) {
      log.trace("timeout message received from the server");
    }
    throw new TimeoutException();
  }
case NO_ERROR_STATUS:
case KEY_DOES_NOT_EXIST_STATUS:
case NOT_PUT_REMOVED_REPLACED_STATUS:
{
  break;
}
default :
{
throw new IllegalStateException("Unknown status: " + Integer.toHexString(status));
}
}
}
