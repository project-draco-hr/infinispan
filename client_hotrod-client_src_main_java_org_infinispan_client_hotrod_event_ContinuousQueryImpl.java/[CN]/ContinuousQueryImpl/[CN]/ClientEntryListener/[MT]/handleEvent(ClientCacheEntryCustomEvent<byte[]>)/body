{
  byte[] eventData=event.getEventData();
  ContinuousQueryResult cqr=(ContinuousQueryResult)ProtobufUtil.fromWrappedByteArray(serializationContext,eventData);
  Object key=ProtobufUtil.fromWrappedByteArray(serializationContext,cqr.getKey());
  Object value=cqr.getValue() != null ? ProtobufUtil.fromWrappedByteArray(serializationContext,cqr.getValue()) : cqr.getProjection();
switch (cqr.getResultType()) {
case JOINING:
    listener.resultJoining((K)key,(C)value);
  break;
case UPDATED:
listener.resultUpdated((K)key,(C)value);
break;
case LEAVING:
listener.resultLeaving((K)key);
break;
default :
throw new IllegalStateException("Unexpected result type : " + cqr.getResultType());
}
}
