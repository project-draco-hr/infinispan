{
  this.classLoader=template.classLoader();
  this.clustering.read(template.clustering());
  this.customInterceptors.read(template.customInterceptors());
  this.dataContainer.read(template.dataContainer());
  this.deadlockDetection.read(template.deadlockDetection());
  this.eviction.read(template.eviction());
  this.expiration.read(template.expiration());
  this.indexing.read(template.indexing());
  this.invocationBatching.read(template.invocationBatching());
  this.jmxStatistics.read(template.jmxStatistics());
  this.loaders.read(template.loaders());
  this.locking.read(template.locking());
  this.storeAsBinary.read(template.storeAsBinary());
  this.transaction.read(template.transaction());
  this.unsafe.read(template.unsafe());
  this.versioning.read(template.versioning());
  for (  Object c : template.modules().values()) {
    BuiltBy builtBy=c.getClass().getAnnotation(BuiltBy.class);
    if (builtBy == null) {
      throw new ConfigurationException("Missing BuiltBy annotation for configuration bean " + c.getClass().getName());
    }
    Builder<Object> builder=(Builder<Object>)this.addModule(builtBy.value());
    builder.read(c);
  }
  return this;
}
