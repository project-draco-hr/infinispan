{
  ccl=new CustomClassLoader(Thread.currentThread().getContextClassLoader());
  ClassLoaderListener listener=new ClassLoaderListener();
  cache().getAdvancedCache().with(ccl).addListener(listener);
  cache().put("a","a");
  assertEquals(1,listener.createdCounter);
  assertEquals(0,listener.modifiedCounter);
  assertEquals(0,listener.removedCounter);
  assertEquals(0,listener.visitedCounter);
  assertEquals(0,listener.activatedCounter);
  assertEquals(0,listener.passivatedCounter);
  assertEquals(0,listener.evictedCounter);
  assertEquals(0,listener.loadedCounter);
  listener.reset();
  cache().replace("a","b");
  assertEquals(0,listener.createdCounter);
  assertEquals(1,listener.modifiedCounter);
  assertEquals(0,listener.removedCounter);
  assertEquals(0,listener.visitedCounter);
  assertEquals(0,listener.activatedCounter);
  assertEquals(0,listener.passivatedCounter);
  assertEquals(0,listener.evictedCounter);
  assertEquals(0,listener.loadedCounter);
  listener.reset();
  cache().evict("a");
  assertEquals(0,listener.createdCounter);
  assertEquals(0,listener.modifiedCounter);
  assertEquals(0,listener.removedCounter);
  assertEquals(0,listener.visitedCounter);
  assertEquals(0,listener.activatedCounter);
  assertEquals(1,listener.passivatedCounter);
  assertEquals(1,listener.evictedCounter);
  assertEquals(0,listener.loadedCounter);
  listener.reset();
  cache().get("a");
  assertEquals(0,listener.createdCounter);
  assertEquals(1,listener.modifiedCounter);
  assertEquals(0,listener.removedCounter);
  assertEquals(1,listener.visitedCounter);
  assertEquals(1,listener.activatedCounter);
  assertEquals(0,listener.passivatedCounter);
  assertEquals(0,listener.evictedCounter);
  assertEquals(1,listener.loadedCounter);
  listener.reset();
  cache().remove("a");
  assertEquals(0,listener.createdCounter);
  assertEquals(0,listener.modifiedCounter);
  assertEquals(1,listener.removedCounter);
  assertEquals(0,listener.visitedCounter);
  assertEquals(0,listener.activatedCounter);
  assertEquals(0,listener.passivatedCounter);
  assertEquals(0,listener.evictedCounter);
  assertEquals(0,listener.loadedCounter);
}
