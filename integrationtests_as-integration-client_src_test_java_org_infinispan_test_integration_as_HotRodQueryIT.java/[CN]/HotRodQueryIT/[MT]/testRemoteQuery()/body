{
  RemoteCacheManager rcm=createCacheManager();
  SerializationContext serializationContext=ProtoStreamMarshaller.getSerializationContext(rcm);
  ProtoSchemaBuilder protoSchemaBuilder=new ProtoSchemaBuilder();
  String protoFile=protoSchemaBuilder.fileName("test.proto").addClass(Person.class).build(serializationContext);
  RemoteCache<String,String> metadataCache=rcm.getCache(ProtobufMetadataManagerConstants.PROTOBUF_METADATA_CACHE_NAME);
  metadataCache.put("test.proto",protoFile);
  assertFalse(metadataCache.containsKey(ProtobufMetadataManagerConstants.ERRORS_KEY_SUFFIX));
  RemoteCache<String,Person> cache=rcm.getCache();
  cache.clear();
  cache.put("Adrian",new Person("Adrian"));
  assertTrue(cache.containsKey("Adrian"));
  QueryFactory qf=Search.getQueryFactory(cache);
  Query query=qf.from(Person.class).having("name").eq("Adrian").toBuilder().build();
  List<Person> list=query.list();
  assertNotNull(list);
  assertEquals(1,list.size());
  assertEquals(Person.class,list.get(0).getClass());
  assertEquals("Adrian",list.get(0).name);
  rcm.stop();
}
