{
  ObjectInputOutput io=new ObjectInputOutput();
  MarshallUtil.marshallUUID(null,io,true);
  Assert.assertNull(MarshallUtil.unmarshallUUID(io,true));
  Assert.assertEquals(0,io.buffer.size());
  for (int i=0; i < NR_RANDOM; ++i) {
    io.reset();
    UUID uuid=UUID.randomUUID();
    MarshallUtil.marshallUUID(uuid,io,false);
    Assert.assertEquals(uuid,MarshallUtil.unmarshallUUID(io,false));
    Assert.assertEquals(0,io.buffer.size());
  }
  for (int i=0; i < NR_RANDOM; ++i) {
    io.reset();
    UUID uuid=UUID.randomUUID();
    MarshallUtil.marshallUUID(uuid,io,true);
    Assert.assertEquals(uuid,MarshallUtil.unmarshallUUID(io,true));
    Assert.assertEquals(0,io.buffer.size());
  }
}
