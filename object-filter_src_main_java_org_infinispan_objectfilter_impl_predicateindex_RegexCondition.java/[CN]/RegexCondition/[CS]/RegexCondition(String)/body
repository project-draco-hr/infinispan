{
  this.jpaPattern=jpaPattern;
  if (jpaPattern.indexOf('%') == -1 && jpaPattern.indexOf('_') == -1) {
    type=Type.Equals;
    value=jpaPattern;
    regexPattern=null;
    length=-1;
  }
 else {
    if (jpaPattern.charAt(0) == '%') {
      String s=jpaPattern.substring(1);
      if (s.indexOf('%') == -1 && s.indexOf('_') == -1) {
        type=Type.EndsWith;
        value=s;
        length=-1;
        regexPattern=null;
        return;
      }
 else       if (s.indexOf('%') == s.length() - 1 && s.indexOf('_') == -1) {
        type=Type.Contains;
        value=s.substring(0,s.length() - 1);
        length=-1;
        regexPattern=null;
        return;
      }
    }
 else     if (jpaPattern.charAt(0) == '_') {
      String s=jpaPattern.substring(1);
      if (s.indexOf('%') == -1 && s.indexOf('_') == -1) {
        type=Type.EndsWith;
        value=s;
        length=jpaPattern.length();
        regexPattern=null;
        return;
      }
    }
 else     if (jpaPattern.charAt(jpaPattern.length() - 1) == '%') {
      String s=jpaPattern.substring(0,jpaPattern.length() - 1);
      if (s.indexOf('%') == -1 && s.indexOf('_') == -1) {
        type=Type.StartsWith;
        value=s;
        length=-1;
        regexPattern=null;
        return;
      }
    }
 else     if (jpaPattern.charAt(jpaPattern.length() - 1) == '_') {
      String s=jpaPattern.substring(0,jpaPattern.length() - 1);
      if (s.indexOf('%') == -1 && s.indexOf('_') == -1) {
        type=Type.StartsWith;
        value=s;
        length=jpaPattern.length();
        regexPattern=null;
        return;
      }
    }
    type=Type.Regexp;
    regexPattern=Pattern.compile(jpaWildcardToRegex(jpaPattern));
    value=null;
    length=-1;
  }
}
