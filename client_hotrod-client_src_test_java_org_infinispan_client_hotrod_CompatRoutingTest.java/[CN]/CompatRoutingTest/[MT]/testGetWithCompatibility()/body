{
  RemoteCache<String,String> client=client(0).getCache();
  HashMap<String,String> cachedValues=new HashMap<>();
  for (int i=0; i < 100; i++) {
    String key=String.format("key-%d",i);
    String value=String.format("value-%d",i);
    client.put(key,value);
    cachedValues.put(key,value);
  }
  int startRpcs=0;
  for (  Cache cache : caches()) {
    startRpcs+=((RpcManagerImpl)cache.getAdvancedCache().getRpcManager()).getReplicationCount();
  }
  assertTrue(startRpcs > 0);
  for (  Map.Entry<String,String> entry : cachedValues.entrySet()) {
    String value=client.get(entry.getKey());
    assertEquals(entry.getValue(),value);
  }
  int endRpcs=0;
  for (  Cache cache : caches()) {
    endRpcs+=((RpcManagerImpl)cache.getAdvancedCache().getRpcManager()).getReplicationCount();
  }
  assertEquals(startRpcs,endRpcs);
}
