{
  try {
    boolean skipLocking=hasSkipLocking(command);
    if (!skipLocking) {
      final boolean localLock=cdl.localNodeIsPrimaryOwner(command.getKey());
      acquireRemoteIfNeeded(ctx,command,localLock);
      final TxInvocationContext txContext=(TxInvocationContext)ctx;
      long lockTimeout=getLockAcquisitionTimeout(command,false);
      lockAndRegisterBackupLock(txContext,command.getKey(),localLock,lockTimeout,false);
    }
    return invokeNextInterceptor(ctx,command);
  }
 catch (  OutdatedTopologyException e) {
    throw e;
  }
catch (  Throwable te) {
    releaseLocksOnFailureBeforePrepare(ctx);
    throw te;
  }
}
