{
  try {
    Object key=command.getKey();
    if (!hasSkipLocking(command)) {
      acquireRemoteIfNeeded(ctx,key,command);
      lockOrRegisterBackupLock((TxInvocationContext<?>)ctx,key,getLockTimeoutMillis(command));
    }
    ((TxInvocationContext<?>)ctx).addAffectedKey(key);
    return invokeNextInterceptor(ctx,command);
  }
 catch (  OutdatedTopologyException e) {
    throw e;
  }
catch (  Throwable te) {
    releaseLocksOnFailureBeforePrepare(ctx);
    throw te;
  }
}
