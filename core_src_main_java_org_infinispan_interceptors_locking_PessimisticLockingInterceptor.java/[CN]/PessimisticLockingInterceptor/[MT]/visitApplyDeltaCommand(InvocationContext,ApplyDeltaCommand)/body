{
  Object[] compositeKeys=command.getCompositeKeys();
  try {
    boolean skipLocking=hasSkipLocking(command);
    if (!skipLocking) {
      HashSet<Object> keysToLock=new HashSet<Object>(Arrays.asList(compositeKeys));
      acquireRemoteIfNeeded(ctx,keysToLock,command);
      if (cdl.localNodeIsOwner(command.getKey())) {
        long lockTimeout=getLockAcquisitionTimeout(command,skipLocking);
        for (        Object key : compositeKeys) {
          lockKey(ctx,key,lockTimeout,skipLocking);
        }
      }
    }
    return invokeNextInterceptor(ctx,command);
  }
 catch (  Throwable te) {
    throw cleanLocksAndRethrow(ctx,te);
  }
}
