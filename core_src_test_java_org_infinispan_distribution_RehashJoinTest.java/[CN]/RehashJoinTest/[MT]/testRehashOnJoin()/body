{
  MagicKey k1=new MagicKey(c1,"k1");
  MagicKey k2=new MagicKey(c2,"k2");
  MagicKey k3=new MagicKey(c3,"k3");
  MagicKey k4=new MagicKey(c4,"k4");
  List<MagicKey> keys=new ArrayList<MagicKey>(4);
  keys.add(k1);
  keys.add(k2);
  keys.add(k3);
  keys.add(k4);
  int i=0;
  for (  Cache<Object,String> c : caches)   c.put(keys.get(i++),"v" + i);
  i=0;
  for (  MagicKey key : keys)   assertOnAllCachesAndOwnership(key,"v" + ++i);
  log.info("***>>> Firing up new joiner!");
  Cache<Object,String> joiner=joinerManager.getCache(cacheName);
  TestingUtil.blockUntilViewsReceived(SECONDS.toMillis(480),cacheManagers.toArray(new CacheManager[cacheManagers.size()]));
  waitForJoinTasksToComplete(SECONDS.toMillis(480),joiner);
  int joinerPos=locateJoiner(joinerManager.getAddress());
  log.info("***>>> Joiner is in position " + joinerPos);
  caches.add(joinerPos,joiner);
  i=0;
  for (  MagicKey key : keys)   assertOnAllCachesAndOwnership(key,"v" + ++i);
  assertProperConsistentHashOnAllCaches();
}
