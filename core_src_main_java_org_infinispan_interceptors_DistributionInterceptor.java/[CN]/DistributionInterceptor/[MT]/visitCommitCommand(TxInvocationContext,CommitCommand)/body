{
  if (shouldInvokeRemoteTxCommand(ctx)) {
    Collection<Address> preparedOn=((LocalTxInvocationContext)ctx).getRemoteLocksAcquired();
    Collection<Address> recipients=dm.getAffectedNodes(ctx.getAffectedKeys());
    boolean syncCommitPhase=configuration.isSyncCommitPhase();
    for (    Address a : preparedOn) {
      if (!recipients.contains(a)) {
        recipients.add(a);
        syncCommitPhase=true;
      }
    }
    NotifyingNotifiableFuture<Object> f=null;
    if (isL1CacheEnabled) {
      f=l1Manager.flushCache(ctx.getLockedKeys(),null,null);
    }
    Map<Address,Response> responses=rpcManager.invokeRemotely(recipients,command,syncCommitPhase,true);
    if (!responses.isEmpty()) {
      List<Address> resendTo=new LinkedList<Address>();
      for (      Map.Entry<Address,Response> r : responses.entrySet()) {
        if (needToResendPrepare(r.getValue()))         resendTo.add(r.getKey());
      }
      if (!resendTo.isEmpty()) {
        log.debugf("Need to resend prepares for %s to %s",command.getGlobalTransaction(),resendTo);
        PrepareCommand pc=cf.buildPrepareCommand(command.getGlobalTransaction(),ctx.getModifications(),true);
        rpcManager.invokeRemotely(resendTo,pc,true,true);
      }
    }
    if (f != null && configuration.isSyncCommitPhase()) {
      try {
        f.get();
      }
 catch (      Exception e) {
        if (log.isInfoEnabled())         log.failedInvalidatingRemoteCache(e);
      }
    }
  }
  return invokeNextInterceptor(ctx,command);
}
