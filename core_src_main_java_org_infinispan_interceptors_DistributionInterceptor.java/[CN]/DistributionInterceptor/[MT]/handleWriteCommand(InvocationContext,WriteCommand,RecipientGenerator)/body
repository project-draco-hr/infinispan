{
  boolean localModeForced=isLocalModeForced(ctx);
  remoteGetBeforeWrite(ctx,command.isConditional(),recipientGenerator.getKeys());
  if (localModeForced && ctx.isInTxScope())   return invokeNextInterceptor(ctx,command);
  Object returnValue=invokeNextInterceptor(ctx,command);
  if (command.isSuccessful()) {
    if (!ctx.isInTxScope()) {
      if (ctx.isOriginLocal()) {
        List<Address> rec=recipientGenerator.generateRecipients();
        if (trace)         log.trace("Invoking command {0} on hosts {1}",command,rec);
        Future<Object> f1=null, f2;
        boolean useFuture=ctx.isUseFutureReturnType();
        boolean sync=isSynchronous(ctx);
        if (isL1CacheEnabled && rec != null && rpcManager.getMembers().size() > rec.size()) {
          InvalidateCommand ic=cf.buildInvalidateFromL1Command(recipientGenerator.getKeys());
          f1=submitRpc(null,ic,sync,useFuture);
        }
        f2=submitRpc(rec,command,sync,useFuture);
        if (f2 != null)         return new DistributionCommunicationFuture(f1,f2,returnValue);
      }
    }
 else {
      if (!localModeForced) {
        ((TxInvocationContext)ctx).addTransactionParticipants(recipientGenerator.generateRecipients());
      }
 else {
      }
    }
  }
  return returnValue;
}
