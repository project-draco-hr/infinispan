{
  final List<NotifyingFuture<Double>> futures=new ArrayList<>();
  futures.add(createNeverCompletingFuture(42.0));
  futures.add(createNeverCompletingFuture(42.0));
  NotifyingFuture<?> combined=Futures.combine(futures);
  NotifyingFuture<Void> andThenFuture=Futures.andThen(combined,new Runnable(){
    @Override public void run(){
      fail("Should not call afterTask if initial future is cancelled");
    }
  }
);
  andThenFuture.cancel(true);
  assertTrue(andThenFuture.isCancelled());
  andThenFuture.get();
}
