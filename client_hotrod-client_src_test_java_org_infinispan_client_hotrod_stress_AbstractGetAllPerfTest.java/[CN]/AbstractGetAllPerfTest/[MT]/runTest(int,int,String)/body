{
  assertTrue(possibilities > size);
  Map<Integer,Integer> map=new HashMap<Integer,Integer>();
  for (int i=0; i < size; ++i) {
    map.put(i,i);
  }
  remoteCache.putAll(map);
  long begin=System.currentTimeMillis();
  int iterations=0;
  Set<Integer> set=new HashSet<Integer>();
  Random random=new Random();
  long currentTime;
  while (millisecondsToRun + begin > (currentTime=System.currentTimeMillis())) {
    int count=0;
    set.clear();
    for (int i=0; i < size; ) {
      int value=random.nextInt(possibilities);
      if (set.add(value)) {
        i++;
        if (value < size) {
          count++;
        }
      }
    }
    assertEquals(count,remoteCache.getAll(set).size());
    iterations++;
  }
  long totalTime=currentTime - begin;
  System.out.println(name + " - Performed " + iterations+ " in "+ totalTime+ " ms generating "+ iterations / (totalTime / 1000) + " ops/sec");
}
