{
  if (unKeyed || shouldInvoke(event,isLocalNodePrimaryOwner)) {
    Runnable r=new Runnable(){
      @Override public void run(){
        ClassLoader contextClassLoader=null;
        Transaction transaction=suspendIfNeeded();
        if (classLoader != null && classLoader.get() != null) {
          contextClassLoader=setContextClassLoader(classLoader.get());
        }
        try {
          method.invoke(target,event);
        }
 catch (        InvocationTargetException exception) {
          Throwable cause=getRealException(exception);
          if (sync) {
            throw new CacheException(String.format("Caught exception [%s] while invoking method [%s] on listener instance: %s",cause.getClass().getName(),method,target),cause);
          }
 else {
            getLog().unableToInvokeListenerMethod(method,target,cause);
          }
        }
catch (        IllegalAccessException exception) {
          getLog().unableToInvokeListenerMethod(method,target,exception);
          removeListener(target);
        }
 finally {
          if (classLoader != null && classLoader.get() != null) {
            setContextClassLoader(contextClassLoader);
          }
          resumeIfNeeded(transaction);
        }
      }
    }
;
    if (sync)     syncProcessor.execute(r);
 else     asyncProcessor.execute(r);
  }
}
