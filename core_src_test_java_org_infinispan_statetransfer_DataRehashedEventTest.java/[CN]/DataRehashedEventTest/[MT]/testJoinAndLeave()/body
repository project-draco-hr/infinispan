{
  Cache<Object,Object> c1=cache(0);
  rehashListener=new DataRehashedListener();
  c1.addListener(rehashListener);
  ConsistentHash ch1Node=advancedCache(0).getDistributionManager().getReadConsistentHash();
  assertEquals(rehashListener.removeEvents().size(),0);
  addClusterEnabledCacheManager(defaultConfig);
  cache(1);
  TestingUtil.waitForRehashToComplete(cache(0),cache(1));
  ConsistentHash ch2Nodes=advancedCache(0).getDistributionManager().getReadConsistentHash();
  rehashListener.waitForEvents(2);
  List<DataRehashedEvent<Object,Object>> events=rehashListener.removeEvents();
  assertEquals(events.size(),2);
  DataRehashedEvent<Object,Object> pre=events.get(0);
  DataRehashedEvent<Object,Object> post=events.get(1);
  assertTrue(pre.isPre());
  assertEquals(pre.getConsistentHashAtStart(),ch1Node);
  assertNotNull(pre.getConsistentHashAtEnd());
  assertEquals(pre.getMembersAtEnd(),ch2Nodes.getMembers());
  assertFalse(post.isPre());
  assertEquals(post.getConsistentHashAtStart(),ch1Node);
  assertEquals(post.getConsistentHashAtEnd(),ch2Nodes);
  addClusterEnabledCacheManager(defaultConfig);
  cache(2);
  TestingUtil.waitForRehashToComplete(cache(0),cache(1),cache(2));
  ConsistentHash ch3Nodes=advancedCache(0).getDistributionManager().getReadConsistentHash();
  rehashListener.waitForEvents(2);
  events=rehashListener.removeEvents();
  assertEquals(events.size(),2);
  pre=events.get(0);
  post=events.get(1);
  assertTrue(pre.isPre());
  assertEquals(pre.getConsistentHashAtStart(),ch2Nodes);
  assertNotNull(pre.getConsistentHashAtEnd());
  assertEquals(pre.getMembersAtEnd(),ch3Nodes.getMembers());
  assertFalse(post.isPre());
  assertEquals(post.getConsistentHashAtStart(),ch2Nodes);
  assertEquals(post.getConsistentHashAtEnd(),ch3Nodes);
  killMember(2);
  ConsistentHash chAfterLeave=advancedCache(0).getDistributionManager().getReadConsistentHash();
  rehashListener.waitForEvents(2);
  events=rehashListener.removeEvents();
  assertEquals(events.size(),2);
  pre=events.get(0);
  post=events.get(1);
  assertTrue(pre.isPre());
  assertNotNull(pre.getConsistentHashAtStart());
  assertEquals(pre.getMembersAtStart(),chAfterLeave.getMembers());
  assertEquals(pre.getConsistentHashAtEnd(),chAfterLeave);
  assertFalse(post.isPre());
  assertEquals(post.getConsistentHashAtStart(),pre.getConsistentHashAtStart());
  assertEquals(post.getConsistentHashAtEnd(),pre.getConsistentHashAtEnd());
  killMember(1);
  events=rehashListener.removeEvents();
  assertEquals(events.size(),0);
}
