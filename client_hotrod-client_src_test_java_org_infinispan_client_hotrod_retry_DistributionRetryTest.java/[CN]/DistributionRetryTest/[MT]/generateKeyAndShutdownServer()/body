{
  resetStats();
  Cache<Object,Object> cache=manager(1).getCache();
  ExecutorService ex=Executors.newSingleThreadExecutor();
  KeyAffinityService kaf=KeyAffinityServiceFactory.newKeyAffinityService(cache,ex,new ByteKeyGenerator(),2,true);
  Address address=cache.getAdvancedCache().getRpcManager().getTransport().getAddress();
  byte[] keyBytes=(byte[])kaf.getKeyForAddress(address);
  String key=ByteKeyGenerator.getStringObject(keyBytes);
  ex.shutdownNow();
  kaf.stop();
  remoteCache.put(key,"v");
  assertOnlyServerHit(getAddress(hotRodServer2));
  TcpTransportFactory tcpTp=(TcpTransportFactory)TestingUtil.extractField(remoteCacheManager,"transportFactory");
  Marshaller sm=new JBossMarshaller();
  TcpTransport transport=(TcpTransport)tcpTp.getTransport(sm.objectToByteBuffer(key,64));
  try {
    assertEquals(transport.getServerAddress(),new InetSocketAddress("localhost",hotRodServer2.getPort()));
  }
  finally {
    tcpTp.releaseTransport(transport);
  }
  log.info("About to stop Hot Rod server 2");
  hotRodServer2.stop();
  return key;
}
