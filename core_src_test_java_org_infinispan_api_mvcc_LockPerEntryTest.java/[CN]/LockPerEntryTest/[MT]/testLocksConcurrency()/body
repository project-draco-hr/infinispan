{
  cache=cacheManager.getCache();
  final int NUM_THREADS=10;
  final CountDownLatch l=new CountDownLatch(1);
  final int numLoops=1000;
  final List<Exception> exceptions=new LinkedList<>();
  Thread[] t=new Thread[NUM_THREADS];
  for (int i=0; i < NUM_THREADS; i++)   t[i]=new Thread(){
    @Override public void run(){
      try {
        l.await();
      }
 catch (      Exception e) {
      }
      for (int i=0; i < numLoops; i++) {
        try {
switch (i % 2) {
case 0:
            cache.put("Key" + i,"v");
          break;
case 1:
        cache.remove("Key" + i);
      break;
  }
}
 catch (Exception e) {
  exceptions.add(e);
}
}
}
}
;
for (Thread th : t) th.start();
l.countDown();
for (Thread th : t) th.join();
if (!exceptions.isEmpty()) throw exceptions.get(0);
assertNoLocks();
}
