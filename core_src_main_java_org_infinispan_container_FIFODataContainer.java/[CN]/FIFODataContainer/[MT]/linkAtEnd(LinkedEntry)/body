{
  LinkedEntry prev=tail.p;
  long backoffTime=-1;
  for (; ; ) {
    entry.p=prev;
    entry.n=tail;
    if (prev.casNext(tail,entry))     break;
    prev=correctPrev(prev,tail);
    backoffTime=backoff(backoffTime);
  }
  backoffTime=-1;
  for (; ; ) {
    LinkedEntry l1=tail.p;
    if (isMarkedForRemoval(l1) || entry.n != tail)     break;
    if (tail.casPrev(l1,entry)) {
      if (isMarkedForRemoval(entry.p))       correctPrev(entry,tail);
      break;
    }
    backoffTime=backoff(backoffTime);
  }
}
