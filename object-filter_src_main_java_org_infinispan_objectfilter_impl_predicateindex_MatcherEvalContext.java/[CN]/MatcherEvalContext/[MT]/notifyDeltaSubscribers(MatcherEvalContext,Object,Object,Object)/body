{
  if (isSingleFilter()) {
    return;
  }
  for (int i=0; i < filterContexts.length; i++) {
    FilterSubscriptionImpl s=filterSubscriptions.get(i);
    FilterEvalContext filterEvalContext1=filterContexts[i];
    if (filterEvalContext1 == null && s.getBETree().getChildCounters()[0] == BETree.EXPR_TRUE) {
      filterEvalContext1=new FilterEvalContext(this,s);
      filterContexts[i]=filterEvalContext1;
    }
    FilterEvalContext filterEvalContext2=null;
    if (other != null) {
      filterEvalContext2=other.filterContexts[i];
      if (filterEvalContext2 == null && s.getBETree().getChildCounters()[0] == BETree.EXPR_TRUE) {
        filterEvalContext2=new FilterEvalContext(other,s);
        other.filterContexts[i]=filterEvalContext2;
      }
    }
    boolean before=filterEvalContext1 != null && filterEvalContext1.isMatching();
    boolean after=filterEvalContext2 != null && filterEvalContext2.isMatching();
    if (!before && after) {
      s.getCallback().onFilterResult(true,userContext,joiningEvent,other.instance,filterEvalContext2.getProjection(),filterEvalContext2.getSortProjection());
    }
 else     if (before && !after) {
      s.getCallback().onFilterResult(true,userContext,leavingEvent,instance,filterEvalContext1.getProjection(),filterEvalContext1.getSortProjection());
    }
 else     if (before && after) {
      s.getCallback().onFilterResult(true,userContext,updateEvent,other.instance,filterEvalContext2.getProjection(),filterEvalContext2.getSortProjection());
    }
  }
}
