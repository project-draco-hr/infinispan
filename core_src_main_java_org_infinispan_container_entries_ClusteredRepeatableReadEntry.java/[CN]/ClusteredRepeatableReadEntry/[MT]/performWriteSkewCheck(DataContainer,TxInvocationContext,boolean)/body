{
  EntryVersion prevVersion;
  InternalCacheEntry ice=container.get(key);
  EntryVersion version=metadata.version();
  if (ice == null) {
    log.tracef("No entry for key %s found in data container",key);
    prevVersion=ctx.getCacheTransaction().getLookedUpRemoteVersion(key);
    if (prevVersion == null) {
      log.tracef("No looked up remote version for key %s found in context",key);
      return version == null;
    }
  }
 else {
    prevVersion=ice.getMetadata().version();
    if (prevVersion == null)     throw new IllegalStateException("Entries cannot have null versions!");
  }
  if (log.isTraceEnabled()) {
    log.tracef("Is going to compare versions %s and %s for key %s. Was previously read? %s",prevVersion,version,key,previousRead);
  }
  if (version == null)   return !previousRead;
  log.tracef("Comparing versions %s and %s for key %s: %s",prevVersion,version,key,prevVersion.compareTo(version));
  return InequalVersionComparisonResult.AFTER != prevVersion.compareTo(version);
}
