{
  Map<String,List<Mutation>> keyMutations=mutationMap.get(key);
  if (keyMutations == null) {
    keyMutations=new HashMap<String,List<Mutation>>();
    mutationMap.put(key,keyMutations);
  }
  List<Mutation> columnFamilyMutations=keyMutations.get(columnFamily);
  if (columnFamilyMutations == null) {
    columnFamilyMutations=new ArrayList<Mutation>();
    keyMutations.put(columnFamily,columnFamilyMutations);
  }
  if (value == null) {
    log.debug("Delete '{0}'",key);
    Deletion deletion=new Deletion(System.currentTimeMillis());
    if (column != null) {
      deletion.setPredicate(new SlicePredicate().setColumn_names(Arrays.asList(new byte[][]{column})));
    }
    columnFamilyMutations.add(new Mutation().setDeletion(deletion));
  }
 else {
    log.debug("Insert/update '{0}', size={1}",key,value.length);
    ColumnOrSuperColumn cosc=new ColumnOrSuperColumn();
    cosc.setColumn(new Column(column,value,System.currentTimeMillis()));
    columnFamilyMutations.add(new Mutation().setColumn_or_supercolumn(cosc));
  }
}
