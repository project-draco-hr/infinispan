{
  try {
    if (!config.autoCreateKeyspace)     config.poolProperties.setKeySpace(config.keySpace);
    dataSource=new DataSource(config.getPoolProperties());
    readConsistencyLevel=ConsistencyLevel.valueOf(config.readConsistencyLevel);
    writeConsistencyLevel=ConsistencyLevel.valueOf(config.writeConsistencyLevel);
    entryColumnPath=new ColumnPath(config.entryColumnFamily).setColumn(ENTRY_COLUMN_NAME.getBytes(UTF8Charset));
    entryColumnParent=new ColumnParent(config.entryColumnFamily);
    entryKeyPrefix=ENTRY_KEY_PREFIX + (config.isSharedKeyspace() ? cacheName + "_" : "");
    expirationColumnParent=new ColumnParent(config.expirationColumnFamily);
    expirationKey=ByteBufferUtil.bytes(EXPIRATION_KEY + (config.isSharedKeyspace() ? "_" + cacheName : ""));
    keyMapper=(TwoWayKey2StringMapper)Util.getInstance(config.getKeyMapper());
  }
 catch (  Exception e) {
    throw new ConfigurationException(e);
  }
  if (config.autoCreateKeyspace) {
    log.debug("automatically create keyspace");
    try {
      createKeySpace();
    }
  finally {
      dataSource.close();
    }
    dataSource.setKeySpace(config.keySpace);
  }
  log.debug("cleaning up expired entries...");
  purgeInternal();
  log.debug("started");
  super.start();
}
