{
  Configuration conf=new ConfigurationBuilder().addServer().host(server1.getHotrodEndpoint().getInetAddress().getHostName()).port(server1.getHotrodEndpoint().getPort()).build();
  rcm1=new RemoteCacheManager(conf);
  RemoteCache<String,String> rc1=rcm1.getCache(HOTROD_CACHE_NAME);
  try {
    rcm1.getCache(HOTROD_CACHE_NAME).clear();
    StringBuffer sb=new StringBuffer(30000000);
    for (int i=0; i < 3000000; i++) {
      sb.append("0123456789");
    }
    assertEquals(0,server1.getCacheManager(LOCAL_CACHE_MANAGER).getCache(HOTROD_CACHE_NAME).getNumberOfEntries());
    rc1.put("k1",sb.toString());
    rc1.put("k2",sb.toString());
    assertEquals(sb.toString(),rc1.get("k1"));
    assertEquals(sb.toString(),rc1.get("k2"));
    assertEquals(2,server1.getCacheManager(LOCAL_CACHE_MANAGER).getCache(HOTROD_CACHE_NAME).getNumberOfEntries());
    rc1.put("k3",sb.toString());
    fail("Socket timeout for remote store was set to 1 millis and so a SocketTimeoutException was expected but not thrown.");
  }
 catch (  Exception e) {
    assertTrue(e.getMessage(),e.getMessage().contains("SocketTimeoutException"));
  }
 finally {
    controller.kill(CONTAINER_LOCAL);
  }
}
