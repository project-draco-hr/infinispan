{
  return new BeanBuilder<EmbeddedCacheManager>(beanManager).beanClass(InfinispanExtensionEmbedded.class).addTypes(Object.class,EmbeddedCacheManager.class).scope(ApplicationScoped.class).qualifiers(defaultQualifiers()).beanLifecycle(new ContextualLifecycle<EmbeddedCacheManager>(){
    @Override public EmbeddedCacheManager create(    Bean<EmbeddedCacheManager> bean,    CreationalContext<EmbeddedCacheManager> creationalContext){
      GlobalConfiguration globalConfiguration=new GlobalConfigurationBuilder().globalJmxStatistics().cacheManagerName(CACHE_NAME).build();
      @SuppressWarnings("unchecked") Bean<Configuration> configurationBean=(Bean<Configuration>)beanManager.resolve(beanManager.getBeans(Configuration.class));
      Configuration defaultConfiguration=(Configuration)beanManager.getReference(configurationBean,Configuration.class,beanManager.createCreationalContext(configurationBean));
      return new DefaultCacheManager(globalConfiguration,defaultConfiguration);
    }
    @Override public void destroy(    Bean<EmbeddedCacheManager> bean,    EmbeddedCacheManager instance,    CreationalContext<EmbeddedCacheManager> creationalContext){
      instance.stop();
    }
  }
).create();
}
