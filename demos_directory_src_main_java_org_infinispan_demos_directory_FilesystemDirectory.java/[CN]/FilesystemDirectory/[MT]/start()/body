{
  GlobalConfiguration cfg=GlobalConfiguration.getClusteredDefault();
  manager=new DefaultCacheManager(cfg);
  Configuration config=new Configuration();
  config.setCacheMode(Configuration.CacheMode.DIST_ASYNC);
  config.setNumOwners(1);
  config.setL1CacheEnabled(true);
  manager.defineConfiguration("bela",config);
  cache=manager.getCache("bela");
  boolean looping=true;
  while (looping) {
    int ch=Util.keyPress("[1] put dir [2] remove dir [3] dump [4] get [5] verify [x] exit");
switch (ch) {
case '1':
      String dir=Util.readStringFromStdin("dir: ");
    putDir(dir);
  break;
case '2':
dir=Util.readStringFromStdin("dir: ");
removeDir(dir);
break;
case '3':
int count=0;
long bytes=0;
for (Map.Entry<String,byte[]> entry : cache.entrySet()) {
System.out.println(entry.getKey() + ": " + entry.getValue().length+ " bytes");
count++;
bytes+=entry.getValue().length;
}
System.out.println(count + " files and " + Util.printBytes(bytes));
break;
case '4':
String key=Util.readStringFromStdin("key: ");
byte[] val=cache.get(key);
if (val == null) System.out.println("value for " + key + " not found");
 else System.out.println("val=" + val.length + " bytes");
break;
case '5':
dir=Util.readStringFromStdin("dir: ");
verifyDir(dir);
break;
case 'x':
case 'X':
looping=false;
break;
case -1:
looping=false;
break;
}
}
cache.stop();
}
