{
  log.tracef("About to cleanup orphaned transactions older than %ld ms",configuration.transaction().completedTxTimeout());
  long beginning=timeService.time();
  long orphanedTxTimestamp=beginning - TimeUnit.MILLISECONDS.toNanos(configuration.transaction().completedTxTimeout());
  Set<GlobalTransaction> toKill=new HashSet<GlobalTransaction>();
  for (  Map.Entry<GlobalTransaction,RemoteTransaction> e : remoteTransactions.entrySet()) {
    GlobalTransaction gt=e.getKey();
    RemoteTransaction remoteTx=e.getValue();
    if (remoteTx != null) {
      log.tracef("Checking transaction %s",gt);
      if (remoteTx.getCreationTime() < orphanedTxTimestamp) {
        long duration=timeService.timeDuration(remoteTx.getCreationTime(),beginning,TimeUnit.MILLISECONDS);
        log.warnf("Found and rolling back orphaned transaction: %s. Age %d millis",gt,duration);
        toKill.add(gt);
      }
    }
  }
  rollbackStaleTransactions(toKill);
}
