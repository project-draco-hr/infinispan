{
  return new Callable(){
    @Override public Object call() throws Exception {
      numberCreatedTasks++;
      try {
        if (secondActiveStatusChangerCanStart != null) {
          secondActiveStatusChangerCanStart.countDown();
        }
        pushStateCanFinish.await();
      }
 catch (      InterruptedException e) {
        fail("ActiveStatusModifier interrupted");
      }
      return null;
    }
  }
;
}
