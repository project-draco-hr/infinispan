{
  final boolean isClustered=cache(0).getCacheConfiguration().clustering().cacheMode().isClustered();
  for (int i=0; i < 10; ++i) {
    Person value=new Person();
    value.setName("John");
    value.setAge(i + 30);
    Cache<Object,Person> cache=cache(i % numNodes);
    Object key=isClustered ? new MagicKey(cache) : i;
    cache.put(key,value);
  }
  FilterAndConverter filterAndConverter=new FilterAndConverter<Object,Person>("from org.infinispan.query.test.Person where blurb is null and age <= 31",ReflectionMatcher.class);
  CloseableIterator<Map.Entry<Object,ObjectFilter.FilterResult>> iterator=cache(0).getAdvancedCache().filterEntries(filterAndConverter).converter(filterAndConverter).iterator();
  Map<Object,ObjectFilter.FilterResult> results=mapFromIterator(iterator);
  assertEquals(2,results.size());
  for (  ObjectFilter.FilterResult p : results.values()) {
    assertNull(((Person)p.getInstance()).getBlurb());
    assertTrue(((Person)p.getInstance()).getAge() <= 31);
  }
}
