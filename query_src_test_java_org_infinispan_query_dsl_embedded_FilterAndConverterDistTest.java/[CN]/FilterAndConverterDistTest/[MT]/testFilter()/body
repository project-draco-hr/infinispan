{
  for (int i=0; i < 10; ++i) {
    Cache<Object,Person> cache=cache(i % NUM_NODES,CACHE_NAME);
    Object key=new MagicKey(cache);
    Person value=new Person();
    value.setName("John");
    value.setAge(i + 30);
    cache.put(key,value);
  }
  EntryRetriever<MagicKey,Person> retriever=cache(0,CACHE_NAME).getAdvancedCache().getComponentRegistry().getComponent(EntryRetriever.class);
  FilterAndConverter filterAndConverter=new FilterAndConverter<MagicKey,Person>("from org.infinispan.query.test.Person where blurb is null and age <= 31",ReflectionMatcher.class);
  CloseableIterator<Map.Entry<MagicKey,ObjectFilter.FilterResult>> iterator=retriever.retrieveEntries(filterAndConverter,filterAndConverter,null);
  Map<MagicKey,ObjectFilter.FilterResult> results=mapFromIterator(iterator);
  assertEquals(2,results.size());
  for (  ObjectFilter.FilterResult p : results.values()) {
    assertNull(((Person)p.getInstance()).getBlurb());
    assertTrue(((Person)p.getInstance()).getAge() <= 31);
  }
}
