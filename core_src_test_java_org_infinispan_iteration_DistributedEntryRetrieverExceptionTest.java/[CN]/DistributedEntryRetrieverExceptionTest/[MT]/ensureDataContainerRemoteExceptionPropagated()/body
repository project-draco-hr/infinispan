{
  Cache cache0=cache(0,CACHE_NAME);
  Cache cache1=cache(1,CACHE_NAME);
  DataContainer dataContainer=TestingUtil.extractComponent(cache1,DataContainer.class);
  try {
    Throwable t=new AssertionError();
    DataContainer mockContainer=when(mock(DataContainer.class).iterator()).thenThrow(t).getMock();
    TestingUtil.replaceComponent(cache1,DataContainer.class,mockContainer,true);
    try {
      cache0.getAdvancedCache().filterEntries(AcceptAllKeyValueFilter.getInstance()).iterator().hasNext();
      fail("We should have gotten a CacheException");
    }
 catch (    CacheException e) {
      Throwable cause=e;
      while ((cause=cause.getCause()) != null) {
        if (t.getClass().isInstance(cause)) {
          break;
        }
      }
      assertNotNull("We should have found the throwable as a cause",cause);
    }
  }
  finally {
    TestingUtil.replaceComponent(cache1,DataContainer.class,dataContainer,true);
  }
}
