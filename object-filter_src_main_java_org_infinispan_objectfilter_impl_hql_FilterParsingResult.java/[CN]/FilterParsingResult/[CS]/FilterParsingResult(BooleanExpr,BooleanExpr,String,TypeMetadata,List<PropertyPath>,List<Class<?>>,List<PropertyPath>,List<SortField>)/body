{
  this.whereClause=whereClause;
  this.havingClause=havingClause;
  this.targetEntityName=targetEntityName;
  this.targetEntityMetadata=targetEntityMetadata;
  if (projectedPaths != null && (projectedTypes == null || projectedTypes.size() != projectedPaths.size()) || projectedPaths == null && projectedTypes != null) {
    throw new IllegalArgumentException("projectedPaths and projectedTypes sizes must match");
  }
  this.projectedPaths=projectedPaths == null ? null : projectedPaths.toArray(new PropertyPath[projectedPaths.size()]);
  this.projectedTypes=projectedTypes == null ? null : projectedTypes.toArray(new Class<?>[projectedTypes.size()]);
  this.groupBy=groupBy == null ? null : groupBy.toArray(new PropertyPath[groupBy.size()]);
  this.sortFields=sortFields == null ? null : sortFields.toArray(new SortField[sortFields.size()]);
}
