{
  final boolean onGoingTransaction=getOngoingTransaction() != null;
  if (!onGoingTransaction) {
    tryBegin();
  }
  try {
    InvocationContext context=getInvocationContextWithImplicitTransaction(false,explicitClassLoader,UNBOUNDED);
    Map<K,V> keys=internalGetGroup(groupName,explicitFlags,explicitClassLoader,context);
    Set<Flag> removeFlags=addIgnoreReturnValuesFlag(explicitFlags);
    for (    K key : keys.keySet()) {
      removeInternal(key,removeFlags,context);
    }
    if (!onGoingTransaction) {
      tryCommit();
    }
  }
 catch (  RuntimeException e) {
    if (!onGoingTransaction) {
      tryRollback();
    }
    throw e;
  }
}
