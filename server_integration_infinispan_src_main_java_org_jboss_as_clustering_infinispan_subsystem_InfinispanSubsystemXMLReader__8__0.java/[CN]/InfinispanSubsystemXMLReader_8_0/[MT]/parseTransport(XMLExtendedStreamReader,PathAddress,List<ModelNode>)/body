{
  PathAddress transportAddress=containerAddress.append(ModelKeys.TRANSPORT,ModelKeys.TRANSPORT_NAME);
  ModelNode transport=Util.createAddOperation(transportAddress);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case CHANNEL:
{
        TransportResource.CHANNEL.parseAndSetParameter(value,transport,reader);
        break;
      }
case EXECUTOR:
{
      TransportResource.EXECUTOR.parseAndSetParameter(value,transport,reader);
      break;
    }
case LOCK_TIMEOUT:
{
    TransportResource.LOCK_TIMEOUT.parseAndSetParameter(value,transport,reader);
    break;
  }
case REMOTE_COMMAND_EXECUTOR:
{
  TransportResource.REMOTE_COMMAND_EXECUTOR.parseAndSetParameter(value,transport,reader);
  break;
}
case STRICT_PEER_TO_PEER:
{
TransportResource.STRICT_PEER_TO_PEER.parseAndSetParameter(value,transport,reader);
break;
}
case TOTAL_ORDER_EXECUTOR:
{
TransportResource.TOTAL_ORDER_EXECUTOR.parseAndSetParameter(value,transport,reader);
break;
}
default :
{
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
}
ParseUtils.requireNoContent(reader);
operations.add(transport);
}
