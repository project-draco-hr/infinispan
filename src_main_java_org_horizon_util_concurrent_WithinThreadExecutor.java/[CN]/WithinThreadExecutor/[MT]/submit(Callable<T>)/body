{
  try {
    final T resp=task.call();
    return new Future<T>(){
      public boolean cancel(      boolean mayInterruptIfRunning){
        return false;
      }
      public boolean isCancelled(){
        return false;
      }
      public boolean isDone(){
        return true;
      }
      public T get() throws InterruptedException, ExecutionException {
        return resp;
      }
      public T get(      long timeout,      TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
        return resp;
      }
    }
;
  }
 catch (  Exception e) {
    throw new CacheException(e);
  }
}
