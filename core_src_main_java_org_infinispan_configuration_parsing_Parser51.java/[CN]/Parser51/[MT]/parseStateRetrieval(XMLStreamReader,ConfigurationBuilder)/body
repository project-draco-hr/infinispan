{
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=replaceProperties(reader.getAttributeValue(i));
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    log.stateRetrievalConfigurationDeprecated();
switch (attribute) {
case ALWAYS_PROVIDE_IN_MEMORY_STATE:
      log.alwaysProvideInMemoryStateDeprecated();
    break;
case FETCH_IN_MEMORY_STATE:
  builder.clustering().stateTransfer().fetchInMemoryState(Boolean.parseBoolean(value));
break;
case INITIAL_RETRY_WAIT_TIME:
log.initialRetryWaitTimeDeprecated();
break;
case LOG_FLUSH_TIMEOUT:
log.logFlushTimeoutDeprecated();
break;
case MAX_NON_PROGRESSING_LOG_WRITES:
log.maxProgressingLogWritesDeprecated();
break;
case NUM_RETRIES:
log.numRetriesDeprecated();
break;
case RETRY_WAIT_TIME_INCREASE_FACTOR:
log.retryWaitTimeIncreaseFactorDeprecated();
break;
case TIMEOUT:
builder.clustering().stateTransfer().timeout(Long.parseLong(value));
break;
default :
throw ParseUtils.unexpectedAttribute(reader,i);
}
}
ParseUtils.requireNoContent(reader);
}
