{
  final List<ConfigurationBuilder> configs=configs(2,m);
  withCacheManagers(new MultiCacheManagerCallable(TestCacheManagerFactory.createClusteredCacheManager(configs.get(0)),TestCacheManagerFactory.createClusteredCacheManager(configs.get(1))){
    @Override public void call(){
      final EmbeddedCacheManager cacheManager0=cms[0];
      final EmbeddedCacheManager cacheManager1=cms[1];
      final Cache<String,String> cache0=cacheManager0.getCache();
      final Cache<String,String> cache1=cacheManager1.getCache();
      TestingUtil.blockUntilViewsChanged(TIMEOUT,2,cache0,cache1);
      cache0.put("KEY","VALUE V1");
      assertEquals("VALUE V1",cache1.get("KEY"));
      TestingUtil.killCacheManagers(cacheManager1);
      TestingUtil.blockUntilViewsChanged(TIMEOUT,1,cache0);
      cache0.put("KEY","VALUE V2");
      assertEquals("VALUE V2",cache0.get("KEY"));
      withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.createClusteredCacheManager(configs.get(1))){
        @Override public void call(){
          Cache<String,String> newCache=cm.getCache();
          TestingUtil.blockUntilViewsChanged(TIMEOUT,2,cache0,newCache);
          assertEquals("VALUE V2",newCache.get("KEY"));
        }
      }
);
    }
  }
);
}
