{
  int[] numSegments={1,2,4,8,16,32,64,128,256,512};
  int[] numNodes={1,2,3,4,5,6,7,8,9,10,100,1000};
  int[] numOwners={1,2,3,5};
  DefaultConsistentHashFactory chf=new DefaultConsistentHashFactory();
  Hash hashFunction=new MurmurHash3();
  for (  int nn : numNodes) {
    List<Address> nodes=new ArrayList<Address>(nn);
    for (int j=0; j < nn; j++) {
      nodes.add(new TestAddress(j));
    }
    for (    int ns : numSegments) {
      if (nn < ns) {
        for (        int no : numOwners) {
          DefaultConsistentHash ch=chf.create(hashFunction,no,ns,nodes);
          checkDistribution(ch,false);
          testConsistentHashModifications(chf,ch);
        }
      }
    }
  }
}
