{
  addNode(a0,"m0",null,null);
  addNode(a1,"m1",null,null);
  addNode(a2,"m0",null,null);
  addNode(a3,"m1",null,null);
  setAddresses();
  assertLocation(ch.locate(a0,1),true,a0);
  assertLocation(ch.locate(a1,1),true,a1);
  assertLocation(ch.locate(a2,1),true,a2);
  assertLocation(ch.locate(a3,1),true,a3);
  assertLocation(ch.getStateProvidersOnLeave(a0,1),false);
  assertLocation(ch.getStateProvidersOnLeave(a1,1),false);
  assertLocation(ch.getStateProvidersOnLeave(a2,1),false);
  assertLocation(ch.getStateProvidersOnLeave(a3,1),false);
  assertLocation(ch.locate(a0,2),true,a0,a1);
  assertLocation(ch.locate(a1,2),true,a1,a2);
  assertLocation(ch.locate(a2,2),true,a2,a3);
  assertLocation(ch.locate(a3,2),true,a3,a0);
  assertLocation(ch.getStateProvidersOnLeave(a0,2),false,a1,a3);
  assertLocation(ch.getStateProvidersOnLeave(a1,2),false,a0,a2);
  assertLocation(ch.getStateProvidersOnLeave(a2,2),false,a3,a1);
  assertLocation(ch.getStateProvidersOnLeave(a3,2),false,a0,a2);
  assertLocation(ch.locate(a0,3),true,a0,a1,a3);
  assertLocation(ch.locate(a1,3),true,a1,a2,a0);
  assertLocation(ch.locate(a2,3),true,a2,a3,a1);
  assertLocation(ch.locate(a3,3),true,a3,a0,a2);
  assertLocation(ch.getStateProvidersOnLeave(a0,3),false,a1,a3);
  assertLocation(ch.getStateProvidersOnLeave(a1,3),false,a0,a2);
  assertLocation(ch.getStateProvidersOnLeave(a2,3),false,a3,a1);
  assertLocation(ch.getStateProvidersOnLeave(a3,3),false,a0,a2);
}
