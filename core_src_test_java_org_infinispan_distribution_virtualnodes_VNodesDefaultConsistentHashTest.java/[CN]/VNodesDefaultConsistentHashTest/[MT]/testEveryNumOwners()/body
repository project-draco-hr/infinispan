{
  int[] numVirtualNodesList={2,10,100};
  for (  int numVirtualNodes : numVirtualNodesList) {
    for (int nodesCount=1; nodesCount < 10; nodesCount++) {
      ArrayList servers=new ArrayList(nodesCount);
      for (int i=0; i < nodesCount; i++) {
        servers.add(new TestAddress(i * 1000));
      }
      DefaultConsistentHash ch=createConsistentHash(servers,numVirtualNodes);
      List<Address> sortedServers=new ArrayList<Address>(ch.getCaches());
      for (int numOwners=1; numOwners < nodesCount; numOwners++) {
        for (int i=0; i < nodesCount; i++) {
          List<Address> owners=ch.locate(sortedServers.get(i),numOwners);
          assertEquals(owners.size(),numOwners);
          assertEquals(owners.get(0),sortedServers.get(i));
          assertEquals(new HashSet<Address>(owners).size(),numOwners);
        }
      }
      for (int i=0; i < nodesCount; i++) {
        List<Address> owners=ch.locate(sortedServers.get(i),nodesCount + 1);
        assertEqualsNoOrder(owners.toArray(),servers.toArray());
      }
    }
  }
}
