{
synchronized (lock) {
    hashFactory.init(cfg,classLoader);
    boolean pingOnStartup=cfg.getPingOnStartup();
    servers=Collections.unmodifiableCollection(new ArrayList(staticConfiguredServers));
    String balancerClass=cfg.getRequestBalancingStrategy();
    balancer=(RequestBalancingStrategy)Util.getInstance(balancerClass,classLoader);
    tcpNoDelay=cfg.getTcpNoDelay();
    soTimeout=cfg.getSoTimeout();
    connectTimeout=cfg.getConnectTimeout();
    if (log.isDebugEnabled()) {
      log.debugf("Statically configured servers: %s",staticConfiguredServers);
      log.debugf("Load balancer class: %s",balancerClass);
      log.debugf("Tcp no delay = %b; client socket timeout = %d ms; connect timeout = %d ms",tcpNoDelay,soTimeout,connectTimeout);
    }
    PropsKeyedObjectPoolFactory<SocketAddress,TcpTransport> poolFactory=new PropsKeyedObjectPoolFactory<SocketAddress,TcpTransport>(new TransportObjectFactory(codec,this,topologyId,pingOnStartup),cfg.getProperties());
    createAndPreparePool(staticConfiguredServers,poolFactory);
    balancer.setServers(servers);
    updateTransportCount();
  }
  if (cfg.getPingOnStartup())   pingServers(staticConfiguredServers);
}
