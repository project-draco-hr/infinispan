{
synchronized (lock) {
    if (trace)     log.tracef("Trying to switch cluster away from '%s'",failedClusterName);
    if (clusters.isEmpty()) {
      log.debugf("No alternative clusters configured, so can't switch cluster");
      return ClusterSwitchStatus.NOT_SWITCHED;
    }
    String currentClusterName=this.currentClusterName;
    if (!isSwitchedClusterNotAvailable(failedClusterName,currentClusterName)) {
      log.debugf("Cluster already switched from failed cluster `%s` to `%s`, try again",failedClusterName,currentClusterName);
      return ClusterSwitchStatus.IN_PROGRESS;
    }
    if (topologyInfo.isTopologyValid(cacheName)) {
      if (trace)       log.tracef("Switching clusters, failed cluster is '%s' and current cluster name is '%s'",failedClusterName,currentClusterName);
      List<ClusterInfo> candidateClusters=new ArrayList<>();
      for (      ClusterInfo cluster : clusters) {
        String clusterName=cluster.clusterName;
        if (!clusterName.equals(failedClusterName))         candidateClusters.add(cluster);
      }
      for (int i=0; i < candidateClusters.size(); i++) {
        ClusterInfo cluster=candidateClusters.get(i % candidateClusters.size());
        boolean alive=checkServersAlive(cluster.clusterAddresses);
        if (alive) {
          topologyAge.incrementAndGet();
          Collection<SocketAddress> servers=updateTopologyInfo(cluster.clusterAddresses,true);
          if (!servers.isEmpty()) {
            FailoverRequestBalancingStrategy balancer=getOrCreateIfAbsentBalancer(cacheName);
            balancer.setServers(servers);
          }
          topologyInfo.setTopologyId(cacheName,HotRodConstants.SWITCH_CLUSTER_TOPOLOGY);
          this.currentClusterName=cluster.clusterName;
          if (log.isInfoEnabled()) {
            if (!cluster.clusterName.equals(DEFAULT_CLUSTER_NAME))             log.switchedToCluster(cluster.clusterName);
 else             log.switchedBackToMainCluster();
          }
          return ClusterSwitchStatus.SWITCHED;
        }
      }
      log.debugf("All cluster addresses viewed and none worked: %s",clusters);
      return ClusterSwitchStatus.NOT_SWITCHED;
    }
    return ClusterSwitchStatus.IN_PROGRESS;
  }
}
