{
  hashFactory.init(props);
  String pingOnStartup=props.getProperty("ping-on-startup");
  servers=staticConfiguredServers;
  String balancerClass=props.getProperty("request-balancing-strategy",RoundRobinBalancingStrategy.class.getName());
  balancer=(RequestBalancingStrategy)VHelper.newInstance(balancerClass);
  tcpNoDelay=Boolean.valueOf(props.getProperty("tcp-no-delay","true"));
  if (log.isDebugEnabled())   log.debug("TCP no delay flag value is: {0}",tcpNoDelay);
  boolean skipPingOnStartup=pingOnStartup != null && !Boolean.valueOf(pingOnStartup);
  log.trace("'ping-on-startup' set to " + !skipPingOnStartup);
  PropsKeyedObjectPoolFactory poolFactory=new PropsKeyedObjectPoolFactory(new TransportObjectFactory(this,topologyId,!skipPingOnStartup),props);
  createAndPreparePool(staticConfiguredServers,poolFactory);
  balancer.setServers(servers);
}
