{
  Collection<SocketAddress> servers=topologyInfo.getServers();
  Set<SocketAddress> addedServers=new HashSet<>(newServers);
  addedServers.removeAll(servers);
  Set<SocketAddress> failedServers=new HashSet<>(servers);
  failedServers.removeAll(newServers);
  if (log.isTraceEnabled()) {
    log.tracef("Current list: %s",servers);
    log.tracef("New list: %s",newServers);
    log.tracef("Added servers: %s",addedServers);
    log.tracef("Removed servers: %s",failedServers);
  }
  if (failedServers.isEmpty() && addedServers.isEmpty()) {
    log.debug("Same list of servers, not changing the pool");
    return InfinispanCollections.emptyList();
  }
  for (  SocketAddress server : addedServers) {
    log.newServerAdded(server);
    try {
      connectionPool.addObject(server);
    }
 catch (    Exception e) {
      if (!quiet)       log.failedAddingNewServer(server,e);
    }
  }
  for (  SocketAddress server : failedServers) {
    log.removingServer(server);
    connectionPool.clear(server);
  }
  servers=Collections.unmodifiableList(new ArrayList(newServers));
  topologyInfo.updateServers(servers);
  if (!failedServers.isEmpty()) {
    listenerNotifier.failoverClientListeners(failedServers);
  }
  return servers;
}
