{
  boolean trace=log.isTraceEnabled();
  if (trace)   log.trace("Get values metrics");
  EmsConnection conn=getConnection();
  for (  MeasurementScheduleRequest req : metrics) {
    if (trace)     log.trace("Inspect metric {0}",req);
    String metric=req.getName();
    try {
      String abbrev=metric.substring(0,metric.indexOf("."));
      String mbean=myNamePattern + abbrev;
      EmsBean bean=conn.getBean(mbean);
      if (bean != null) {
        if (trace)         log.trace("Retrieved mbean with name {0}",mbean);
        bean.refreshAttributes();
        String attName=metric.substring(metric.indexOf(".") + 1);
        EmsAttribute att=bean.getAttribute(attName);
        Object o=att.getValue();
        Class attrType=att.getTypeClass();
        DataType type=req.getDataType();
        if (type == DataType.MEASUREMENT) {
          if (trace)           log.trace("Metric ({0}) is measurement with value {1}",req.getName(),o);
          if (attrType.equals(Long.class) || attrType.equals(long.class)) {
            Long tmp=(Long)o;
            MeasurementDataNumeric res=new MeasurementDataNumeric(req,Double.valueOf(tmp));
            report.addData(res);
          }
 else           if (attrType.equals(Double.class) || attrType.equals(double.class)) {
            Double tmp=(Double)o;
            MeasurementDataNumeric res=new MeasurementDataNumeric(req,tmp);
            report.addData(res);
          }
 else           if (attrType.equals(Integer.class) || attrType.equals(int.class)) {
            Integer tmp=(Integer)o;
            MeasurementDataNumeric res=new MeasurementDataNumeric(req,Double.valueOf(tmp));
            report.addData(res);
          }
        }
 else         if (type == DataType.TRAIT) {
          String value=(String)o;
          if (trace)           log.trace("Metric ({0}) is trait with value {1}",req.getName(),value);
          MeasurementDataTrait res=new MeasurementDataTrait(req,value);
          report.addData(res);
        }
      }
 else {
        if (trace)         log.trace("No mbean found with name {0}",mbean);
      }
    }
 catch (    Exception e) {
      log.warn("getValues failed for " + metric + " : ",e);
    }
  }
}
