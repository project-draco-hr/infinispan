{
  boolean unique=true;
  while (lastValue < SHARED_COUNTER_TEST_MAX_COUNTER_VALUE && !Thread.interrupted()) {
    boolean success=false;
    try {
      transactionManager.begin();
      Integer value=cache.get(SHARED_COUNTER_TEST_KEY);
      value=value + 1;
      lastValue=value;
      cache.put(SHARED_COUNTER_TEST_KEY,value);
      transactionManager.commit();
      unique=uniqueValuesSet.add(value);
      success=true;
    }
 catch (    Exception e) {
    }
 finally {
      if (!success) {
        try {
          if (transactionManager.getStatus() != Status.STATUS_NO_TRANSACTION)           transactionManager.rollback();
        }
 catch (        Throwable t) {
          log.trace("Exception during rollback",t);
        }
      }
      assertTrue("Duplicate value found in " + address(cache) + " (value="+ lastValue+ ")",unique);
    }
  }
  return unique;
}
