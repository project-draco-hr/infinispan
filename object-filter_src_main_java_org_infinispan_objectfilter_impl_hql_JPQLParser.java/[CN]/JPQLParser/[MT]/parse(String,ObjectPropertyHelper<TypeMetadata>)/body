{
  QueryResolverProcessor resolverProcessor=new QueryResolverProcessor(new FilterQueryResolverDelegate(propertyHelper));
  FilterPredicateFactory predicateFactory=new FilterPredicateFactory(propertyHelper);
  SingleEntityQueryBuilder<BooleanExpr> queryBuilder=SingleEntityQueryBuilder.getInstance(predicateFactory,propertyHelper);
  SingleEntityHavingQueryBuilderImpl havingQueryBuilder=new SingleEntityHavingQueryBuilderImpl(propertyHelper.getEntityNamesResolver(),propertyHelper);
  FilterRendererDelegate<TypeMetadata> rendererDelegate=new FilterRendererDelegate<>(queryString,propertyHelper,queryBuilder,havingQueryBuilder,makeParamPlaceholderMap());
  QueryRendererProcessor rendererProcessor=new QueryRendererProcessor(rendererDelegate);
  AstProcessingChain<FilterParsingResult<TypeMetadata>> chain=new AstProcessingChain<FilterParsingResult<TypeMetadata>>(){
    @Override public Iterator<AstProcessor> iterator(){
      return Arrays.asList(resolverProcessor,rendererProcessor).iterator();
    }
    @Override public FilterParsingResult<TypeMetadata> getResult(){
      return rendererDelegate.getResult();
    }
  }
;
  return queryParser.parseQuery(queryString,chain);
}
