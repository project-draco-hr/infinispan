{
  if (retval instanceof Future) {
    return (Future<X>)retval;
  }
 else {
    return new Future<X>(){
      public boolean cancel(      boolean mayInterruptIfRunning){
        return true;
      }
      public boolean isCancelled(){
        return false;
      }
      public boolean isDone(){
        return true;
      }
      @SuppressWarnings("unchecked") public X get() throws InterruptedException, ExecutionException {
        return (X)retval;
      }
      public X get(      long timeout,      TimeUnit unit) throws InterruptedException, ExecutionException, TimeoutException {
        return get();
      }
    }
;
  }
}
