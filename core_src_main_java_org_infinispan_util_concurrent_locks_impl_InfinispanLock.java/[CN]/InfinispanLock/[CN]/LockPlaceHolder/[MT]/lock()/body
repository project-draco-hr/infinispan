{
  do {
    LockState currentState=lockState;
switch (currentState) {
case WAITING:
      checkTimeout();
    await(notifier,timeService.remainingTime(timeout,TimeUnit.NANOSECONDS),TimeUnit.NANOSECONDS);
  break;
case ACQUIRED:
return;
case RELEASED:
throw new IllegalStateException("Lock already released!");
case TIMED_OUT:
cleanup();
throw new TimeoutException("Timeout waiting for lock.");
case DEADLOCKED:
cleanup();
throw new DeadlockDetectedException("DeadLock detected");
default :
throw new IllegalStateException("Unknown lock state: " + currentState);
}
}
 while (true);
}
