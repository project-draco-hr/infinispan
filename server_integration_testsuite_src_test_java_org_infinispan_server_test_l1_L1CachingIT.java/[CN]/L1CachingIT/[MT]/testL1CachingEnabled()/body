{
  int numKeys=10;
  for (int i=0; i < numKeys; i++) {
    mc1.set("Key" + i,"Value" + i);
  }
  assumeTrue("Distribution of entries is wrong (at least unexpected).",server1.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries() > 0);
  assumeTrue("Distribution of entries is wrong (at least unexpected).",server2.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries() > 0);
  assertEquals("More entries in caches than expected.",numKeys,server1.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries() + server2.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries());
  for (int i=0; i < numKeys; i++) {
    assertEquals("Value" + i,mc2.get("Key" + i));
  }
  assertEquals("Number of hits on server 1 is wrong.",0,server1.getCacheManager("clustered").getCache("memcachedCache").getHits());
  assertEquals("Number of hits on server 2 is wrong.",numKeys,server2.getCacheManager("clustered").getCache("memcachedCache").getHits());
  assertEquals("Number of stores on server 1 is wrong.",numKeys,server1.getCacheManager("clustered").getCache("memcachedCache").getStores());
  assertEquals("Number of stores on server 2 is wrong.",0,server2.getCacheManager("clustered").getCache("memcachedCache").getStores());
  assertTrue("The are no entries in L1 cache! L1 seems to be disabled! Check TRACE [org.infinispan" + ".factories.ComponentRegistry] output.",server1.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries() + server2.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries() > numKeys);
  for (int i=0; i < numKeys; i++) {
    assertEquals("Value" + i,mc1.get("Key" + i));
  }
  assertEquals("Number of hits on server 1 is wrong.",numKeys,server1.getCacheManager("clustered").getCache("memcachedCache").getHits());
  assertEquals("Number of hits on server 2 is wrong.",numKeys,server2.getCacheManager("clustered").getCache("memcachedCache").getHits());
  assertEquals("Number of stores on server 1 is wrong.",numKeys,server1.getCacheManager("clustered").getCache("memcachedCache").getStores());
  assertEquals("Number of stores on server 2 is wrong.",0,server2.getCacheManager("clustered").getCache("memcachedCache").getStores());
  assertEquals("The are no entries in L1 cache! L1 seems to be disabled! Check TRACE [org.infinispan" + ".factories.ComponentRegistry] output.",2 * numKeys,server1.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries() + server2.getCacheManager("clustered").getCache("memcachedCache").getNumberOfEntries());
}
