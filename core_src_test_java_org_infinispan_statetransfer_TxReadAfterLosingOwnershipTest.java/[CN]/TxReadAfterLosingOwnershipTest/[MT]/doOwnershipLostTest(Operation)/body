{
  log.debug("Initialize cache");
  cache(0).put("key","value0");
  assertCachesKeyValue("key","value0");
  StateConsumerImpl stateConsumer=(StateConsumerImpl)TestingUtil.extractComponent(cache(1),StateConsumer.class);
  Listener listener=new Listener();
  stateConsumer.setKeyInvalidationListener(listener);
  log.debug("Add a 3rd node");
  addClusterEnabledCacheManager(createConfigurationBuilder());
  Future<Void> join=fork(new Callable<Void>(){
    @Override public Void call() throws Exception {
      waitForClusterToForm();
      log.debug("3rd has join");
      return null;
    }
  }
);
  log.debug("Waiting for command to block");
  listener.notifier.await();
  log.debug("Set a new value");
  operation.update(cache(1));
  assertCachesKeyValue("key",operation.finalValue(),cache(0),cache(1));
  listener.wait.countDown();
  log.debug("Waiting for the 3rd node to join");
  join.get();
  assertCachesKeyValue("key",operation.finalValue());
}
