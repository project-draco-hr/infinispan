{
  checkNotNull(metadataCache,"metadataCache");
  checkNotNull(chunksCache,"chunksCache");
  checkNotNull(indexName,"indexName");
  checkNotNull(lf,"LockFactory");
  checkNotNull(readLocker,"SegmentReadLocker");
  if (chunkSize <= 0)   throw new IllegalArgumentException("chunkSize must be a positive integer");
  this.metadataCache=(AdvancedCache<FileCacheKey,FileMetadata>)metadataCache.getAdvancedCache().withFlags(Flag.SKIP_INDEXING);
  this.chunksCache=(AdvancedCache<ChunkCacheKey,Object>)chunksCache.getAdvancedCache().withFlags(Flag.SKIP_INDEXING);
  this.indexName=indexName;
  this.lockFactory=lf;
  this.lockFactory.setLockPrefix(this.getLockID());
  this.chunkSize=chunkSize;
  this.fileOps=new FileListOperations(this.metadataCache,indexName);
  this.readLocks=readLocker;
}
