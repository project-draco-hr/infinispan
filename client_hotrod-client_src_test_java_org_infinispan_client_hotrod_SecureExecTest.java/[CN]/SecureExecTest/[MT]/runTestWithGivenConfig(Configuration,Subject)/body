{
  remoteCacheManager=new RemoteCacheManager(config);
  Map<String,String> params=new HashMap<>();
  params.put("a","guinness");
  Security.doAs(ADMIN,new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      ScriptingManager scriptingManager=hotrodServer.getCacheManager().getGlobalComponentRegistry().getComponent(ScriptingManager.class);
      try (InputStream is=this.getClass().getResourceAsStream("/testRole.js")){
        String script=TestingUtil.loadFileAsString(is);
        scriptingManager.addScript("testRole.js",script);
      }
       return null;
    }
  }
);
  Security.doAs(subject,new PrivilegedExceptionAction<Void>(){
    @Override public Void run() throws Exception {
      Integer result=remoteCacheManager.getCache().execute("testRole.js",params);
      assertEquals("guinness",remoteCacheManager.getCache().get("a"));
      return null;
    }
  }
);
}
