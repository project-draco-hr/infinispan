{
  String config=INFINISPAN_START_TAG_NO_SCHEMA + "<cache-container default-cache=\"default\">" + "   <local-cache name=\"default\">\n"+ "      <data-container key-equivalence=\"org.infinispan.commons.equivalence.ByteArrayEquivalence\"/>\n"+ "   </local-cache>\n"+ "</cache-container>"+ INFINISPAN_END_TAG;
  InputStream is=new ByteArrayInputStream(config.getBytes());
  withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromStream(is)){
    @Override public void call(){
      Configuration cfg=cm.getDefaultCacheConfiguration();
      assertTrue(cfg.dataContainer().<byte[]>keyEquivalence() instanceof ByteArrayEquivalence);
      assertTrue(cfg.dataContainer().valueEquivalence() instanceof AnyEquivalence);
    }
  }
);
  config=INFINISPAN_START_TAG_NO_SCHEMA + "<cache-container default-cache=\"default\">" + "   <local-cache name=\"default\">\n"+ "      <data-container key-equivalence=\"org.infinispan.commons.equivalence.ByteArrayEquivalence\" \n"+ "                      value-equivalence=\"org.infinispan.commons.equivalence.ByteArrayEquivalence\" />\n"+ "   </local-cache>\n"+ "</cache-container>"+ INFINISPAN_END_TAG;
  is=new ByteArrayInputStream(config.getBytes());
  withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromStream(is)){
    @Override public void call(){
      Configuration cfg=cm.getDefaultCacheConfiguration();
      assertTrue(cfg.dataContainer().<byte[]>keyEquivalence() instanceof ByteArrayEquivalence);
      assertTrue(cfg.dataContainer().<byte[]>valueEquivalence() instanceof ByteArrayEquivalence);
    }
  }
);
}
