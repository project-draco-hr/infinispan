{
  String config=INFINISPAN_START_TAG_NO_SCHEMA + "<default>\n" + "<dataContainer keyEquivalence=\"org.infinispan.util.ByteArrayEquivalence\"/>\n"+ "</default>\n"+ INFINISPAN_END_TAG;
  InputStream is=new ByteArrayInputStream(config.getBytes());
  withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromStream(is)){
    @Override public void call(){
      Configuration cfg=cm.getDefaultCacheConfiguration();
      assertTrue(cfg.dataContainer().<byte[]>keyEquivalence() instanceof ByteArrayEquivalence);
      assertTrue(cfg.dataContainer().valueEquivalence() instanceof AnyEquivalence);
    }
  }
);
  config=INFINISPAN_START_TAG_NO_SCHEMA + "<default>\n" + "<dataContainer keyEquivalence=\"org.infinispan.util.ByteArrayEquivalence\" "+ "valueEquivalence=\"org.infinispan.util.ByteArrayEquivalence\" />\n"+ "</default>\n"+ INFINISPAN_END_TAG;
  is=new ByteArrayInputStream(config.getBytes());
  withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromStream(is)){
    @Override public void call(){
      Configuration cfg=cm.getDefaultCacheConfiguration();
      assertTrue(cfg.dataContainer().<byte[]>keyEquivalence() instanceof ByteArrayEquivalence);
      assertTrue(cfg.dataContainer().<byte[]>valueEquivalence() instanceof ByteArrayEquivalence);
    }
  }
);
}
