{
  String config=INFINISPAN_START_TAG_NO_SCHEMA + "<default>\n" + "<storeAsBinary enabled=\"true\" defensive=\"true\" />\n"+ "</default>\n"+ INFINISPAN_END_TAG;
  InputStream is=new ByteArrayInputStream(config.getBytes());
  withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromStream(is)){
    @Override public void call(){
      Configuration cfg=cm.getDefaultCacheConfiguration();
      assertTrue(cfg.storeAsBinary().enabled());
      assertTrue(cfg.storeAsBinary().defensive());
    }
  }
);
  config=INFINISPAN_START_TAG_NO_SCHEMA + "<default>\n" + "<storeAsBinary enabled=\"true\" defensive=\"false\" />\n"+ "</default>\n"+ INFINISPAN_END_TAG;
  is=new ByteArrayInputStream(config.getBytes());
  withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromStream(is)){
    @Override public void call(){
      Configuration cfg=cm.getDefaultCacheConfiguration();
      assertTrue(cfg.storeAsBinary().enabled());
      assertTrue(!cfg.storeAsBinary().defensive());
    }
  }
);
}
