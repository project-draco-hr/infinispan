{
  if (this.connection == null) {
    try {
      ConnectionSettings connectionSettings=new ConnectionSettings();
      String connectionTypeDescriptorClass=pluginConfig.getSimple(JMXDiscoveryComponent.CONNECTION_TYPE).getStringValue();
      PropertySimple serverUrl=pluginConfig.getSimple(JMXDiscoveryComponent.CONNECTOR_ADDRESS_CONFIG_PROPERTY);
      connectionSettings.initializeConnectionType((ConnectionTypeDescriptor)Class.forName(connectionTypeDescriptorClass).newInstance());
      if (null != serverUrl) {
        connectionSettings.setServerUrl(serverUrl.getStringValue());
      }
      if (connectionSettings.getAdvancedProperties() == null) {
        connectionSettings.setAdvancedProperties(new Properties());
      }
      ConnectionFactory connectionFactory=new ConnectionFactory();
      ConnectionProvider connectionProvider=connectionFactory.getConnectionProvider(connectionSettings);
      this.connection=connectionProvider.connect();
      this.connection.loadSynchronous(false);
      this.consecutiveConnectionErrors=0;
      if (log.isDebugEnabled())       log.debug("Successfully made connection to the remote server instance");
    }
 catch (    Exception e) {
      if (connection != null) {
        if (log.isDebugEnabled())         log.debug("Connection created but an exception was thrown. Closing the connection.",e);
        connection.close();
        connection=null;
      }
      if (consecutiveConnectionErrors % 10 == 0) {
        log.warn("Could not establish connection to the Infinispan instance [" + (consecutiveConnectionErrors + 1) + "] times.",e);
      }
      if (log.isDebugEnabled())       log.debug("Could not connect to the Infinispan instance for resource ",e);
      consecutiveConnectionErrors++;
      throw e;
    }
  }
  return connection;
}
