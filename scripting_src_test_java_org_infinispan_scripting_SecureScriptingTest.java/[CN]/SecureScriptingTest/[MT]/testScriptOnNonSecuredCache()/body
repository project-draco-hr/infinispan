{
  Security.doAs(ADMIN,new PrivilegedAction<Void>(){
    @Override public Void run(){
      cacheManager.defineConfiguration("nonSecuredCache",TestCacheManagerFactory.getDefaultCacheConfiguration(true).build());
      return null;
    }
  }
);
  cache("nonSecuredCache").put("a","value");
  assertEquals("value",cacheManager.getCache("nonSecuredCache").get("a"));
  String result=Security.doAs(RUNNER,new PrivilegedExceptionAction<String>(){
    @Override public String run() throws Exception {
      return (String)scriptingManager.runScript("test.js",new TaskContext().addParameter("a","a").cache(cache("nonSecuredCache"))).get();
    }
  }
);
  assertEquals("a",result);
  assertEquals("a",cacheManager.getCache("nonSecuredCache").get("a"));
}
