{
  lock.lock();
  try {
    for (int i=0; i < orderedStates.size(); i++) {
      State state=stateMap.get(orderedStates.get(i));
      if (state == null) {
        throw new IllegalArgumentException("Cannot order a non-existing state: " + orderedStates.get(i));
      }
      if (i > 0) {
        state.dependencies.add(orderedStates.get(i - 1));
      }
    }
    verifyCycles();
    log.tracef("Order changed: %s",getOrderString());
  }
  finally {
    lock.unlock();
  }
}
