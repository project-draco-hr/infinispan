{
switch (type) {
case JOIN:
    return clusterTopologyManager.handleJoin(cacheName,sender,joinInfo,viewId);
case LEAVE:
  clusterTopologyManager.handleLeave(cacheName,sender,viewId);
return null;
case REBALANCE_CONFIRM:
clusterTopologyManager.handleRebalanceCompleted(cacheName,sender,topologyId,throwable,viewId);
return null;
case CH_UPDATE:
localTopologyManager.handleTopologyUpdate(cacheName,new CacheTopology(topologyId,rebalanceId,currentCH,pendingCH,actualMembers),availabilityMode,viewId,sender);
return null;
case STABLE_TOPOLOGY_UPDATE:
localTopologyManager.handleStableTopologyUpdate(cacheName,new CacheTopology(topologyId,rebalanceId,currentCH,pendingCH,actualMembers),viewId);
return null;
case REBALANCE_START:
localTopologyManager.handleRebalance(cacheName,new CacheTopology(topologyId,rebalanceId,currentCH,pendingCH,actualMembers),viewId,sender);
return null;
case GET_STATUS:
return localTopologyManager.handleStatusRequest(viewId);
case POLICY_GET_STATUS:
return clusterTopologyManager.isRebalancingEnabled(cacheName);
case POLICY_ENABLE:
clusterTopologyManager.setRebalancingEnabled(cacheName,true);
return true;
case POLICY_DISABLE:
clusterTopologyManager.setRebalancingEnabled(cacheName,false);
return true;
case AVAILABILITY_MODE_CHANGE:
clusterTopologyManager.forceAvailabilityMode(cacheName,availabilityMode);
return true;
case REBALANCING_GET_STATUS:
return clusterTopologyManager.getRebalancingStatus(cacheName);
default :
throw new CacheException("Unknown cache topology control command type " + type);
}
}
