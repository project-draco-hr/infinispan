{
  Cache<Object,Object> cache1, cache2;
  cache1=createCacheManager().getCache(cacheName);
  writeInitialData(cache1);
  DelayTransfer value=new DelayTransfer();
  cache1.put("delay",value);
  value.enableDelay();
  WritingTask writingTask=new WritingTask(cache1,tx);
  Future<Integer> future=fork(writingTask);
  verifyInitialData(cache1);
  JoiningNode node2=new JoiningNode(createCacheManager());
  cache2=node2.getCache(cacheName);
  node2.waitForJoin(60000,cache1,cache2);
  writingTask.stop();
  int count=future.get(60,SECONDS);
  verifyInitialData(cache1);
  node2.verifyStateTransfer(new CacheVerifier(cache2));
  for (int c=0; c < count; c++) {
    assertEquals(c,cache2.get("test" + c));
  }
}
