{
  Cache<Object,Object> cache1, cache2, cache3;
  cache1=createCacheManager().getCache(cacheName);
  cache3=createCacheManager().getCache(cacheName);
  TestingUtil.blockUntilViewsReceived(60000,cache1,cache3);
  writeInitialData(cache1);
  DelayTransfer value=new DelayTransfer();
  cache1.put("delay",value);
  value.enableDelay();
  WritingThread writerThread=new WritingThread(cache3,tx);
  writerThread.start();
  JoiningNode node2=new JoiningNode(createCacheManager());
  cache2=node2.getCache(cacheName);
  node2.waitForJoin(60000,cache1,cache2,cache3);
  writerThread.stopThread();
  writerThread.join();
  node2.verifyStateTransfer(new CacheVerifier(cache2));
  int count=writerThread.result();
  for (int c=0; c < count; c++) {
    assertEquals(c,cache2.get("test" + c));
  }
}
