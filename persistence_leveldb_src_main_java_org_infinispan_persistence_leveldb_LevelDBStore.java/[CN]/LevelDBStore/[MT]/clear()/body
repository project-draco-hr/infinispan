{
  long count=0;
  boolean destroyDatabase=false;
  try {
    semaphore.acquire();
  }
 catch (  InterruptedException e) {
    throw new PersistenceException("Cannot acquire semaphore",e);
  }
  try {
    if (stopped) {
      throw new PersistenceException("LevelDB is stopped");
    }
    DBIterator it=db.iterator(new ReadOptions().fillCache(false));
    if (configuration.clearThreshold() <= 0) {
      try {
        for (it.seekToFirst(); it.hasNext(); ) {
          Map.Entry<byte[],byte[]> entry=it.next();
          db.delete(entry.getKey());
          count++;
          if (count > configuration.clearThreshold()) {
            destroyDatabase=true;
            break;
          }
        }
      }
  finally {
        try {
          it.close();
        }
 catch (        IOException e) {
          log.warnUnableToCloseDbIterator(e);
        }
      }
    }
 else {
      destroyDatabase=true;
    }
  }
  finally {
    semaphore.release();
  }
  if (destroyDatabase) {
    try {
      reinitAllDatabases();
    }
 catch (    IOException e) {
      throw new PersistenceException(e);
    }
  }
}
