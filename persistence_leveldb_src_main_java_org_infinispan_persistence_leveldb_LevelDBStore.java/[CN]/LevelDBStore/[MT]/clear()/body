{
  long count=0;
  DBIterator it=db.iterator(new ReadOptions().fillCache(false));
  boolean destroyDatabase=false;
  if (configuration.clearThreshold() <= 0) {
    try {
      for (it.seekToFirst(); it.hasNext(); ) {
        Map.Entry<byte[],byte[]> entry=it.next();
        db.delete(entry.getKey());
        count++;
        if (count > configuration.clearThreshold()) {
          destroyDatabase=true;
          break;
        }
      }
    }
  finally {
      try {
        it.close();
      }
 catch (      IOException e) {
        log.warnUnableToCloseDbIterator(e);
      }
    }
  }
 else {
    destroyDatabase=true;
  }
  if (destroyDatabase) {
    try {
      reinitAllDatabases();
    }
 catch (    IOException e) {
      throw new PersistenceException(e);
    }
  }
}
