{
  ecs.submit(new Callable<Void>(){
    @Override public Void call() throws Exception {
      try {
        long now=ctx.getTimeService().wallClockTime();
        for (        Map.Entry<byte[],byte[]> entry : batch) {
          if (taskContext.isStopped()) {
            break;
          }
          Object key=unmarshall(entry.getKey());
          if (filter == null || filter.accept(key)) {
            MarshalledEntry unmarshall=(MarshalledEntry)unmarshall(entry.getValue());
            boolean isExpired=unmarshall.getMetadata() != null && unmarshall.getMetadata().isExpired(now);
            if (!isExpired) {
              cacheLoaderTask.processEntry(unmarshall,taskContext);
            }
          }
        }
      }
 catch (      Exception e) {
        log.errorExecutingParallelStoreTask(e);
        throw e;
      }
      return null;
    }
  }
);
}
