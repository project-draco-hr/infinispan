{
  log.tracef("handleTopologyAffectedCommand for command %s",command);
  if (isLocalOnly(ctx,command)) {
    return invokeNextInterceptor(ctx,command);
  }
  updateTopologyIdAndWaitForTransactionData((TopologyAffectedCommand)command);
  Object localResult=invokeNextInterceptor(ctx,command);
  boolean isNonTransactionalWrite=!ctx.isInTxScope() && command instanceof WriteCommand;
  boolean isTransactionalAndNotRolledBack=false;
  if (ctx.isInTxScope()) {
    isTransactionalAndNotRolledBack=!((TxInvocationContext)ctx).getCacheTransaction().isMarkedForRollback();
  }
  if (isNonTransactionalWrite || isTransactionalAndNotRolledBack) {
    stateTransferManager.forwardCommandIfNeeded(((TopologyAffectedCommand)command),getAffectedKeys(ctx,command),origin,sync);
  }
  return localResult;
}
