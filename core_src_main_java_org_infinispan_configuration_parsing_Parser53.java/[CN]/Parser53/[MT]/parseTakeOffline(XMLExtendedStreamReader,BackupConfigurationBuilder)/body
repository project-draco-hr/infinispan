{
  int count=0;
  while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
    count++;
    Element takeOffline=Element.forName(reader.getLocalName());
    for (int i=0; i < reader.getAttributeCount(); i++) {
      ParseUtils.requireNoNamespaceAttribute(reader,i);
      String value=replaceProperties(reader.getAttributeValue(i));
      Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
switch (attribute) {
case AFTER_FAILURES:
        backup.takeOffline().afterFailures(Integer.parseInt(value));
      break;
case MIN_TIME_TO_WAIT:
    backup.takeOffline().minTimeToWait(Long.parseLong(value));
  break;
default :
throw ParseUtils.unexpectedElement(reader);
}
}
ParseUtils.requireNoContent(reader);
}
if (count > 1) throw new ConfigurationException("Only one 'takeOffline' element allowed within a 'backup'");
}
