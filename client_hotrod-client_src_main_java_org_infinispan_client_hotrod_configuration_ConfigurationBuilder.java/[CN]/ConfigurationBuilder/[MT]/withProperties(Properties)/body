{
  TypedProperties typed=TypedProperties.toTypedProperties(properties);
  if (typed.containsKey(ConfigurationProperties.ASYNC_EXECUTOR_FACTORY)) {
    this.asyncExecutorFactory().factoryClass(typed.getProperty(ConfigurationProperties.ASYNC_EXECUTOR_FACTORY));
  }
  this.asyncExecutorFactory().withExecutorProperties(typed);
  this.balancingStrategy(typed.getProperty(ConfigurationProperties.REQUEST_BALANCING_STRATEGY,balancingStrategyClass.getName()));
  this.clientIntelligence(typed.getEnumProperty(ConfigurationProperties.CLIENT_INTELLIGENCE,ClientIntelligence.class,ClientIntelligence.getDefault()));
  this.connectionPool.withPoolProperties(typed);
  this.connectionTimeout(typed.getIntProperty(ConfigurationProperties.CONNECT_TIMEOUT,connectionTimeout));
  if (typed.containsKey(ConfigurationProperties.HASH_FUNCTION_PREFIX + ".1")) {
    log.warn("Hash function version 1 is no longer supported");
  }
  for (int i=0; i < consistentHashImpl.length; i++) {
    if (consistentHashImpl[i] != null) {
      int version=i + 1;
      this.consistentHashImpl(version,typed.getProperty(ConfigurationProperties.HASH_FUNCTION_PREFIX + "." + version,consistentHashImpl[i].getName()));
    }
  }
  this.forceReturnValues(typed.getBooleanProperty(ConfigurationProperties.FORCE_RETURN_VALUES,forceReturnValues));
  this.keySizeEstimate(typed.getIntProperty(ConfigurationProperties.KEY_SIZE_ESTIMATE,keySizeEstimate));
  if (typed.containsKey(ConfigurationProperties.MARSHALLER)) {
    this.marshaller(typed.getProperty(ConfigurationProperties.MARSHALLER));
  }
  this.protocolVersion(typed.getProperty(ConfigurationProperties.PROTOCOL_VERSION,protocolVersion.toString()));
  this.servers.clear();
  this.addServers(typed.getProperty(ConfigurationProperties.SERVER_LIST,""));
  this.socketTimeout(typed.getIntProperty(ConfigurationProperties.SO_TIMEOUT,socketTimeout));
  this.tcpNoDelay(typed.getBooleanProperty(ConfigurationProperties.TCP_NO_DELAY,tcpNoDelay));
  this.tcpKeepAlive(typed.getBooleanProperty(ConfigurationProperties.TCP_KEEP_ALIVE,tcpKeepAlive));
  if (typed.containsKey(ConfigurationProperties.TRANSPORT_FACTORY)) {
    this.transportFactory(typed.getProperty(ConfigurationProperties.TRANSPORT_FACTORY));
  }
  this.valueSizeEstimate(typed.getIntProperty(ConfigurationProperties.VALUE_SIZE_ESTIMATE,valueSizeEstimate));
  this.maxRetries(typed.getIntProperty(ConfigurationProperties.MAX_RETRIES,maxRetries));
  this.security.ssl().withProperties(properties);
  this.security.authentication().withProperties(properties);
  return this;
}
