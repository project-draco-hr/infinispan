{
  Cache<Object,Object> cache1=getCache();
  DistributedExecutorService des=createDES(cache1);
  Address fakeAddress=new Address(){
    @Override public int compareTo(    Address o){
      return -1;
    }
  }
;
  Future<?> future=des.submit(fakeAddress,new SimpleCallable());
  try {
    future.get();
    fail("Test should have thrown an execution exception!");
  }
 catch (  ExecutionException e) {
    Throwable t=e.getCause();
    if (!(t instanceof SuspectException)) {
      throw e;
    }
  }
}
