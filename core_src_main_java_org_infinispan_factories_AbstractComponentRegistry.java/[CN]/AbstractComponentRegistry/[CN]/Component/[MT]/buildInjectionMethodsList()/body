{
  injectionMethods=metadata.getInjectMethods();
  if (injectionMethods != null && injectionMethods.length > 0) {
    Class<?> clazz=instance.getClass();
    for (    ComponentMetadata.InjectMetadata meta : injectionMethods) {
      Class<?>[] parameterClasses=meta.getParameterClasses();
      if (parameterClasses == null) {
        parameterClasses=ReflectionUtil.toClassArray(meta.getParameters(),getClassLoader());
        meta.setParameterClasses(parameterClasses);
      }
      Method m=meta.getMethod();
      if (m == null) {
        try {
          m=ReflectionUtil.findMethod(clazz,meta.getMethodName(),parameterClasses);
        }
 catch (        CacheException e) {
          throw new CacheException("Injection method not found in class " + clazz + ": "+ meta.getMethodName()+ Arrays.toString(parameterClasses),e);
        }
        meta.setMethod(m);
      }
    }
  }
}
