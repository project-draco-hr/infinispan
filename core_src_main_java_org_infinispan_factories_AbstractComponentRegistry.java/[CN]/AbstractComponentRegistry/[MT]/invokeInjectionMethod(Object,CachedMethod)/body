{
  Class[] dependencies=cam.getParams();
  if (dependencies.length > 0) {
    Annotation[][] parameterAnnotations=cam.getParamAnnotations();
    Object[] params=new Object[dependencies.length];
    if (getLog().isTraceEnabled())     getLog().tracef("Injecting dependencies for method [%s] on an instance of [%s].",cam.getReflectMethod(),o.getClass().getName());
    for (int i=0; i < dependencies.length; i++) {
      params[i]=getOrCreateComponent(dependencies[i],getComponentName(dependencies[i],parameterAnnotations,i));
    }
    ReflectionUtil.invokeAccessibly(o,cam.getReflectMethod(),params);
  }
}
