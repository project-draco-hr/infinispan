{
  Class<?> bean=findBean(beans,treeNode.getName(),treeNode.getParent().getName());
  if (bean == null) {
    log.warn("Did not find bean for node " + treeNode + ". Should happen only for infinispan node");
    writeInfinispanType();
    return;
  }
  ConfigurationElement ce=findConfigurationElementForBean(bean,treeNode.getName(),treeNode.getParent().getName());
  if (ce == null) {
    log.warn("Did not find ConfigurationElement for " + treeNode + ". Verify annotations on all AbstractConfigurationBeans");
    return;
  }
  ConfigurationElementWriter writer=null;
  boolean hasCustomWriter=!ce.customWriter().equals(ConfigurationElementWriter.class);
  if (hasCustomWriter) {
    try {
      writer=ce.customWriter().newInstance();
    }
 catch (    Exception e1) {
      throw new ConfigurationException("Could not instantiate custom writer ",e1);
    }
  }
  log.debug("Visiting " + treeNode.getName() + ((hasCustomWriter) ? " will use " + writer : ""));
  if (hasCustomWriter) {
    try {
      writer.process(treeNode,xmldoc);
    }
 catch (    Exception e1) {
      throw new ConfigurationException("Exception while using custom writer ",e1);
    }
  }
 else {
    Element complexType=xmldoc.createElement("xs:complexType");
    complexType.setAttribute("name",treeNode.getName() + "TypeIn" + treeNode.getParent().getName());
    createProperty(treeNode,complexType);
    if (treeNode.hasChildren()) {
      boolean sequence=false;
      for (      TreeNode child : treeNode.getChildren()) {
        ConfigurationElement cce=findConfigurationElement(beans,child.getName(),treeNode.getName());
        if (cce.cardinalityInParent().equals(Cardinality.UNBOUNDED)) {
          sequence=true;
          break;
        }
      }
      Element allOrSequence=null;
      if (sequence) {
        allOrSequence=xmldoc.createElement("xs:sequence");
      }
 else {
        allOrSequence=xmldoc.createElement("xs:all");
      }
      complexType.appendChild(allOrSequence);
      for (      TreeNode child : treeNode.getChildren()) {
        ConfigurationElement cce=findConfigurationElement(beans,child.getName(),treeNode.getName());
        Element childElement=xmldoc.createElement("xs:element");
        childElement.setAttribute("name",child.getName());
        childElement.setAttribute("type","tns:" + child.getName() + "TypeIn"+ child.getParent().getName());
        childElement.setAttribute("minOccurs","0");
        if (cce.cardinalityInParent().equals(Cardinality.UNBOUNDED)) {
          childElement.setAttribute("maxOccurs","unbounded");
        }
 else {
          childElement.setAttribute("maxOccurs","1");
        }
        if (cce.description().length() > 0) {
          addDocumentation(cce.description(),childElement);
        }
        allOrSequence.appendChild(childElement);
      }
      createAttribute(treeNode,complexType);
    }
 else {
      createAttribute(treeNode,complexType);
    }
    postProcess(treeNode,complexType);
    xmldoc.getDocumentElement().appendChild(complexType);
  }
}
