{
  log.infof("Check Locking value. locks=%s, writeTx=%s, abort?=%s",numOfLocks,numOfWriteTx,abort);
  assertAttributeValue(LOCK_HOLD_TIME_LOCAL,statsToValidate,numOfLocks != 0 ? MICROSECONDS : 0);
  assertAttributeValue(LOCK_HOLD_TIME_REMOTE,statsToValidate,0);
  assertAttributeValue(NUM_LOCK_PER_LOCAL_TX,statsToValidate,numOfWriteTx != 0 ? numOfLocks * 1.0 / numOfWriteTx : 0);
  assertAttributeValue(NUM_LOCK_PER_REMOTE_TX,statsToValidate,0);
  assertAttributeValue(LOCK_HOLD_TIME_SUCCESS_LOCAL_TX,statsToValidate,0);
  assertAttributeValue(NUM_HELD_LOCKS_SUCCESS_LOCAL_TX,statsToValidate,!abort && numOfWriteTx != 0 ? numOfLocks * 1.0 / numOfWriteTx : 0);
  assertAttributeValue(LOCK_HOLD_TIME,statsToValidate,numOfLocks != 0 ? MICROSECONDS : 0);
  assertAttributeValue(NUM_HELD_LOCKS,statsToValidate,numOfLocks);
  assertAttributeValue(NUM_WAITED_FOR_LOCKS,statsToValidate,0);
  assertAttributeValue(LOCK_WAITING_TIME,statsToValidate,0);
  assertAttributeValue(NUM_LOCK_FAILED_TIMEOUT,statsToValidate,0);
  assertAttributeValue(NUM_LOCK_FAILED_DEADLOCK,statsToValidate,0);
}
