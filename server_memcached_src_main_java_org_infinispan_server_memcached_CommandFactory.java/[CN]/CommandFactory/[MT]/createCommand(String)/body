{
  if (log.isTraceEnabled())   log.trace("Command line: " + line);
  String[] args=line.trim().split(" +");
  CommandType type=null;
  String tmp=args[0];
  if (tmp == null)   throw new EOFException();
 else   type=CommandType.parseType(tmp);
switch (type) {
case SET:
case ADD:
case REPLACE:
case APPEND:
case PREPEND:
    return StorageCommand.newStorageCommand(cache,type,getStorageParameters(args),null);
case CAS:
  tmp=args[5];
long cas=Long.parseLong(tmp);
return CasCommand.newCasCommand(cache,getStorageParameters(args),cas,null);
case GET:
case GETS:
List<String> keys=new ArrayList<String>(5);
keys.addAll(Arrays.asList(args).subList(1,args.length));
return RetrievalCommand.newRetrievalCommand(cache,type,new RetrievalParameters(keys));
case DELETE:
String key=getKey(args[1]);
long time=getOptionalTime(args[2]);
return DeleteCommand.newDeleteCommand(cache,key,time,queue);
default :
return null;
}
}
