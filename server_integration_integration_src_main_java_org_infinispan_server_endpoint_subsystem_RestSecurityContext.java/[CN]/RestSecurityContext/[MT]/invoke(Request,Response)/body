{
  activeRequest.set(request);
  Session session=null;
  Principal caller=request.getPrincipal();
  JBossGenericPrincipal principal=null;
  HttpSession hsession=request.getSession(false);
  boolean createdSecurityContext=false;
  SecurityContext sc=SecurityActions.getSecurityContext();
  if (sc == null) {
    createdSecurityContext=true;
    String securityDomain=SecurityUtil.unprefixSecurityDomain(contextSecurityDomain);
    if (securityDomain == null)     securityDomain=SecurityConstants.DEFAULT_WEB_APPLICATION_POLICY;
    sc=SecurityActions.createSecurityContext(securityDomain);
    SecurityActions.setSecurityContextOnAssociation(sc);
  }
  try {
    Wrapper servlet=null;
    try {
      servlet=request.getWrapper();
      if (servlet != null) {
        String name=servlet.getName();
        RunAsIdentity runAsIdentity=null;
        SecurityActions.pushRunAsIdentity(runAsIdentity);
      }
      Manager manager=container.getManager();
      if (manager != null && hsession != null) {
        try {
          session=manager.findSession(hsession.getId());
        }
 catch (        IOException ignore) {
        }
      }
      if (caller == null || !(caller instanceof JBossGenericPrincipal)) {
        if (session != null) {
          principal=(JBossGenericPrincipal)session.getPrincipal();
        }
        if (principal == null) {
          Session sessionInternal=request.getSessionInternal(false);
          if (sessionInternal != null) {
            principal=(JBossGenericPrincipal)sessionInternal.getNote(Constants.FORM_PRINCIPAL_NOTE);
          }
        }
      }
 else {
        principal=(JBossGenericPrincipal)caller;
      }
      if (principal != null) {
        if (createdSecurityContext) {
          sc.getUtil().createSubjectInfo(principal.getUserPrincipal(),principal.getCredentials(),principal.getSubject());
        }
      }
    }
 catch (    Throwable e) {
      ROOT_LOGGER.failedToDetermineServlet(e);
    }
    PolicyContext.setContextID(name);
    getNext().invoke(request,response);
    if (servlet != null) {
      SecurityActions.popRunAsIdentity();
    }
  }
  finally {
    SecurityActions.clearSecurityContext();
    SecurityRolesAssociation.setSecurityRoles(null);
    PolicyContext.setContextID(null);
    activeRequest.set(null);
  }
}
