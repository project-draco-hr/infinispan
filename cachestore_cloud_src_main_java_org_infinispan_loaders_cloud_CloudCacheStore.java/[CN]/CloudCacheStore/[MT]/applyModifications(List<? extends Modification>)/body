{
  List<Future<?>> futures=new LinkedList<Future<?>>();
  asyncCommandFutures.set(futures);
  try {
    super.applyModifications(modifications);
    if (pollFutures) {
      CacheLoaderException exception=null;
      try {
        futures=asyncCommandFutures.get();
        log.info("Futures, in order: {0}",futures);
        for (        Future<?> f : futures) {
          Object o=f.get();
          log.info("Future {0} returned {1}",f,o);
        }
      }
 catch (      InterruptedException ie) {
        Thread.currentThread().interrupt();
      }
catch (      ExecutionException ee) {
        exception=convertToCacheLoaderException("Caught exception in async process",ee.getCause());
      }
      if (exception != null)       throw exception;
    }
  }
  finally {
    asyncCommandFutures.remove();
  }
}
