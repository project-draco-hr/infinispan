{
  NewDefaultConsistentHash baseDCH=(NewDefaultConsistentHash)baseCH;
  Hash hashFunction=baseDCH.getHashFunction();
  int requestedNumOwners=baseDCH.getNumOwners();
  List<Address> nodes=baseDCH.getMembers();
  int numOwners=Math.min(requestedNumOwners,nodes.size());
  int numSegments=baseDCH.getNumSegments();
  CHStatistics stats=computeStatistics(baseDCH,nodes);
  List<Address>[] ownerLists=extractOwnerLists(baseDCH);
  List<Address>[] intOwnerLists=copyOwnerLists(ownerLists);
  addPrimaryOwners(nodes,numSegments,stats,ownerLists,intOwnerLists);
  addBackupOwners(numSegments,numOwners,nodes,intOwnerLists,ownerLists,stats);
  NewDefaultConsistentHash ch;
  if (keepExistingOwners) {
    ch=new NewDefaultConsistentHash(hashFunction,numSegments,requestedNumOwners,nodes,intOwnerLists);
    if (ch.equals(baseDCH))     return baseDCH;
 else     return ch;
  }
 else {
    ch=new NewDefaultConsistentHash(hashFunction,numSegments,requestedNumOwners,nodes,ownerLists);
  }
  if (ch.equals(baseDCH))   return baseDCH;
 else   return ch;
}
