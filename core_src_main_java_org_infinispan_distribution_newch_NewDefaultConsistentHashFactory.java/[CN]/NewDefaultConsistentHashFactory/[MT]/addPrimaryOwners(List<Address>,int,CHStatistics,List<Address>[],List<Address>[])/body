{
  Map<Address,Integer> expectedPrimaryOwned=computeExpectedPrimaryOwned(nodes,numSegments);
  List<Address> newPrimaryOwners=computeNewPrimaryOwners(nodes,stats,expectedPrimaryOwned);
  for (int i=numSegments - 1; i >= 0; i--) {
    Address primaryOwner=ownerLists[i].get(0);
    int primaryOwned=stats.getPrimaryOwned(primaryOwner);
    if (primaryOwned > expectedPrimaryOwned.get(primaryOwner)) {
      Address newPrimaryOwner=removeOneOf(newPrimaryOwners,intOwnerLists[i]);
      if (newPrimaryOwner != null) {
        ownerLists[i].remove(newPrimaryOwner);
        ownerLists[i].add(0,newPrimaryOwner);
        stats.decPrimaryOwned(primaryOwner);
        stats.incPrimaryOwned(newPrimaryOwner);
      }
 else {
        newPrimaryOwner=newPrimaryOwners.remove(0);
        intOwnerLists[i].add(newPrimaryOwner);
        ownerLists[i].add(0,newPrimaryOwner);
        stats.incOwned(newPrimaryOwner);
        stats.decPrimaryOwned(primaryOwner);
        stats.incPrimaryOwned(newPrimaryOwner);
      }
    }
  }
}
