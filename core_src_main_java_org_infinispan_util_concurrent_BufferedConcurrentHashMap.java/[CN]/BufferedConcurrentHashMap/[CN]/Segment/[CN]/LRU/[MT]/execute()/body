{
  Set<HashEntry<K,V>> evicted=Collections.emptySet();
  if (isOverflow()) {
    evicted=new HashSet<HashEntry<K,V>>();
  }
  try {
    for (    HashEntry<K,V> e : accessQueue) {
      if (lruQueue.remove(e)) {
        lruQueue.addFirst(e);
      }
    }
    while (isOverflow()) {
      HashEntry<K,V> first=lruQueue.getLast();
      remove(first.key,first.hash,null);
      evicted.add(first);
    }
  }
  finally {
    accessQueue.clear();
  }
  return evicted;
}
