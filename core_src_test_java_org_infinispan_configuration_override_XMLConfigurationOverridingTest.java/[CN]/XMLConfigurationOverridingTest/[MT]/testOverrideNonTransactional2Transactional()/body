{
  withCacheManager(new CacheManagerCallable(TestCacheManagerFactory.fromXml("configs/named-cache-override-test.xml")){
    @Override public void call() throws Exception {
      Configuration cnf=cm.getCacheConfiguration(simpleNonTransactionalCache);
      assertEquals(TransactionMode.NON_TRANSACTIONAL,cnf.transaction().transactionMode());
      assertEquals(100,cnf.locking().concurrencyLevel());
      Configuration conf=new ConfigurationBuilder().transaction().transactionMode(TransactionMode.TRANSACTIONAL).jmxStatistics().enable().locking().concurrencyLevel(1).build();
      cm.defineConfiguration(simpleNonTransactionalCache,conf);
      cnf=cm.getCacheConfiguration(simpleNonTransactionalCache);
      assertEquals(TransactionMode.TRANSACTIONAL,cnf.transaction().transactionMode());
      assertTrue(cnf.jmxStatistics().enabled());
      assertEquals(1,cnf.locking().concurrencyLevel());
      TransactionManager tm=cm.getCache(simpleNonTransactionalCache).getAdvancedCache().getTransactionManager();
      tm.begin();
      for (int i=0; i < 10; i++) {
        cm.getCache(simpleNonTransactionalCache).put("key" + i,"value" + i);
      }
      tm.commit();
      for (int i=0; i < 10; i++) {
        assertNotNull(cm.getCache(simpleNonTransactionalCache).get("key" + i));
      }
    }
  }
);
}
