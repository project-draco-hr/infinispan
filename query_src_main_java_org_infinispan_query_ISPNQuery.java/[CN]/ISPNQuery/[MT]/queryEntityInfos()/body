{
  IndexSearcherWithPayload searcher=buildSearcher();
  if (searcher == null) {
    return Collections.emptyList();
  }
  try {
    QueryHits queryHits=getQueryHits(searcher,calculateTopDocsRetrievalSize());
    int first=getFirstResultIndex();
    int max=max(first,queryHits.getTotalHits());
    int size=max - first + 1 < 0 ? 0 : max - first + 1;
    List<EntityInfo> infos=new ArrayList<EntityInfo>(size);
    DocumentExtractor extractor=buildDocumentExtractor(searcher,queryHits,first,max);
    for (int index=first; index <= max; index++) {
      infos.add(extractor.extract(index));
      if (index % 10 == 0) {
        getTimeoutManager().isTimedOut();
      }
    }
    return infos;
  }
 catch (  IOException e) {
    throw new SearchException("Unable to query Lucene index",e);
  }
 finally {
    closeSearcher(searcher);
  }
}
