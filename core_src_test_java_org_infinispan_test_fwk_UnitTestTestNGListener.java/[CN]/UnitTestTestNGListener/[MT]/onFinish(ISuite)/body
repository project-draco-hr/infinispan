{
  log.warn("Possible leaked threads at the end of the test suite:");
  int count=0;
  for (  Map.Entry<Thread,StackTraceElement[]> s : Thread.getAllStackTraces().entrySet()) {
    Thread thread=s.getKey();
    if (thread.getName().startsWith("testng-") || seenThreads != null && seenThreads.contains(thread.getName() + "-" + thread.getId()+ "-"+ thread.hashCode())) {
      continue;
    }
    count++;
    if (log.isTraceEnabled()) {
      StringBuilder sb=new StringBuilder();
      sb.append("Thread: name=").append(thread.getName()).append(", group=").append(thread.getThreadGroup() == null ? null : thread.getThreadGroup().getName()).append(", isDaemon=").append(thread.isDaemon()).append(", isInterrupted=").append(thread.isInterrupted()).append(", Stack trace:\n");
      for (      StackTraceElement ste : s.getValue()) {
        sb.append("      ").append(ste.toString()).append("\n");
      }
      log.trace(sb.toString());
    }
 else {
      log.warnf("Thread Name: %s",thread.getName());
    }
  }
  seenThreads=null;
  log.warnf("Number of threads: %s",count);
}
