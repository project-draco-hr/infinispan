{
  CompletableFuture<RspList<Response>> future;
  try {
    if (recipients != null && mode == ResponseMode.GET_FIRST && STAGGER_DELAY_NANOS > 0) {
      future=new CompletableFuture<>();
      RspList<Response> rsps=new RspList<>();
      for (      Address recipient : recipients) {
        rsps.put(recipient,new Rsp<>(recipient));
      }
      long nanoTimeout=timeout > 0 ? TimeUnit.MILLISECONDS.toNanos(timeout) : Long.MAX_VALUE;
      long deadline=System.nanoTime() + nanoTimeout;
      processCallsStaggered(command,filter,recipients,mode,deliverOrder,req_marshaller,future,0,deadline,rsps);
    }
 else {
      future=processCalls(command,recipients == null,timeout,filter,recipients,mode,deliverOrder,req_marshaller);
    }
    return future;
  }
 catch (  Exception e) {
    return rethrowAsCacheException(e);
  }
}
