{
  boolean trace=log.isTraceEnabled();
  if (trace)   log.trace("Discover resources with context");
  Set<DiscoveredResourceDetails> discoveredResources=new HashSet<>();
  EmsConnection conn=ctx.getParentResourceComponent().getEmsConnection();
  if (trace)   log.trace("Connection to ems server established");
  String pattern=getAllCachesPattern(ctx.getParentResourceContext().getResourceKey());
  if (trace)   log.trace("Pattern to query is " + pattern);
  ObjectNameQueryUtility queryUtility=new ObjectNameQueryUtility(pattern);
  List<EmsBean> beans=conn.queryBeans(queryUtility.getTranslatedQuery());
  if (trace)   log.trace("Querying " + queryUtility.getTranslatedQuery() + " returned beans: "+ beans);
  for (  EmsBean bean : beans) {
    if (CacheComponent.isCacheComponent(bean,"Cache")) {
      String name=bean.getAttribute("CacheName").getValue().toString();
      String mbeanCacheName=bean.getBeanName().getKeyProperty("name");
      if (trace)       log.trace("Resource name is " + name + " and resource key "+ mbeanCacheName);
      DiscoveredResourceDetails detail=new DiscoveredResourceDetails(ctx.getResourceType(),mbeanCacheName,name,null,"One cache within Infinispan",ctx.getDefaultPluginConfiguration(),null);
      discoveredResources.add(detail);
      log.info("Discovered new ...  " + bean.getBeanName().getCanonicalName());
    }
 else {
      log.warn(String.format("MBeanServer returned spurious object %s",bean.getBeanName().getCanonicalName()));
    }
  }
  return discoveredResources;
}
