{
  try {
    controller.start(CONTAINER1,new Config().add(SERVER_CONFIG_PROPERTY,CONFIG_READ_WRITE_SECURED).map());
    put(securedClient(testAlias),keyAddress(KEY_A),HttpServletResponse.SC_OK);
    put(securedClient(test2Alias),keyAddress(KEY_B),HttpServletResponse.SC_FORBIDDEN);
    put(securedClient(testAlias),keyAddressUnsecured(KEY_B),HttpServletResponse.SC_UNAUTHORIZED);
    post(securedClient(testAlias),keyAddress(KEY_C),HttpServletResponse.SC_OK);
    post(securedClient(test2Alias),keyAddress(KEY_D),HttpServletResponse.SC_FORBIDDEN);
    HttpResponse resp=get(securedClient(testAlias),keyAddress(KEY_A),HttpServletResponse.SC_OK);
    String content=new BufferedReader(new InputStreamReader(resp.getEntity().getContent())).readLine();
    assertEquals("data",content);
    get(securedClient(test2Alias),keyAddress(KEY_A),HttpServletResponse.SC_FORBIDDEN);
    get(securedClient(testAlias),keyAddressUnsecured(KEY_A),HttpServletResponse.SC_UNAUTHORIZED);
    head(securedClient(test2Alias),keyAddress(KEY_A),HttpServletResponse.SC_FORBIDDEN);
    head(securedClient(testAlias),keyAddressUnsecured(KEY_A),HttpServletResponse.SC_UNAUTHORIZED);
    head(securedClient(testAlias),keyAddress(KEY_A),HttpServletResponse.SC_OK);
    delete(securedClient(test2Alias),keyAddress(KEY_A),HttpServletResponse.SC_FORBIDDEN);
    delete(securedClient(testAlias),keyAddress(KEY_A),HttpServletResponse.SC_OK);
    delete(securedClient(testAlias),keyAddress(KEY_C),HttpServletResponse.SC_OK);
  }
  finally {
    controller.stop(CONTAINER1);
  }
}
