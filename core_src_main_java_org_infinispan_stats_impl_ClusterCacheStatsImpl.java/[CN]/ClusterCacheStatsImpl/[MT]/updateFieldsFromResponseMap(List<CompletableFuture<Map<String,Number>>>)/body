{
  averageWriteTime=addLongAttributes(responseList,AVERAGE_WRITE_TIME) / responseList.size();
  averageReadTime=addLongAttributes(responseList,AVERAGE_READ_TIME) / responseList.size();
  averageRemoveTime=addLongAttributes(responseList,AVERAGE_REMOVE_TIME) / responseList.size();
  evictions=addLongAttributes(responseList,EVICTIONS);
  hits=addLongAttributes(responseList,HITS);
  misses=addLongAttributes(responseList,MISSES);
  numberOfEntries=getCacheMode(cache).isReplicated() ? cache.getStats().getCurrentNumberOfEntries() : addLongAttributes(responseList,NUMBER_OF_ENTRIES);
  removeHits=addLongAttributes(responseList,REMOVE_HITS);
  removeMisses=addLongAttributes(responseList,REMOVE_MISSES);
  stores=addLongAttributes(responseList,STORES);
  hitRatio=updateHitRatio(responseList);
  readWriteRatio=updateReadWriteRatio(responseList);
  timeSinceStart=updateTimeSinceStart(responseList);
  numberOfLocksHeld=addIntAttributes(responseList,NUMBER_OF_LOCKS_HELD);
  numberOfLocksAvailable=addIntAttributes(responseList,NUMBER_OF_LOCKS_AVAILABLE);
  invalidations=addLongAttributes(responseList,INVALIDATIONS);
  passivations=addLongAttributes(responseList,PASSIVATIONS);
  activations=addLongAttributes(responseList,ACTIVATIONS);
  cacheLoaderLoads=addLongAttributes(responseList,CACHE_LOADER_LOADS);
  cacheLoaderMisses=addLongAttributes(responseList,CACHE_LOADER_MISSES);
  cacheWriterStores=addLongAttributes(responseList,CACHE_WRITER_STORES);
}
