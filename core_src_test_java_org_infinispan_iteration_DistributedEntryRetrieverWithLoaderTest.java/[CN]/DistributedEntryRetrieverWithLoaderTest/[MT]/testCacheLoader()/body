{
  Cache<MagicKey,String> cache0=cache(0,CACHE_NAME);
  Cache<MagicKey,String> cache1=cache(1,CACHE_NAME);
  Cache<MagicKey,String> cache2=cache(2,CACHE_NAME);
  Map<MagicKey,String> originalValues=new HashMap<MagicKey,String>();
  originalValues.put(new MagicKey(cache0),"cache0");
  originalValues.put(new MagicKey(cache1),"cache1");
  originalValues.put(new MagicKey(cache2),"cache2");
  cache0.putAll(originalValues);
  EntryRetriever<MagicKey,String> retriever=cache1.getAdvancedCache().getComponentRegistry().getComponent(EntryRetriever.class);
  Iterator<CacheEntry<MagicKey,String>> iterator=retriever.retrieveEntries(null,null,null,null);
  int count=0;
  Map<MagicKey,String> results=new HashMap<MagicKey,String>();
  while (iterator.hasNext()) {
    Map.Entry<MagicKey,String> entry=iterator.next();
    results.put(entry.getKey(),entry.getValue());
    count++;
  }
  assertEquals(count,3);
  assertEquals(originalValues,results);
}
