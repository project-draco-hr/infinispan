{
  Cache<MagicKey,String> cache0=cache(0,CACHE_NAME);
  Cache<MagicKey,String> cache1=cache(1,CACHE_NAME);
  Cache<MagicKey,String> cache2=cache(2,CACHE_NAME);
  Map<MagicKey,String> originalValues=new HashMap<MagicKey,String>();
  originalValues.put(new MagicKey(cache0),"cache0");
  originalValues.put(new MagicKey(cache1),"cache1");
  originalValues.put(new MagicKey(cache2),"cache2");
  cache0.putAll(originalValues);
  PersistenceManager persistenceManager=TestingUtil.extractComponent(cache0,PersistenceManager.class);
  DummyInMemoryStore store=persistenceManager.getStores(DummyInMemoryStore.class).iterator().next();
  TestObjectStreamMarshaller sm=new TestObjectStreamMarshaller();
  PersistenceManager pm=null;
  try {
    MagicKey loaderKey=new MagicKey(cache2);
    String loaderValue="loader-value";
    store.write(new MarshalledEntryImpl(loaderKey,loaderValue,null,sm));
    if (includeLoaderEntry) {
      originalValues.put(loaderKey,loaderValue);
    }
  }
  finally {
    sm.stop();
  }
  return originalValues;
}
