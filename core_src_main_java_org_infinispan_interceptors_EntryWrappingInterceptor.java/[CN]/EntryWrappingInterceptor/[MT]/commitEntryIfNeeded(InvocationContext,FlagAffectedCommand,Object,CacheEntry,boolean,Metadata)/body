{
  if (entry == null) {
    if (key != null && !isPutForStateTransfer && stateConsumer != null) {
      stateConsumer.addUpdatedKey(key);
    }
    return false;
  }
  if (isPutForStateTransfer && (entry.isChanged() || entry.isLoaded())) {
    boolean updated=stateConsumer.executeIfKeyIsNotUpdated(key,new Runnable(){
      @Override public void run(){
        log.tracef("About to commit entry %s",entry);
        commitContextEntry(entry,ctx,command,metadata);
      }
    }
);
    if (!updated) {
      log.tracef("State transfer will not write key/value %s/%s because it was already updated by somebody else",key,entry.getValue());
      entry.rollback();
    }
    return updated;
  }
  if (entry.isChanged() || entry.isLoaded()) {
    if (stateConsumer != null) {
      stateConsumer.addUpdatedKey(key);
    }
    log.tracef("About to commit entry %s",entry);
    commitContextEntry(entry,ctx,command,metadata);
    return true;
  }
  return false;
}
