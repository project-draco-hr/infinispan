{
  final String groupName=command.getGroupName();
  if (!command.isGroupOwner()) {
    return invokeNextInterceptor(ctx,command);
  }
  final KeyFilter<Object> keyFilter=new CompositeKeyFilter<>(new GroupFilter<>(groupName,groupManager),new CollectionKeyFilter<>(ctx.getLookedUpEntries().keySet()));
  dataContainer.executeTask(keyFilter,new ParallelIterableMap.KeyValueAction<Object,InternalCacheEntry<Object,Object>>(){
    @Override public void apply(    Object o,    InternalCacheEntry<Object,Object> internalCacheEntry){
synchronized (ctx) {
        entryFactory.wrapEntryForReading(ctx,o,internalCacheEntry).setSkipLookup(true);
      }
    }
  }
);
  return invokeNextInterceptor(ctx,command);
}
