{
  final boolean trace=log.isTraceEnabled();
  boolean skipOwnershipCheck=ctx.hasFlag(Flag.SKIP_OWNERSHIP_CHECK);
  if (ctx instanceof SingleKeyNonTxInvocationContext) {
    CacheEntry entry=((SingleKeyNonTxInvocationContext)ctx).getCacheEntry();
    commitEntryIfNeeded(ctx,skipOwnershipCheck,entry);
  }
 else {
    Set<Map.Entry<Object,CacheEntry>> entries=ctx.getLookedUpEntries().entrySet();
    Iterator<Map.Entry<Object,CacheEntry>> it=entries.iterator();
    final Log log=getLog();
    while (it.hasNext()) {
      Map.Entry<Object,CacheEntry> e=it.next();
      CacheEntry entry=e.getValue();
      if (!commitEntryIfNeeded(ctx,skipOwnershipCheck,entry)) {
        if (trace) {
          if (entry == null)           log.tracef("Entry for key %s is null : not calling commitUpdate",e.getKey());
 else           log.tracef("Entry for key %s is not changed(%s): not calling commitUpdate",e.getKey(),entry);
        }
      }
    }
  }
}
