{
  final TransactionTable tt0=TestingUtil.getTransactionTable(cache(0));
  final TransactionTable tt1=TestingUtil.getTransactionTable(cache(1));
  StateTransferManager stateTransferManager0=TestingUtil.extractComponent(cache(0),StateTransferManager.class);
  final int viewId=stateTransferManager0.getCacheTopology().getTopologyId();
  tm(1).begin();
  cache(1).put(getKeyForCache(0),"v");
  final DummyTransaction t=(DummyTransaction)tm(1).getTransaction();
  t.runPrepare();
  tm(1).suspend();
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return checkTxCount(0,0,1);
    }
  }
);
  log.trace("Here is the topology change..");
  addClusterEnabledCacheManager(c);
  waitForClusterToForm();
  final int viewId2=stateTransferManager0.getCacheTopology().getTopologyId();
  assertTrue(viewId2 > viewId);
  assertEquals(tt0.getMinTopologyId(),viewId);
  assertEquals(tt1.getMinTopologyId(),viewId);
  tm(1).resume(t);
  t.runCommitTx();
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return tt0.getMinTopologyId() == viewId2 && tt1.getMinTopologyId() == viewId2;
    }
  }
);
}
