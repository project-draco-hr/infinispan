{
  final TransactionTable tt0=TestingUtil.getTransactionTable(cache(0));
  final TransactionTable tt1=TestingUtil.getTransactionTable(cache(1));
  StateTransferManager stateTransferManager0=TestingUtil.extractComponent(cache(0),StateTransferManager.class);
  final int topologyId=stateTransferManager0.getCacheTopology().getTopologyId();
  assertEquals(tt0.getMinTopologyId(),topologyId);
  assertEquals(tt1.getMinTopologyId(),topologyId);
  log.trace("Adding new node ..");
  addClusterEnabledCacheManager(c);
  waitForClusterToForm();
  log.trace("New node added.");
  final int topologyId2=stateTransferManager0.getCacheTopology().getTopologyId();
  assertTrue(topologyId2 > topologyId);
  final TransactionTable tt2=TestingUtil.getTransactionTable(cache(2));
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return tt0.getMinTopologyId() == topologyId2 && tt1.getMinTopologyId() == topologyId2 && tt2.getMinTopologyId() == topologyId2;
    }
  }
);
}
