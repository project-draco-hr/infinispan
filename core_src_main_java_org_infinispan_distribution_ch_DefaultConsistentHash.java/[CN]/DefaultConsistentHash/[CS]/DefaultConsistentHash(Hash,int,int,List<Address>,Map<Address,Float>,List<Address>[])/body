{
  if (numSegments < 1)   throw new IllegalArgumentException("The number of segments must be strictly positive");
  if (numOwners < 1)   throw new IllegalArgumentException("The number of owners must be strictly positive");
  this.numOwners=numOwners;
  this.numSegments=numSegments;
  this.hashFunction=hashFunction;
  this.members=new ArrayList<Address>(members);
  this.capacityFactors=capacityFactors != null ? new HashMap<Address,Float>(capacityFactors) : null;
  this.segmentOwners=new List[numSegments];
  for (int i=0; i < numSegments; i++) {
    if (segmentOwners[i] == null || segmentOwners[i].isEmpty()) {
      throw new IllegalArgumentException("Segment owner list cannot be null or empty");
    }
    this.segmentOwners[i]=Immutables.immutableListCopy(segmentOwners[i]);
  }
  this.segmentSize=(int)Math.ceil((float)Integer.MAX_VALUE / numSegments);
}
