{
  String config=INFINISPAN_START_TAG + "   <cache-container default-cache=\"default\">\n" + "      <local-cache name=\"default\">\n"+ "     <persistence>\n"+ "       <mixed-keyed-jdbc-store xmlns=\"urn:infinispan:config:store:jdbc:7.0\" key-to-string-mapper=\"DummyKey2StringMapper\" singleton=\"true\" dialect=\"H2\">\n"+ "         <data-source jndi-url=\"java:MyDataSource\" />\n"+ "         <string-keyed-table prefix=\"entry\" fetch-size=\"34\" batch-size=\"128\">\n"+ "           <id-column name=\"id\" type=\"VARCHAR\" />\n"+ "           <data-column name=\"datum\" type=\"BINARY\" />\n"+ "           <timestamp-column name=\"version\" type=\"BIGINT\" />\n"+ "         </string-keyed-table>\n"+ "         <binary-keyed-table prefix=\"bucket\" fetch-size=\"44\" batch-size=\"256\">\n"+ "           <id-column name=\"id\" type=\"BINARY\" />\n"+ "           <data-column name=\"datum\" type=\"BINARY\" />\n"+ "           <timestamp-column name=\"version\" type=\"BIGINT\" />\n"+ "         </binary-keyed-table>\n"+ "         <write-behind />\n"+ "       </mixed-keyed-jdbc-store>\n"+ "     </persistence>\n"+ "   </local-cache></cache-container>\n"+ TestingUtil.INFINISPAN_END_TAG;
  JdbcMixedStoreConfiguration store=(JdbcMixedStoreConfiguration)buildCacheManagerWithCacheStore(config);
  assertEquals("entry",store.stringTable().tableNamePrefix());
  assertEquals(128,store.stringTable().batchSize());
  assertEquals(34,store.stringTable().fetchSize());
  assertEquals("BINARY",store.stringTable().dataColumnType());
  assertEquals("version",store.stringTable().timestampColumnName());
  assertEquals("bucket",store.binaryTable().tableNamePrefix());
  assertEquals(256,store.binaryTable().batchSize());
  assertEquals(44,store.binaryTable().fetchSize());
  assertEquals("BINARY",store.binaryTable().dataColumnType());
  assertEquals("version",store.binaryTable().timestampColumnName());
  assertEquals(Dialect.H2,store.dialect());
  assertTrue(store.async().enabled());
  assertTrue(store.singletonStore().enabled());
  assertFalse(store.purgeOnStartup());
  assertEquals("DummyKey2StringMapper",store.key2StringMapper());
}
