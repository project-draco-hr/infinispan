{
  ConfigurationBuilder serverBuilder=hotRodCacheConfiguration(TestCacheManagerFactory.getDefaultCacheConfiguration(false));
  sourceContainer=TestCacheManagerFactory.createCacheManager(serverBuilder);
  sourceServerCache=sourceContainer.getCache();
  sourceServer=HotRodClientTestingUtil.startHotRodServer(sourceContainer);
  ConfigurationBuilder targetConfigurationBuilder=hotRodCacheConfiguration(TestCacheManagerFactory.getDefaultCacheConfiguration(false));
  targetConfigurationBuilder.persistence().addStore(RemoteStoreConfigurationBuilder.class).hotRodWrapping(true).addServer().host("localhost").port(sourceServer.getPort());
  targetContainer=TestCacheManagerFactory.createCacheManager(targetConfigurationBuilder);
  targetServerCache=targetContainer.getCache();
  targetServer=HotRodClientTestingUtil.startHotRodServer(targetContainer);
  sourceRemoteCacheManager=new RemoteCacheManager(new org.infinispan.client.hotrod.configuration.ConfigurationBuilder().addServers("localhost:" + sourceServer.getPort()).build());
  sourceRemoteCacheManager.start();
  sourceRemoteCache=sourceRemoteCacheManager.getCache();
  targetRemoteCacheManager=new RemoteCacheManager(new org.infinispan.client.hotrod.configuration.ConfigurationBuilder().addServers("localhost:" + sourceServer.getPort()).build());
  targetRemoteCacheManager.start();
  targetRemoteCache=targetRemoteCacheManager.getCache();
}
