{
  LOGGER.info("(Re)Creating workdir: " + KEYTABS_DIR.getAbsolutePath());
  FileUtils.deleteDirectory(KEYTABS_DIR);
  KEYTABS_DIR.mkdirs();
  final String cannonicalHost=Utils.getCannonicalHost(managementClient);
  final Map<String,String> map=new HashMap<>();
  map.put("hostname",cannonicalHost);
  final String supportedEncTypes=getSupportedEncTypes();
  map.put("enctypes",supportedEncTypes);
  LOGGER.info("Supported enctypes in krb5.conf: " + supportedEncTypes);
  FileUtils.write(KRB5_CONF_FILE,StrSubstitutor.replace(IOUtils.toString(getClass().getResourceAsStream(File.separator + KRB5_CONF),"UTF-8"),map),"UTF-8");
  createLdapServerKeytab(cannonicalHost);
  final List<UserForKeyTab> kerberosUsers=kerberosUsers();
  if (kerberosUsers != null) {
    for (    UserForKeyTab userForKeyTab : kerberosUsers) {
      createKeytab(userForKeyTab.getUser(),userForKeyTab.getPassword(),userForKeyTab.getKeyTabFileName());
    }
  }
  LOGGER.info("Setting Kerberos configuration: " + KRB5_CONF_FILE);
  origKrb5Conf=Utils.setSystemProperty("java.security.krb5.conf",KRB5_CONF_FILE.getAbsolutePath());
  origKrbDebug=Utils.setSystemProperty("sun.security.krb5.debug","true");
  origIbmJGSSDebug=Utils.setSystemProperty("com.ibm.security.jgss.debug","all");
  origIbmKrbDebug=Utils.setSystemProperty("com.ibm.security.krb5.Krb5Debug","all");
}
