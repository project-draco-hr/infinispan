{
  CacheEntry<K,V> returnedEntry=null;
  CacheEntry<K,V> entry;
  while (returnedEntry == null && !contextEntries.isEmpty() && (entry=contextEntries.remove(0)) != null) {
    seenContextKeys.add(entry.getKey());
    if (!ctx.isEntryRemovedInContext(entry.getKey())) {
      returnedEntry=filterEntry(entry);
    }
  }
  if (returnedEntry == null) {
    while (realIterator.hasNext()) {
      CacheEntry<K,V> iteratedEntry=realIterator.next();
      CacheEntry contextEntry;
      if ((contextEntry=ctx.lookupEntry(iteratedEntry.getKey())) != null) {
        if (seenContextKeys.add(contextEntry.getKey()) && !contextEntry.isRemoved() && (returnedEntry=filterEntry(contextEntry)) != null) {
          break;
        }
      }
 else {
        return (CacheEntry<K,C>)iteratedEntry;
      }
    }
  }
  if (returnedEntry == null) {
    for (    CacheEntry lookedUpEntry : ctx.getLookedUpEntries().values()) {
      if (seenContextKeys.add(lookedUpEntry.getKey()) && !lookedUpEntry.isRemoved()) {
        if (returnedEntry == null) {
          returnedEntry=lookedUpEntry;
        }
 else {
          contextEntries.add(lookedUpEntry);
        }
      }
    }
  }
  if (returnedEntry != null && converter != null) {
    C newValue=converter.convert(returnedEntry.getKey(),returnedEntry.getValue(),returnedEntry.getMetadata());
    returnedEntry=entryFactory.create(returnedEntry);
    returnedEntry.setValue((V)newValue);
  }
  return (CacheEntry<K,C>)returnedEntry;
}
