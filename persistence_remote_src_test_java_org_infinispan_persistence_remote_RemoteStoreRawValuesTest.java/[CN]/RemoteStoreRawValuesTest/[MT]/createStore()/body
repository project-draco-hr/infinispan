{
  ConfigurationBuilder localBuilder=TestCacheManagerFactory.getDefaultCacheConfiguration(false);
  localBuilder.eviction().maxEntries(100).strategy(EvictionStrategy.UNORDERED).expiration().wakeUpInterval(10L);
  localCacheManager=TestCacheManagerFactory.createCacheManager(hotRodCacheConfiguration(localBuilder));
  localCacheManager.getCache(REMOTE_CACHE);
  GlobalComponentRegistry gcr=localCacheManager.getGlobalComponentRegistry();
  gcr.registerComponent(timeService,TimeService.class);
  gcr.rewire();
  localCacheManager.getCache(REMOTE_CACHE).getAdvancedCache().getComponentRegistry().rewire();
  hrServer=HotRodClientTestingUtil.startHotRodServer(localCacheManager);
  ConfigurationBuilder builder=TestCacheManagerFactory.getDefaultCacheConfiguration(false);
  RemoteStoreConfigurationBuilder storeConfigurationBuilder=builder.persistence().addStore(RemoteStoreConfigurationBuilder.class).rawValues(true).remoteCacheName(REMOTE_CACHE);
  storeConfigurationBuilder.addServer().host(hrServer.getHost()).port(hrServer.getPort());
  RemoteStore remoteStore=new RemoteStore();
  remoteStore.init(createContext(builder.build()));
  return remoteStore;
}
