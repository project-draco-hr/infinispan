{
  for (char ch='A'; ch <= 'Z'; ch++) {
    String s=Character.toString(ch);
    sourceRemoteAltCache.put(s,s,20,TimeUnit.SECONDS,30,TimeUnit.SECONDS);
  }
  assertEquals("A",targetRemoteAltCache.get("A"));
  RollingUpgradeManager sourceUpgradeManager=sourceServerAltCache.getAdvancedCache().getComponentRegistry().getComponent(RollingUpgradeManager.class);
  sourceUpgradeManager.recordKnownGlobalKeyset();
  RollingUpgradeManager targetUpgradeManager=targetServerAltCache.getAdvancedCache().getComponentRegistry().getComponent(RollingUpgradeManager.class);
  targetUpgradeManager.synchronizeData("hotrod");
  assertEquals(sourceServerAltCache.getAdvancedCache().withFlags(Flag.SKIP_CACHE_LOAD).size() - 1,targetServerAltCache.getAdvancedCache().withFlags(Flag.SKIP_CACHE_LOAD).size());
  targetUpgradeManager.disconnectSource("hotrod");
  MetadataValue<String> metadataValue=targetRemoteAltCache.getWithMetadata("A");
  assertEquals(20,metadataValue.getLifespan());
  assertEquals(30,metadataValue.getMaxIdle());
}
