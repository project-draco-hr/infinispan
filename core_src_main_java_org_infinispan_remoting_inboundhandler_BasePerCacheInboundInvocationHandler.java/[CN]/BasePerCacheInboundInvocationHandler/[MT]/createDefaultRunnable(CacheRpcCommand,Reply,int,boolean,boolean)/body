{
  final int waitTopologyId=Math.max(commandTopologyId,0);
  if (onExecutorService) {
    if (waitTransactionalData) {
      return new DefaultTopologyRunnable(this,command,reply,commandTopologyId){
        @Override public boolean isReady(){
          return stateTransferLock.transactionDataReceived(waitTopologyId);
        }
      }
;
    }
 else {
      return new DefaultTopologyRunnable(this,command,reply,commandTopologyId){
        @Override public boolean isReady(){
          return stateTransferLock.topologyReceived(waitTopologyId);
        }
      }
;
    }
  }
 else {
    if (waitTransactionalData) {
      return new DefaultTopologyRunnable(this,command,reply,commandTopologyId){
        @Override public boolean isReady(){
          return true;
        }
        @Override protected boolean beforeInvoke() throws Exception {
          stateTransferLock.waitForTransactionData(waitTopologyId,1,TimeUnit.DAYS);
          return super.beforeInvoke();
        }
      }
;
    }
 else {
      return new DefaultTopologyRunnable(this,command,reply,commandTopologyId){
        @Override public boolean isReady(){
          return true;
        }
        @Override protected boolean beforeInvoke() throws Exception {
          stateTransferLock.waitForTopology(waitTopologyId,1,TimeUnit.DAYS);
          return super.beforeInvoke();
        }
      }
;
    }
  }
}
