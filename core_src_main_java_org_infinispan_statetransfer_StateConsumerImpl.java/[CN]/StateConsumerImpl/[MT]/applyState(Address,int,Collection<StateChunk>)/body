{
  ConsistentHash wCh=cacheTopology.getWriteConsistentHash();
  if (!wCh.getMembers().contains(rpcManager.getAddress())) {
    if (trace) {
      log.tracef("Ignoring received state because we are no longer a member of cache %s",cacheName);
    }
    return;
  }
  int rebalanceTopologyId=stateTransferTopologyId.get();
  if (rebalanceTopologyId == NO_REBALANCE_IN_PROGRESS) {
    log.debugf("Discarding state response with topology id %d for cache %s, we don't have a state transfer in progress",topologyId,cacheName);
    return;
  }
  if (topologyId < rebalanceTopologyId) {
    log.debugf("Discarding state response with old topology id %d for cache %s, state transfer request topology was %d",topologyId,cacheName,waitingForState.get());
    return;
  }
  if (trace) {
    log.tracef("Before applying the received state the data container of cache %s has %d keys",cacheName,dataContainer.size());
  }
  for (  StateChunk stateChunk : stateChunks) {
    if (!wCh.getSegmentsForOwner(rpcManager.getAddress()).contains(stateChunk.getSegmentId())) {
      log.warnf("Discarding received cache entries for segment %d of cache %s because they do not belong to this node.",stateChunk.getSegmentId(),cacheName);
      continue;
    }
    InboundTransferTask inboundTransfer;
synchronized (transferMapsLock) {
      inboundTransfer=transfersBySegment.get(stateChunk.getSegmentId());
    }
    if (inboundTransfer != null) {
      if (stateChunk.getCacheEntries() != null) {
        doApplyState(sender,stateChunk.getSegmentId(),stateChunk.getCacheEntries());
      }
      inboundTransfer.onStateReceived(stateChunk.getSegmentId(),stateChunk.isLastChunk());
    }
 else {
      log.warnf("Received unsolicited state from node %s for segment %d of cache %s",sender,stateChunk.getSegmentId(),cacheName);
    }
  }
  if (trace) {
    log.tracef("After applying the received state the data container of cache %s has %d keys",cacheName,dataContainer.size());
synchronized (transferMapsLock) {
      log.tracef("Segments not received yet for cache %s: %s",cacheName,transfersBySource);
    }
  }
}
