{
  if (trace)   log.tracef("Applying new state chunk for segment %d of cache %s from node %s: received %d cache entries",segmentId,cacheName,sender,cacheEntries.size());
  boolean transactional=transactionManager != null;
  for (  InternalCacheEntry e : cacheEntries) {
    try {
      InvocationContext ctx;
      if (transactional) {
        transactionManager.begin();
        ctx=icf.createInvocationContext(transactionManager.getTransaction(),true);
        ((TxInvocationContext)ctx).getCacheTransaction().setStateTransferFlag(PUT_FOR_STATE_TRANSFER);
      }
 else {
        ctx=icf.createSingleKeyNonTxInvocationContext();
      }
      PutKeyValueCommand put=commandsFactory.buildPutKeyValueCommand(e.getKey(),e.getValue(),e.getMetadata(),STATE_TRANSFER_FLAGS);
      ctx.setLockOwner(put.getKeyLockOwner());
      interceptorChain.invoke(ctx,put);
      if (transactionManager != null) {
        transactionManager.commit();
      }
    }
 catch (    Exception ex) {
      if (!cache.getStatus().allowInvocations()) {
        log.debugf("Cache %s is shutting down, stopping state transfer",cacheName);
        break;
      }
 else {
        log.problemApplyingStateForKey(ex.getMessage(),e.getKey(),ex);
      }
    }
 finally {
      try {
        if (transactional && transactionManager.getTransaction() != null) {
          transactionManager.rollback();
        }
      }
 catch (      SystemException e1) {
      }
    }
  }
  if (trace)   log.tracef("Finished applying chunk of segment %d of cache %s",segmentId,cacheName);
}
