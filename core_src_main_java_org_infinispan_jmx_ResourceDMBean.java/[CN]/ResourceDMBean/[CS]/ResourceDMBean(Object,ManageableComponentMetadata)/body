{
  if (instance == null)   throw new NullPointerException("Cannot make an MBean wrapper for null instance");
  this.obj=instance;
  this.objectClass=instance.getClass();
  this.mBeanMetadata=mBeanMetadata;
  int i=0;
  attInfos=new MBeanAttributeInfo[mBeanMetadata.getAttributeMetadata().size()];
  for (  JmxAttributeMetadata attributeMetadata : mBeanMetadata.getAttributeMetadata()) {
    String attributeName=attributeMetadata.getName();
    InvokableMBeanAttributeInfo info=toJmxInfo(attributeMetadata);
    if (atts.containsKey(attributeName)) {
      throw new IllegalArgumentException("Component " + mBeanMetadata.getName() + " metadata has a duplicate attribute: "+ attributeName);
    }
    atts.put(attributeName,info);
    attInfos[i++]=info.getMBeanAttributeInfo();
    if (trace)     log.tracef("Attribute %s [r=%b,w=%b,is=%b,type=%s]",attributeName,info.getMBeanAttributeInfo().isReadable(),info.getMBeanAttributeInfo().isWritable(),info.getMBeanAttributeInfo().isIs(),info.getMBeanAttributeInfo().getType());
  }
  IspnMBeanOperationInfo op;
  opInfos=new IspnMBeanOperationInfo[mBeanMetadata.getOperationMetadata().size()];
  i=0;
  for (  JmxOperationMetadata operation : mBeanMetadata.getOperationMetadata()) {
    op=toJmxInfo(operation);
    opInfos[i++]=op;
    if (trace)     log.tracef("Operation %s %s",op.getReturnType(),op.getName());
  }
}
