{
  Listener l=testListenerClassValidity(listener.getClass());
  boolean foundMethods=false;
  builder.setTarget(listener);
  builder.setSubject(Subject.getSubject(AccessController.getContext()));
  builder.setSync(l.sync());
  Map<Class<? extends Annotation>,Class<?>> allowedListeners=getAllowedMethodAnnotations(l);
  for (  Method m : listener.getClass().getMethods()) {
    for (    Map.Entry<Class<? extends Annotation>,Class<?>> annotationEntry : allowedListeners.entrySet()) {
      Class<? extends Annotation> key=annotationEntry.getKey();
      Class<?> value=annotationEntry.getValue();
      if (m.isAnnotationPresent(key)) {
        testListenerMethodValidity(m,value,key.getName());
        m.setAccessible(true);
        builder.setMethod(m);
        addListenerInvocation(key,builder.build());
        foundMethods=true;
      }
    }
  }
  if (!foundMethods)   getLog().noAnnotateMethodsFoundInListener(listener.getClass());
  return foundMethods;
}
