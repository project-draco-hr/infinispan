{
  List<Modification> mods=new ArrayList<Modification>();
  mods.add(new Store(TestInternalCacheEntryFactory.create("k1","v1")));
  mods.add(new Store(TestInternalCacheEntryFactory.create("k2","v2")));
  mods.add(new Remove("k1"));
  GlobalTransaction tx=gtf.newGlobalTransaction(null,false);
  cs.prepare(mods,tx,false);
  assertFalse(cs.containsKey("k1"));
  assertFalse(cs.containsKey("k2"));
  cs.commit(tx);
  assertEquals("v2",cs.load("k2").getValue());
  assertFalse(cs.containsKey("k1"));
  cs.clear();
  mods=new ArrayList<Modification>();
  mods.add(new Store(TestInternalCacheEntryFactory.create("k1","v1")));
  mods.add(new Store(TestInternalCacheEntryFactory.create("k2","v2")));
  mods.add(new Store(TestInternalCacheEntryFactory.create("k3","v3")));
  cs.prepare(mods,tx,false);
  assertFalse(cs.containsKey("k1"));
  assertFalse(cs.containsKey("k2"));
  assertFalse(cs.containsKey("k3"));
  cs.commit(tx);
  assertTrue(cs.containsKey("k1"));
  assertTrue(cs.containsKey("k2"));
  assertTrue(cs.containsKey("k3"));
}
