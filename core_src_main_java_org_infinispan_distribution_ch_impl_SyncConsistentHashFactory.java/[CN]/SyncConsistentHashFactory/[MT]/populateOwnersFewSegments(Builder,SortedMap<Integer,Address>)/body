{
  int actualNumOwners=builder.getActualNumOwners();
  TreeSet<Address> sortedMembers=new TreeSet<Address>(builder.getSortedMembers());
  for (  Map.Entry<Integer,Address> e : primarySegments.entrySet()) {
    Integer segment=e.getKey();
    Address primaryOwner=e.getValue();
    List<Address> owners=builder.getOwners(segment);
    owners.add(primaryOwner);
    if (owners.size() >= actualNumOwners)     continue;
    for (    Address a : sortedMembers.tailSet(primaryOwner,false)) {
      if (owners.size() >= actualNumOwners)       break;
      if (builder.getCapacityFactor(a) > 0 && !owners.contains(a)) {
        owners.add(a);
      }
    }
    for (    Address a : sortedMembers.headSet(primaryOwner,false)) {
      if (owners.size() >= actualNumOwners)       break;
      if (builder.getCapacityFactor(a) > 0 && !owners.contains(a)) {
        owners.add(a);
      }
    }
  }
}
