{
  List<Address> owners=segmentOwners[segment];
  if (owners.size() < actualNumOwners && !owners.contains(candidate)) {
    if (!ignoreMaxSegments) {
      if (owners.isEmpty()) {
        long maxSegments=Math.round(computeExpectedSegmentsForNode(candidate,1) * PRIMARY_SEGMENTS_ALLOWED_VARIATION);
        if (stats.getPrimaryOwned(candidate) < maxSegments) {
          addOwnerNoCheck(segment,candidate);
        }
      }
 else {
        long maxSegments=Math.round(computeExpectedSegmentsForNode(candidate,actualNumOwners) * OWNED_SEGMENTS_ALLOWED_VARIATION);
        if (stats.getOwned(candidate) < maxSegments) {
          addOwnerNoCheck(segment,candidate);
        }
      }
    }
 else {
      if (!capacityFactors.get(candidate).equals(0f)) {
        addOwnerNoCheck(segment,candidate);
      }
    }
  }
}
