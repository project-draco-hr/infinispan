{
  final NotifyingFutureImpl<Void> result=new NotifyingFutureImpl<>();
  final CountDownLatch countDownLatch=new CountDownLatch(1);
  Future afterFuture=executorService.submit(new Runnable(){
    @Override public void run(){
      try {
        countDownLatch.await();
        future.get();
        after.run();
        result.notifyDone(null);
      }
 catch (      InterruptedException e) {
        future.cancel(true);
        Thread.currentThread().interrupt();
      }
catch (      Exception e) {
        result.notifyException(e);
      }
    }
  }
);
  result.setFuture(afterFuture);
  FutureListener<T> listener=new FutureListener<T>(){
    @Override public void futureDone(    Future<T> future){
      countDownLatch.countDown();
    }
  }
;
  future.attachListener(listener);
  return result;
}
