{
  container.compute(key,new DataContainer.ComputeAction(){
    @Override public InternalCacheEntry compute(    Object key,    InternalCacheEntry oldEntry,    InternalEntryFactory factory){
      InternalCacheEntry newEntry=oldEntry;
      DeltaAware containerValue=oldEntry == null ? null : (DeltaAware)oldEntry.getValue();
      if (containerValue != null && containerValue != value) {
        value=containerValue;
      }
      if (value != null && !deltas.isEmpty()) {
        final boolean makeCopy=value instanceof CopyableDeltaAware;
        if (makeCopy) {
          value=((CopyableDeltaAware)value).copy();
        }
        for (        Delta delta : deltas) {
          delta.merge(value);
        }
        if (makeCopy) {
          newEntry=oldEntry == null ? factory.create(key,value,extractMetadata(null,metadata)) : factory.update(oldEntry,value,extractMetadata(oldEntry,metadata));
        }
        value.commit();
        if (wrappedEntry != null) {
          wrappedEntry.setChanged(!makeCopy);
        }
      }
      reset();
      if (wrappedEntry != null) {
        wrappedEntry.commit(container,metadata);
      }
      return newEntry;
    }
  }
);
}
