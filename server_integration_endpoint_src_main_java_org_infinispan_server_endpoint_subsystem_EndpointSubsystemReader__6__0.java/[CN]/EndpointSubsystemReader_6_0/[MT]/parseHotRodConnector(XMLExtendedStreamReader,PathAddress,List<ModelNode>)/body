{
  ModelNode connector=Util.getEmptyOperation(ADD,null);
  String name=ModelKeys.HOTROD_CONNECTOR;
  final Set<Attribute> required=EnumSet.of(Attribute.SOCKET_BINDING);
  for (int i=0; i < reader.getAttributeCount(); i++) {
    ParseUtils.requireNoNamespaceAttribute(reader,i);
    String value=reader.getAttributeValue(i);
    Attribute attribute=Attribute.forName(reader.getAttributeLocalName(i));
    required.remove(attribute);
    name=parseConnectorAttributes(reader,connector,name,i,value,attribute);
  }
  if (!required.isEmpty()) {
    throw ParseUtils.missingRequired(reader,required);
  }
  PathAddress connectorAddress=subsystemAddress.append(PathElement.pathElement(ModelKeys.HOTROD_CONNECTOR,name));
  connector.get(OP_ADDR).set(connectorAddress.toModelNode());
  operations.add(connector);
  while (reader.hasNext() && (reader.nextTag() != XMLStreamConstants.END_ELEMENT)) {
    Element element=Element.forName(reader.getLocalName());
switch (element) {
case TOPOLOGY_STATE_TRANSFER:
{
        parseTopologyStateTransfer(reader,connector,operations);
        break;
      }
case SECURITY:
{
      parseSecurity(reader,connector,operations);
      break;
    }
default :
{
    throw ParseUtils.unexpectedElement(reader);
  }
}
}
}
