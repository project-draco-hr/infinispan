{
  final Method method=context.getMethod();
  final CacheResult cacheResult=method.getAnnotation(CacheResult.class);
  final String cacheName=cacheResult.cacheName().trim().isEmpty() ? getDefaultMethodCacheName(method) : cacheResult.cacheName();
  final Cache<CacheKey,Object> cache=cacheResolver.resolveCache(cacheName,context.getMethod());
  final CacheKey cacheKey=generateCacheKey(cacheResult.cacheKeyGenerator(),context);
  Object methodResult=null;
  if (!cacheResult.skipGet()) {
    methodResult=cache.get(cacheKey);
  }
  if (methodResult == null) {
    methodResult=context.proceed();
    if (methodResult != null) {
      cache.put(cacheKey,methodResult);
    }
  }
  return methodResult;
}
