{
  CacheTopology maxStableTopology=null;
  for (  CacheStatusResponse response : statusResponses) {
    CacheTopology stableTopology=response.getStableTopology();
    if (stableTopology == null) {
      continue;
    }
    if (maxStableTopology == null || maxStableTopology.getMembers().size() < stableTopology.getMembers().size()) {
      maxStableTopology=stableTopology;
    }
  }
  CacheTopology maxTopology=null;
  for (  CacheStatusResponse response : statusResponses) {
    CacheTopology stableTopology=response.getStableTopology();
    if (!Objects.equals(stableTopology,maxStableTopology))     continue;
    CacheTopology topology=response.getCacheTopology();
    if (topology == null) {
      continue;
    }
    if (maxTopology == null || maxTopology.getMembers().size() < topology.getMembers().size()) {
      maxTopology=topology;
    }
  }
  if (maxTopology == null) {
    log.debugf("No current topology, recovered only joiners for cache %s",context.getCacheName());
  }
  int maxTopologyId=0;
  for (  CacheStatusResponse response : statusResponses) {
    CacheTopology topology=response.getCacheTopology();
    if (topology != null && maxTopologyId < topology.getTopologyId()) {
      maxTopologyId=topology.getTopologyId();
    }
  }
  CacheTopology mergedTopology=maxTopology;
  if (maxTopology != null && maxTopology.getPendingCH() != null) {
    mergedTopology=new CacheTopology(maxTopologyId + 1,maxTopology.getRebalanceId(),maxTopology.getCurrentCH(),null);
  }
  context.updateTopologiesAfterMerge(mergedTopology,maxStableTopology,null);
  List<Address> newMembers=context.getExpectedMembers();
  List<Address> survivingMembers=new ArrayList<>(mergedTopology.getMembers());
  if (survivingMembers.retainAll(newMembers)) {
    checkForLostData(context,survivingMembers);
  }
  context.updateCurrentTopology(survivingMembers);
  context.queueRebalance(newMembers);
}
