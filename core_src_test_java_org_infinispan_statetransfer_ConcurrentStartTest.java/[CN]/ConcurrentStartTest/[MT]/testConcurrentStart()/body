{
  TestResourceTracker.testThreadStarted(this);
  final CheckPoint checkPoint=new CheckPoint();
  EmbeddedCacheManager cm1=createCacheManager(0);
  EmbeddedCacheManager cm2=createCacheManager(1);
  assertEquals(ComponentStatus.INSTANTIATED,extractGlobalComponentRegistry(cm1).getStatus());
  replaceInboundInvocationHandler(cm1,checkPoint,0);
  assertEquals(ComponentStatus.INSTANTIATED,extractGlobalComponentRegistry(cm2).getStatus());
  replaceInboundInvocationHandler(cm2,checkPoint,1);
  log.debugf("Cache managers created. Starting the caches");
  Future<Object> repl1Future=fork(new CacheStartCallable(cm1,"repl"));
  Future<Object> repl2Future=fork(new CacheStartCallable(cm2,"repl"));
  Future<Object> dist1Future=fork(new CacheStartCallable(cm1,"dist"));
  Future<Object> dist2Future=fork(new CacheStartCallable(cm2,"dist"));
  checkPoint.peek(2,SECONDS,"blocked_0","blocked_1");
  checkPoint.trigger("unblocked_0",CheckPoint.INFINITE);
  checkPoint.trigger("unblocked_1",CheckPoint.INFINITE);
  repl1Future.get(10,SECONDS);
  repl2Future.get(10,SECONDS);
  dist1Future.get(10,SECONDS);
  dist2Future.get(10,SECONDS);
  Cache<String,String> c1r=cm1.getCache("repl");
  Cache<String,String> c1d=cm1.getCache("dist");
  Cache<String,String> c2r=cm2.getCache("repl");
  Cache<String,String> c2d=cm2.getCache("dist");
  blockUntilViewsReceived(10000,cm1,cm2);
  waitForRehashToComplete(c1r,c2r);
  waitForRehashToComplete(c1d,c2d);
  c1r.put("key","value");
  assertEquals("value",c2r.get("key"));
  c1d.put("key","value");
  assertEquals("value",c2d.get("key"));
}
