{
  if (payloadStarted) {
    if (skipping == 0) {
      AttributeNode<FieldDescriptor,Integer> attrNode=currentNode.getChild(fieldNumber);
      if (attrNode != null) {
        messageContext.markField(fieldNumber);
        attrNode.processValue(tagValue,this);
      }
    }
  }
 else {
switch (fieldNumber) {
case WrappedMessage.WRAPPED_DESCRIPTOR_FULL_NAME:
      entityTypeName=(String)tagValue;
    break;
case WrappedMessage.WRAPPED_DESCRIPTOR_ID:
  entityTypeName=serializationContext.getTypeNameById((Integer)tagValue);
break;
case WrappedMessage.WRAPPED_MESSAGE_BYTES:
payload=(byte[])tagValue;
break;
case WrappedMessage.WRAPPED_DOUBLE:
case WrappedMessage.WRAPPED_FLOAT:
case WrappedMessage.WRAPPED_INT64:
case WrappedMessage.WRAPPED_UINT64:
case WrappedMessage.WRAPPED_INT32:
case WrappedMessage.WRAPPED_FIXED64:
case WrappedMessage.WRAPPED_FIXED32:
case WrappedMessage.WRAPPED_BOOL:
case WrappedMessage.WRAPPED_STRING:
case WrappedMessage.WRAPPED_BYTES:
case WrappedMessage.WRAPPED_UINT32:
case WrappedMessage.WRAPPED_SFIXED32:
case WrappedMessage.WRAPPED_SFIXED64:
case WrappedMessage.WRAPPED_SINT32:
case WrappedMessage.WRAPPED_SINT64:
case WrappedMessage.WRAPPED_ENUM:
break;
default :
throw new IllegalStateException("Unexpected field : " + fieldNumber);
}
}
}
