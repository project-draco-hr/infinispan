{
  if (child != null) {
    throw new IllegalArgumentException();
  }
  final int value=childValue ? BETree.EXPR_TRUE : BETree.EXPR_FALSE;
  if (isDecided(evalContext)) {
    if (predicate.isRepeated() && evalContext.treeCounters[index] == value) {
      return;
    }
    throw new IllegalStateException("This should never be called again if the state of this node was previously decided.");
  }
  evalContext.treeCounters[index]=value;
  if (parent == null) {
    suspendSubscription(evalContext);
  }
 else {
    parent.handleChildValue(this,childValue,evalContext);
  }
}
