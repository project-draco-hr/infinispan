{
  TimeService timeService=new DefaultTimeService(){
    @Override public long time(){
      return 10;
    }
  }
;
  assertEquals(timeService.remainingTime(-1,TimeUnit.NANOSECONDS),0);
  assertEquals(timeService.remainingTime(0,TimeUnit.NANOSECONDS),0);
  assertEquals(timeService.remainingTime(9,TimeUnit.NANOSECONDS),0);
  assertEquals(timeService.remainingTime(10,TimeUnit.NANOSECONDS),0);
  assertEquals(timeService.remainingTime(11,TimeUnit.NANOSECONDS),1);
  assertEquals(timeService.remainingTime(11,TimeUnit.MICROSECONDS),0);
  assertEquals(timeService.remainingTime(11,TimeUnit.MILLISECONDS),0);
}
