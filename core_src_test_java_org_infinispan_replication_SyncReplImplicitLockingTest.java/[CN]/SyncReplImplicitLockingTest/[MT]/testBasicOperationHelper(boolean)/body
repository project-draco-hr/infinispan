{
  Cache cache1=cache(0,"testcache");
  Cache cache2=cache(1,"testcache");
  assertClusterSize("Should only be 2  caches in the cluster!!!",2);
  assertNull("Should be null",cache1.get(k));
  assertNull("Should be null",cache2.get(k));
  String name="Infinispan";
  TransactionManager mgr=TestingUtil.getTransactionManager(cache1);
  mgr.begin();
  cache1.put(k,name);
  assertLocked(cache2,k);
  String key2="name";
  cache1.put(key2,"Vladimir");
  assertLocked(cache2,key2);
  String key3="product";
  String key4="org";
  Map<String,String> newMap=new HashMap<String,String>();
  newMap.put(key3,"Infinispan");
  newMap.put(key4,"JBoss");
  cache1.putAll(newMap);
  assertLocked(cache2,key3);
  assertLocked(cache2,key4);
  if (useCommit)   mgr.commit();
 else   mgr.rollback();
  if (useCommit) {
    assertEquals(name,cache1.get(k));
    assertEquals("Should have replicated",name,cache2.get(k));
  }
 else {
    assertEquals(null,cache1.get(k));
    assertEquals("Should not have replicated",null,cache2.get(k));
  }
  cache2.remove(k);
  cache2.remove(key2);
  cache2.remove(key3);
  cache2.remove(key4);
}
