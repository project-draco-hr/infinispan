{
  ConfigurationBuilder builder=getDefaultClusteredCacheConfig(CacheMode.REPL_SYNC,false);
  createClusteredCaches(2,"replSync",builder);
  AdvancedCache<String,String> cache1=this.<String,String>cache(0,"replSync").getAdvancedCache();
  cache(1,"replSync").getAdvancedCache();
  Transport originalTransport=TestingUtil.extractGlobalComponent(cache1.getCacheManager(),Transport.class);
  RpcManagerImpl rpcManager=(RpcManagerImpl)TestingUtil.extractComponent(cache1,RpcManager.class);
  Transport mockTransport=spy(originalTransport);
  rpcManager.setTransport(mockTransport);
  cache1.put("k","v");
  verify(mockTransport).invokeRemotely(anyCollectionOf(Address.class),any(ReplicableCommand.class),eq(ResponseMode.SYNCHRONOUS_IGNORE_LEAVERS),anyLong(),any(ResponseFilter.class),any(DeliverOrder.class),anyBoolean());
  reset(mockTransport);
  cache1.withFlags(Flag.FORCE_ASYNCHRONOUS).put("k","v");
  verify(mockTransport).invokeRemotely(anyCollectionOf(Address.class),any(ReplicableCommand.class),eq(ResponseMode.ASYNCHRONOUS_WITH_SYNC_MARSHALLING),anyLong(),any(ResponseFilter.class),any(DeliverOrder.class),anyBoolean());
}
