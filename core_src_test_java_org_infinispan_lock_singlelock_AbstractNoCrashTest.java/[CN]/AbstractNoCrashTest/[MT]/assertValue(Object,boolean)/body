{
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return noPendingTransactions(0) && noPendingTransactions(1) && noPendingTransactions(2);
    }
  }
);
  final String expected=isRemove ? null : "v";
  assertEquals(cache(0).get(k),expected);
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return noPendingTransactions(0) && noPendingTransactions(1) && noPendingTransactions(2);
    }
  }
);
  assertEquals(cache(1).get(k),expected);
  assertEquals(cache(2).get(k),expected);
}
