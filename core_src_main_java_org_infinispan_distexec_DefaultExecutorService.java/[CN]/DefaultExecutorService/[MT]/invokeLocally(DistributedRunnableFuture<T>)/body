{
  log.debugf("Sending %s to self",future);
  try {
    Callable<Object> call=new Callable<Object>(){
      @Override public Object call() throws Exception {
        Map<Address,Response> rspMap=new HashMap<Address,Response>();
        Object result=null;
        future.getCommand().init(cache);
        try {
          result=future.getCommand().perform(null);
          rspMap.put(rpc.getAddress(),new SuccessfulResponse(result));
          result=rspMap;
        }
 catch (        Throwable e) {
          result=e;
        }
 finally {
          future.notifyDone();
        }
        return result;
      }
    }
;
    final FutureTask<Object> task=new FutureTask<Object>(call);
    future.setNetworkFuture((Future<T>)task);
    localExecutorService.submit(task);
  }
 catch (  Throwable e1) {
    log.localExecutionFailed(e1);
  }
}
