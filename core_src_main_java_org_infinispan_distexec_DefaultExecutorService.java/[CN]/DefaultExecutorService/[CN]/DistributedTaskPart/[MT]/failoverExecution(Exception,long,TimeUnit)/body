{
  final List<Address> executionCandidates=executionCandidates(getOwningTask());
  FailoverContext fc=new FailoverContext(){
    @Override public <K>List<K> inputKeys(){
      return (List<K>)getInputKeys();
    }
    @Override public Address executionFailureLocation(){
      return getExecutionTarget();
    }
    @Override public List<Address> executionCandidates(){
      return executionCandidates;
    }
    @Override public Throwable cause(){
      return cause;
    }
  }
;
  Address target=getOwningTask().getTaskFailoverPolicy().failover(fc);
  DistributedTaskPart<V> part=createDistributedTaskPart(owningTask,distCommand,getInputKeys(),target,failedOverCount);
  part.execute();
  return part.get(timeout,unit);
}
