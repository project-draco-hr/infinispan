{
  addNode(testAddresses[0],"m2","r0","s1");
  addNode(testAddresses[1],"m1","r0","s0");
  addNode(testAddresses[2],"m1","r0","s1");
  addNode(testAddresses[3],"m1","r1","s0");
  addNode(testAddresses[4],"m0","r0","s1");
  addNode(testAddresses[5],"m0","r1","s1");
  addNode(testAddresses[6],"m0","r1","s0");
  addNode(testAddresses[7],"m0","r0","s3");
  addNode(testAddresses[8],"m0","r0","s2");
  addNode(testAddresses[9],"m0","r0","s0");
  setAddresses();
  assertLocation(ch.locate(testAddresses[0],1),true,testAddresses[0]);
  assertLocation(ch.locate(testAddresses[1],1),true,testAddresses[1]);
  assertLocation(ch.locate(testAddresses[2],1),true,testAddresses[2]);
  assertLocation(ch.locate(testAddresses[3],1),true,testAddresses[3]);
  assertLocation(ch.locate(testAddresses[4],1),true,testAddresses[4]);
  assertLocation(ch.locate(testAddresses[5],1),true,testAddresses[5]);
  assertLocation(ch.locate(testAddresses[6],1),true,testAddresses[6]);
  assertLocation(ch.locate(testAddresses[7],1),true,testAddresses[7]);
  assertLocation(ch.locate(testAddresses[8],1),true,testAddresses[8]);
  assertLocation(ch.locate(testAddresses[9],1),true,testAddresses[9]);
  assertLocation(ch.locate(testAddresses[0],2),true,testAddresses[0],testAddresses[1]);
  assertLocation(ch.locate(testAddresses[1],2),true,testAddresses[1],testAddresses[2]);
  assertLocation(ch.locate(testAddresses[2],2),true,testAddresses[2],testAddresses[3]);
  assertLocation(ch.locate(testAddresses[3],2),true,testAddresses[3],testAddresses[4]);
  assertLocation(ch.locate(testAddresses[4],2),true,testAddresses[4],testAddresses[6]);
  assertLocation(ch.locate(testAddresses[5],2),true,testAddresses[5],testAddresses[6]);
  assertLocation(ch.locate(testAddresses[6],2),true,testAddresses[6],testAddresses[7]);
  assertLocation(ch.locate(testAddresses[7],2),true,testAddresses[7],testAddresses[8]);
  assertLocation(ch.locate(testAddresses[8],2),true,testAddresses[8],testAddresses[9]);
  assertLocation(ch.locate(testAddresses[9],2),true,testAddresses[9],testAddresses[0]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[0],2),false,testAddresses[1],testAddresses[9]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[1],2),false,testAddresses[0],testAddresses[2]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[2],2),false,testAddresses[3],testAddresses[1]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[3],2),false,testAddresses[4],testAddresses[2]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[4],2),false,testAddresses[6],testAddresses[3]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[5],2),false,testAddresses[6]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[6],2),false,testAddresses[4],testAddresses[7],testAddresses[5]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[7],2),false,testAddresses[8],testAddresses[6]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[8],2),false,testAddresses[9],testAddresses[7]);
  assertLocation(ch.getStateProvidersOnLeave(testAddresses[9],2),false,testAddresses[0],testAddresses[8]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[0],2),false,testAddresses[1],testAddresses[9]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[1],2),false,testAddresses[0],testAddresses[2]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[2],2),false,testAddresses[3],testAddresses[1]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[3],2),false,testAddresses[4],testAddresses[2]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[4],2),false,testAddresses[6],testAddresses[3]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[5],2),false,testAddresses[6]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[6],2),false,testAddresses[4],testAddresses[7],testAddresses[5]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[7],2),false,testAddresses[8],testAddresses[6]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[8],2),false,testAddresses[9],testAddresses[7]);
  assertLocation(ch.getStateProvidersOnJoin(testAddresses[9],2),false,testAddresses[0],testAddresses[8]);
  assertLocation(ch.locate(testAddresses[0],3),true,testAddresses[0],testAddresses[1],testAddresses[3]);
  assertLocation(ch.locate(testAddresses[1],3),true,testAddresses[1],testAddresses[2],testAddresses[4]);
  assertLocation(ch.locate(testAddresses[2],3),true,testAddresses[2],testAddresses[3],testAddresses[6]);
  assertLocation(ch.locate(testAddresses[3],3),true,testAddresses[3],testAddresses[4],testAddresses[5]);
  assertLocation(ch.locate(testAddresses[4],3),true,testAddresses[4],testAddresses[6],testAddresses[7]);
  assertLocation(ch.locate(testAddresses[5],3),true,testAddresses[5],testAddresses[6],testAddresses[7]);
  assertLocation(ch.locate(testAddresses[6],3),true,testAddresses[6],testAddresses[7],testAddresses[8]);
  assertLocation(ch.locate(testAddresses[7],3),true,testAddresses[7],testAddresses[8],testAddresses[9]);
  assertLocation(ch.locate(testAddresses[8],3),true,testAddresses[8],testAddresses[9],testAddresses[0]);
  assertLocation(ch.locate(testAddresses[9],3),true,testAddresses[9],testAddresses[0],testAddresses[2]);
}
