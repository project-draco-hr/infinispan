{
  addNode(testAddresses[0],"m0",null,null);
  addNode(testAddresses[1],"m0",null,null);
  addNode(testAddresses[2],"m1",null,null);
  addNode(testAddresses[3],"m1",null,null);
  addNode(testAddresses[4],"m2",null,null);
  addNode(testAddresses[5],"m2",null,null);
  setAddresses();
  assertLocation(testAddresses[0],1,true,testAddresses[0]);
  assertLocation(testAddresses[1],1,true,testAddresses[1]);
  assertLocation(testAddresses[2],1,true,testAddresses[2]);
  assertLocation(testAddresses[3],1,true,testAddresses[3]);
  assertLocation(testAddresses[4],1,true,testAddresses[4]);
  assertLocation(testAddresses[5],1,true,testAddresses[5]);
  assertLocation(testAddresses[0],2,true,testAddresses[0],testAddresses[2]);
  assertLocation(testAddresses[1],2,true,testAddresses[1],testAddresses[2]);
  assertLocation(testAddresses[2],2,true,testAddresses[2],testAddresses[4]);
  assertLocation(testAddresses[3],2,true,testAddresses[3],testAddresses[4]);
  assertLocation(testAddresses[4],2,true,testAddresses[4],testAddresses[0]);
  assertLocation(testAddresses[5],2,true,testAddresses[5],testAddresses[0]);
  assertLocation(testAddresses[0],3,true,testAddresses[0],testAddresses[2],testAddresses[4]);
  assertLocation(testAddresses[1],3,true,testAddresses[1],testAddresses[2],testAddresses[4]);
  assertLocation(testAddresses[2],3,true,testAddresses[2],testAddresses[4],testAddresses[0]);
  assertLocation(testAddresses[3],3,true,testAddresses[3],testAddresses[4],testAddresses[0]);
  assertLocation(testAddresses[4],3,true,testAddresses[4],testAddresses[0],testAddresses[2]);
  assertLocation(testAddresses[5],3,true,testAddresses[5],testAddresses[0],testAddresses[2]);
}
