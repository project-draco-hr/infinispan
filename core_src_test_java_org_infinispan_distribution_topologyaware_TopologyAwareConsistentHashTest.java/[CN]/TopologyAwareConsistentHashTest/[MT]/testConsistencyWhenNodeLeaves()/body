{
  addNode(a0,"m2","r0","s1");
  addNode(a1,"m1","r0","s0");
  addNode(a2,"m1","r0","s1");
  addNode(a3,"m1","r1","s0");
  addNode(a4,"m0","r0","s1");
  addNode(a5,"m0","r1","s1");
  addNode(a6,"m0","r1","s0");
  addNode(a7,"m0","r0","s3");
  addNode(a8,"m0","r0","s2");
  addNode(a9,"m0","r0","s0");
  setAddresses();
  List<Address> a0List=ch.locate(a0,3);
  List<Address> a1List=ch.locate(a1,3);
  List<Address> a2List=ch.locate(a2,3);
  List<Address> a3List=ch.locate(a3,3);
  List<Address> a4List=ch.locate(a4,3);
  List<Address> a5List=ch.locate(a5,3);
  List<Address> a6List=ch.locate(a6,3);
  List<Address> a7List=ch.locate(a7,3);
  List<Address> a8List=ch.locate(a8,3);
  List<Address> a9List=ch.locate(a9,3);
  for (  Address addr : addresses) {
    System.out.println("addr = " + addr);
    List<Address> addressCopy=(List<Address>)addresses.clone();
    addressCopy.remove(addr);
    ch.setCaches(addressCopy);
    checkConsistency(a0List,a0,addr,3);
    checkConsistency(a1List,a1,addr,3);
    checkConsistency(a2List,a2,addr,3);
    checkConsistency(a3List,a3,addr,3);
    checkConsistency(a4List,a4,addr,3);
    checkConsistency(a5List,a5,addr,3);
    checkConsistency(a6List,a6,addr,3);
    checkConsistency(a7List,a7,addr,3);
    checkConsistency(a8List,a8,addr,3);
    checkConsistency(a9List,a9,addr,3);
  }
}
