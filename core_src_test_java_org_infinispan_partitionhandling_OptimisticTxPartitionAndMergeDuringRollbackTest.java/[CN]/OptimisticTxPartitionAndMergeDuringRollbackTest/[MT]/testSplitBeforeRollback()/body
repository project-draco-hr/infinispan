{
  waitForClusterToForm(OPTIMISTIC_TX_CACHE_NAME);
  final KeyInfo keyInfo=createKeys(OPTIMISTIC_TX_CACHE_NAME);
  final Cache<Object,String> originator=cache(0,OPTIMISTIC_TX_CACHE_NAME);
  final DummyTransactionManager transactionManager=(DummyTransactionManager)originator.getAdvancedCache().getTransactionManager();
  transactionManager.begin();
  final DummyTransaction transaction=transactionManager.getTransaction();
  keyInfo.putFinalValue(originator);
  AssertJUnit.assertTrue(transaction.runPrepare());
  transactionManager.suspend();
  SplitMode.BOTH_DEGRADED.split(this);
  transactionManager.resume(transaction);
  transaction.runCommit(true);
  assertEventuallyNotLocked(cache(1,OPTIMISTIC_TX_CACHE_NAME),keyInfo.getKey1());
  assertLocked(cache(2,OPTIMISTIC_TX_CACHE_NAME),keyInfo.getKey2());
  mergeCluster();
  finalAsserts(OPTIMISTIC_TX_CACHE_NAME,keyInfo,INITIAL_VALUE);
}
