{
  takeSiteOffline(LON,NYC);
  assertOffline(LON,NYC);
  assertNoStateTransferInReceivingSite(NYC);
  assertNoStateTransferInSendingSite(LON);
  final int amountOfData=chunkSize(LON) * 4;
  for (int i=0; i < amountOfData; ++i) {
    cache(LON,0).put(key(i),value(0));
  }
  assertInSite(NYC,new AssertCondition<Object,Object>(){
    @Override public void assertInCache(    Cache<Object,Object> cache){
      assertTrue(cache.isEmpty());
    }
  }
);
  ControlledTransport controllerTransport=replaceTransport(cache(LON,0));
  controllerTransport.blockBefore(XSiteStatePushCommand.class);
  startStateTransfer(LON,NYC);
  controllerTransport.waitForCommandToBlock();
  assertEquals(XSiteAdminOperations.SUCCESS,extractComponent(cache(LON,0),XSiteAdminOperations.class).cancelPushState(NYC));
  controllerTransport.stopBlocking();
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return extractComponent(cache(LON,0),XSiteAdminOperations.class).getRunningStateTransfer().isEmpty();
    }
  }
,TimeUnit.SECONDS.toMillis(30));
  assertNoStateTransferInReceivingSite(NYC);
  assertNoStateTransferInSendingSite(LON);
  assertEquals(XSiteStateTransferManager.STATUS_CANCELED,extractComponent(cache(LON,0),XSiteAdminOperations.class).getPushStateStatus().get(NYC));
}
