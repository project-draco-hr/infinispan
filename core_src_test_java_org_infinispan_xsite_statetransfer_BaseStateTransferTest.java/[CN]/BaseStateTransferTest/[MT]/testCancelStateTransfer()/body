{
  takeSiteOffline(LON,NYC);
  assertOffline(LON,NYC);
  assertNoStateTransferInReceivingSite(NYC);
  assertNoStateTransferInSendingSite(LON);
  DistributionManager dm0=cache(LON,0).getAdvancedCache().getDistributionManager();
  Address coordLON=cache(LON,0).getCacheManager().getAddress();
  Set<Object> keysOnCoordinator=new HashSet<>();
  int i=0;
  while (keysOnCoordinator.size() < chunkSize(LON)) {
    Object key=key(i);
    cache(LON,0).put(key,value(0));
    if (dm0.getPrimaryLocation(key).equals(coordLON)) {
      keysOnCoordinator.add(key);
    }
    ++i;
  }
  int numKeys=i;
  log.debugf("Coordinator %s is primary owner for %d keys: %s",coordLON,keysOnCoordinator.size(),keysOnCoordinator);
  assertInSite(NYC,new AssertCondition<Object,Object>(){
    @Override public void assertInCache(    Cache<Object,Object> cache){
      assertTrue(cache.isEmpty());
    }
  }
);
  ControlledTransport controllerTransport=replaceTransport(cache(LON,0));
  controllerTransport.blockBefore(XSiteStatePushCommand.class);
  startStateTransfer(LON,NYC);
  controllerTransport.waitForCommandToBlock();
  assertEquals(XSiteAdminOperations.SUCCESS,extractComponent(cache(LON,0),XSiteAdminOperations.class).cancelPushState(NYC));
  controllerTransport.stopBlocking();
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return extractComponent(cache(LON,0),XSiteAdminOperations.class).getRunningStateTransfer().isEmpty();
    }
  }
,TimeUnit.SECONDS.toMillis(30));
  assertNoStateTransferInReceivingSite(NYC);
  assertNoStateTransferInSendingSite(LON);
  assertEquals(XSiteStateTransferManager.STATUS_CANCELED,extractComponent(cache(LON,0),XSiteAdminOperations.class).getPushStateStatus().get(NYC));
  controllerTransport.blockBefore(XSiteStatePushCommand.class);
  startStateTransfer(LON,NYC);
  controllerTransport.waitForCommandToBlock();
  assertEquals(XSiteStateTransferManager.STATUS_SENDING,extractComponent(cache(LON,0),XSiteAdminOperations.class).getPushStateStatus().get(NYC));
  controllerTransport.stopBlocking();
  eventually(new Condition(){
    @Override public boolean isSatisfied() throws Exception {
      return extractComponent(cache(LON,0),XSiteAdminOperations.class).getRunningStateTransfer().isEmpty();
    }
  }
,TimeUnit.SECONDS.toMillis(30));
  assertNoStateTransferInReceivingSite(NYC);
  assertNoStateTransferInSendingSite(LON);
  assertInSite(NYC,new AssertCondition<Object,Object>(){
    @Override public void assertInCache(    Cache<Object,Object> cache){
      for (int i=0; i < numKeys; ++i) {
        assertEquals(value(0),cache.get(key(i)));
      }
    }
  }
);
}
