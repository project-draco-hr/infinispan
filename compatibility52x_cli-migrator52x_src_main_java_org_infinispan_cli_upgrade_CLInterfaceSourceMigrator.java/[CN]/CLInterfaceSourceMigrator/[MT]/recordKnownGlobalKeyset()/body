{
  try {
    CacheMode cm=cache.getCacheConfiguration().clustering().cacheMode();
    Set<Object> keys;
    if (cm.isReplicated() || !cm.isClustered()) {
      keys=new HashSet<Object>(cache.keySet());
    }
 else {
      DistributedExecutorService des=new DefaultExecutorService(cache);
      List<Future<Set<Object>>> keysets=des.submitEverywhere(new GlobalKeysetTask(cache));
      Set<Object> combinedKeyset=new HashSet<Object>();
      for (      Future<Set<Object>> keyset : keysets)       combinedKeyset.addAll(keyset.get());
      keys=combinedKeyset;
    }
    keys.remove(KNOWN_KEY);
    cache.put(KNOWN_KEY,keys);
  }
 catch (  InterruptedException e) {
    Thread.currentThread().interrupt();
  }
catch (  ExecutionException e) {
    throw new CacheException("Unable to record all known keys",e);
  }
}
