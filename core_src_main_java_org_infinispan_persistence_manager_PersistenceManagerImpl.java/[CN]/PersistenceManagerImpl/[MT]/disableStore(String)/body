{
  if (enabled) {
    storesMutex.writeLock().lock();
    try {
      Iterator<CacheLoader> clIt=loaders.iterator();
      while (clIt.hasNext()) {
        CacheLoader l=clIt.next();
        if (undelegate(l).getClass().getName().equals(storeType))         clIt.remove();
      }
      Iterator<CacheWriter> cwIt=writers.iterator();
      while (cwIt.hasNext()) {
        CacheWriter w=cwIt.next();
        if (undelegate(w).getClass().getName().equals(storeType))         cwIt.remove();
      }
    }
  finally {
      storesMutex.writeLock().unlock();
    }
    if (loaders.isEmpty() && writers.isEmpty()) {
      InterceptorChain chain=cache.getComponentRegistry().getComponent(InterceptorChain.class);
      List<CommandInterceptor> loaderInterceptors=chain.getInterceptorsWhichExtend(CacheLoaderInterceptor.class);
      if (loaderInterceptors.isEmpty()) {
        log.persistenceWithoutCacheLoaderInterceptor();
      }
 else {
        for (        CommandInterceptor interceptor : loaderInterceptors) {
          ((CacheLoaderInterceptor)interceptor).disableInterceptor();
        }
      }
      List<CommandInterceptor> writerInterceptors=chain.getInterceptorsWhichExtend(CacheWriterInterceptor.class);
      if (writerInterceptors.isEmpty()) {
        log.persistenceWithoutCacheWriteInterceptor();
      }
 else {
        for (        CommandInterceptor interceptor : writerInterceptors) {
          ((CacheWriterInterceptor)interceptor).disableInterceptor();
        }
      }
      removeInterceptors(loaderInterceptors);
      removeInterceptors(writerInterceptors);
      enabled=false;
    }
  }
}
